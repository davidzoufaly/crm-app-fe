{"version":3,"file":"static/webpack/static/development/pages/settings.js.af0cc646b54a45e54f95.hot-update.js","sources":["webpack:///./components/CustomClientFields.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({ fields, refreshList }: any) => {\n  const blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false,\n    fieldOptions: []\n  };\n\n  useEffect(() => {\n    console.log(editedField);\n  })\n\n  const [editedField, setEditedField] = useState<any>(blankFieldObject);\n  const [displayComponent, setDisplayComponent] = useState(false);\n  const [isNew, setIsNew] = useState(true);\n\n  const changeDisplayComponent = () => {\n    setIsNew(true);\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n\n  }\n\n  const saveEditedField = () => {\n    const fieldIsUpdated = async () => {\n      const res = await axios({\n        method: \"put\",\n        url: `${globalVars.serverURL}/fields/${editedField.id}`,\n        data: editedField,\n        responseType: \"json\"\n      });\n      const data = await res.data;\n      if(data.msg === \"Success\") {\n        setDisplayComponent(false);\n        setEditedField(blankFieldObject);\n        refreshList();\n      }\n    }\n\n    const fieldIsCreated = async () => {\n      const res = await axios({\n        method: \"post\",\n        url: `${globalVars.serverURL}/fields/`,\n        data: editedField,\n        responseType: \"json\"\n      });\n      const data = await res.data;\n      if(data.msg === \"Success\") {\n        refreshList();\n        setDisplayComponent(false);\n        setEditedField(blankFieldObject);\n      }\n    }\n    isNew ? fieldIsCreated() : fieldIsUpdated();\n  };\n\n  const deleteField = async (event: any) => {\n    const id = event.target.id;\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const onNameChange = (event: any) => {\n    setEditedField({ ...editedField, fieldName: event.target.value });\n    console.log(editedField);\n  };\n\n  const onSelectChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    });\n  };\n\n  const handleOptionSpawn = () => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: [...editedField.fieldOptions, { id: uniqid(), value: \"\" }]\n    });\n  };\n\n  const onOptionChange = (event: any) => {\n    console.log(\"gii\");\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id === e.id ? (e.value = event.target.value) : e\n      )\n    });\n  };\n\n  const onOptionDelete = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id !== e.id ? e : null\n      )\n    });\n  };\n\n  const setupEditedField = (obj?: any) => {\n    setEditedField(obj);\n    setDisplayComponent(true);\n    setIsNew(false);\n  };\n\n  return (\n    <div>\n      <h2>Custom Client Fields</h2>\n      <CustomFieldsList\n        deleteField={deleteField}\n        fields={fields}\n        setupEditedField={setupEditedField}\n      />\n      <AddOrEditField\n        editedField={editedField}\n        refreshList={refreshList}\n        saveEditedField={saveEditedField}\n        onNameChange={onNameChange}\n        onSelectChange={onSelectChange}\n        handleOptionSpawn={handleOptionSpawn}\n        onOptionChange={onOptionChange}\n        onOptionDelete={onOptionDelete}\n        displayComponent={displayComponent}\n        changeDisplayComponent={changeDisplayComponent}\n      />\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAeA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAacA;AACA;AACA;;;;A","sourceRoot":""}