{"version":3,"file":"static/webpack/static/development/pages/index.js.11ca9608f86429a79e49.hot-update.js","sources":["webpack:///./components/homepage/LoginForm.tsx"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\n\nconst LoginForm = () => {\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\n  const userContext = useContext(UserContext);\n\n  const onChange = e => {\n    e.target.name === \"username\"\n      ? setUser({ ...user, username: e.target.value })\n      : setUser({ ...user, password: e.target.value });\n  };\n\n  const onLogin = async () => {\n    const userRes = await axios({\n      method: \"POST\",\n      data: user,\n      url: `${globalVars.serverURL}/users`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n    if (userData.msg === \"Success\") {\n      userContext.setUser(user.username);\n    } else {\n      alert(\"Incorrect username or password\");\n    }\n  };\n\n  return (\n    <>\n      <h2>Login</h2>\n      <form>\n        <TextInput\n          onChange={onChange}\n          type=\"text\"\n          value={user.username}\n          text=\"username\"\n          title={languages.en.username}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={user.password}\n          text=\"password\"\n          title={languages.en.password}\n        />\n        <LoginButton onClick={onLogin} text={languages.en.register} />\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}