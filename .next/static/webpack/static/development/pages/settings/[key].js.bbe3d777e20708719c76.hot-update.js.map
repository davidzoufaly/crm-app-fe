{"version":3,"file":"static/webpack/static/development/pages/settings/[key].js.bbe3d777e20708719c76.hot-update.js","sources":["webpack:///./components/settings/webform/WebFormVisibleOrNot.tsx"],"sourcesContent":["import { addVisibleSelect, showOptionsOnClick } from \"../../../actions/fieldsAction\";\nimport languages from \"../../../library/languages\";\nimport { Typography, Box, ButtonÂ } from \"@material-ui/core\";\n\nconst WebFormVisibleOrNot = ({ state, dispatch, addVisibleSelect, showOptionsOnClick, counter, setCounter } : any) => {\n\n  const VisibleOrNot = state.map(({fieldName, fieldFormVisible, _id, pause}) =>\n    fieldFormVisible === null ? (\n      pause ? (\n        <Box key={_id} mb=\"2rem\">\n          <Typography gutterBottom component=\"h4\" variant=\"h6\">\n            {languages.en.shouldBe} <strong>{fieldName}</strong> {languages.en.visibleInForm}?\n          </Typography>\n          <Button id={fieldName} variant=\"contained\" color=\"primary\" style={{marginRight: \"1rem\"}} onClick={() => addVisibleSelect(dispatch, setCounter, counter, event)}>\n            {languages.en.yes}\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => showOptionsOnClick(dispatch)}>{languages.en.no}</Button>\n        </Box>\n      ) : null\n    ) : null\n  );\n\n  return (\n    <>\n    {VisibleOrNot}\n    </>\n  );\n};\n\nexport default WebFormVisibleOrNot;\n"],"mappings":";;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAgBA;AAKA;AACA;AACA;;;;A","sourceRoot":""}