{"version":3,"file":"static/webpack/static/development/pages/settings/[key].js.f3272ee938f8befbffa1.hot-update.js","sources":["webpack:///./components/Header.tsx"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport {\n  Grid,\n  Button,\n  Toolbar,\n  AppBar,\n  Box,\n  IconButton\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    menuButton: {\n      marginRight: theme.spacing(2),\n      color: \"white\"\n    },\n    title: {\n      flexGrow: 1\n    },\n    toolBar: {\n      padding: 0\n    },\n    mobilMenuButton: {\n      color: \"white\",\n      display: \"none\",\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    menuGrid: {\n      flexDirection: \"row\",\n      [theme.breakpoints.down(\"sm\")]: {\n        flexDireciton: \"column\"\n      }\n    },\n    navMobil: {\n      [theme.breakpoints.down(\"sm\")]: {\n        position: \"absolute\",\n        left: 0,\n        backgroundColor: \"black\",\n        display: \"block\",\n        width: \"100%\",\n        top: \"100%\",\n        zIndex: -1,\n        padding: \"2rem\",\n      }\n    },\n    navDesktop: {\n      position: \"relative\",\n      display: \"none\"\n    }\n  })\n);\n\nconst Header = () => {\n  const classes = useStyles({});\n  const user = useContext(UserContext);\n  const [mobilMenu, setMobilMenu] = useState(false);\n\n  const toggleMenu = () => {\n    console.log(mobilMenu);\n    setMobilMenu(prevState => !prevState);\n  };\n\n  return (\n    <AppBar position=\"fixed\" style={{zIndex: 1}}>\n      <Container maxWidth=\"lg\">\n        <Toolbar className={classes.toolBar} style={{position: \"relative\"}}>\n          <Box display=\"flex\" width=\"100%\" justifyContent=\"space-between\">\n            <IconButton\n              onClick={toggleMenu}\n              className={classes.mobilMenuButton}\n            >\n              {!mobilMenu ? <MenuIcon /> : <CloseIcon />}\n            </IconButton>\n            <Box\n              component=\"nav\"\n              className={mobilMenu ? classes.navMobil : classes.navDesktop}\n            >\n              <Grid\n                container\n                direction={mobilMenu ? \"column\" : \"row\"}\n                justify=\"center\"\n              >\n                <Grid item>\n                  <Link\n                    href=\"/dashboard/[key]\"\n                    as={`/dashboard/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<DashboardIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.dashboard}\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    href=\"/clients/[key]\"\n                    as={`/clients/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<PeopleAltIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.clients}\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    href=\"/emails/[key]\"\n                    as={`/emails/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<EmailIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.emails}\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    href=\"/settings/[key]\"\n                    as={`/settings/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<SettingsIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.settings}\n                    </Button>\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n          <Button\n            className={classes.menuButton}\n            onClick={() => user.logoutUser()}\n            startIcon={<ExitToAppIcon />}\n          >\n            {languages.en.logout}\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AADA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AAFA;AApCA;AADA;AACA;AA2CA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}