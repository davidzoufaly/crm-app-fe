{"version":3,"file":"static/webpack/static/development/pages/settings/[key].js.842caa45444d34d4bcd2.hot-update.js","sources":["webpack:///./components/settings/webform/WebForm.tsx"],"sourcesContent":["import { useReducer, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormVisibleOrNot from \"./WebFormVisibleOrNot\";\nimport WebFormSubSelect from \"./WebFormSubSelect\";\nimport WebFormButtons from \"./WebFormButtons\";\nimport globalVars from \"../../../library/globalVariables\"\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formWrapper: {\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      boxShadow: theme.shadows[\"1\"],\n      padding: theme.spacing(3),\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\",\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\"\n      }\n    },\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  })\n);\n\nconst WebForm = ({ fields }) => {\n  \n  const initCounterValue = fields.map(e => e.order).sort((a,b) => b > a ? 1 : -1)[0];\n  const classes = useStyles({});\n  const user = useContext(UserContext);\n\n  const [counter, setCounter] = useState(initCounterValue);\n  const [webFields, setWebFields] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true, order: counter }\n            : field\n        );\n\n      case \"addVisibleSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? {\n                ...field,\n                fieldInForm: true,\n                fieldFormVisible: true,\n                pause: false,\n                order: counter\n              }\n            : field\n        );\n\n      case \"addNotVisibleValue\":\n        return state.map(field =>\n          field.pause\n            ? {\n                ...field,\n                fieldFormVisible: false\n              }\n            : field\n        );\n\n      case \"addHiddenSelect\":\n        return state.map(field =>\n          field.pause\n            ? {\n                ...field,\n                fieldInForm: true,\n                pause: false,\n                order: counter,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.value === action.payload.optionValue\n                    ? { ...option, preselected: true }\n                    : option\n                )\n              }\n            : field\n        );\n\n      case \"pauseSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, pause: true }\n            : field\n        );\n\n      case \"remove\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? {\n                ...field,\n                fieldInForm: false,\n                fieldFormVisible: null,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.preselected ? { ...option, preselected: null } : option\n                )\n              }\n            : field\n        );\n      default:\n        return state;\n    }\n  }, fields);\n\n\n  const addNotSelect = e => {\n    webFields.map(field => {\n      if (field.fieldName === e.target.value) {\n        if (field.fieldType !== \"select\") {\n          setWebFields({\n            type: \"add\",\n            payload: { fieldName: e.target.value }\n          });\n          setCounter(prevCount => prevCount + 1);\n        } else {\n          setWebFields({\n            type: \"pauseSelect\",\n            payload: { fieldName: e.target.value }\n          });\n        }\n      }\n    });\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: { fieldName: e.currentTarget.id }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: { optionValue: e.target.value }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: { fieldName: e.currentTarget.id }\n    });\n  };\n\n  const showOptionsOnClick = () => {\n    setWebFields({\n      type: \"addNotVisibleValue\"\n    });\n  };\n\n  const saveFormAuto = async () =>Â {\n    await axios({\n          method: \"PUT\",\n          url: `${globalVars.serverURL}/fields`,\n          params: {key: user.user.userkey},\n          data: webFields,\n          responseType: \"json\"\n      })\n  }\n\n  useEffect(() => {\n    //save fields (form) on change\n    webFields !== fields\n    ? saveFormAuto()\n    : null\n}, [webFields])\n\n\n  return (\n    <Box className={classes.formWrapper}>\n    <form>\n      <WebFormSelect webFields={webFields} addNotSelect={addNotSelect} />\n      <WebFormVisibleOrNot\n        webFields={webFields}\n        addVisibleSelect={addVisibleSelect}\n        showOptionsOnClick={showOptionsOnClick}\n      />\n      <WebFormSubSelect\n        webFields={webFields}\n        addHiddenSelect={addHiddenSelect}\n      />\n      <WebFormList webFields={webFields} removeFromList={removeFromList} />\n      <WebFormButtons webFields={webFields}/>\n    </form>\n    </Box>\n  );\n};\n\nexport default WebForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AADA;AAIA;AACA;AADA;AAZA;AADA;AACA;AAkBA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AACA;AADA;AAQA;AACA;AACA;AAAA;AAEA;AAAA;AADA;AADA;AACA;AAKA;AACA;AAAA;AAIA;AACA;AACA;AACA;AANA;AADA;AACA;AAWA;AACA;AAAA;AAIA;AAHA;AADA;AACA;AAQA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AANA;AADA;AACA;AAeA;AACA;AAAA;AAEA;AADA;AADA;AACA;AAKA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AADA;AALA;AADA;AACA;AAWA;AACA;AArEA;AAuEA;AA/EA;AAAA;AACA;AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AAGA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}