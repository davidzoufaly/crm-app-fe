{"version":3,"file":"static/webpack/static/development/pages/settings/[key].js.9bc916c0468bb6ec7df1.hot-update.js","sources":["webpack:///./actions/fieldsAction.tsx","webpack:///./components/settings/DefaultFieldsSection.tsx","webpack:///./components/settings/customFields/CustomFields.tsx","webpack:///./components/settings/customFields/CustomFieldsList.tsx","webpack:///./components/settings/customFields/CustomFieldsSection.tsx","webpack:///./components/settings/webform/WebForm.tsx","webpack:///./components/settings/webform/WebFormButtons.tsx","webpack:///./components/settings/webform/WebFormList.tsx","webpack:///./components/settings/webform/WebFormSection.tsx","webpack:///./components/settings/webform/WebFormSelect.tsx","webpack:///./components/settings/webform/WebFormSubSelect.tsx","webpack:///./components/settings/webform/WebFormVisibleOrNot.tsx","webpack:///./library/languages.tsx","webpack:///./pages/settings/[key].tsx","webpack:///./reducers/fieldsReducer.tsx"],"sourcesContent":["export const addField = (dispatch, obj) => {\n  dispatch({\n    type: \"addNewField\",\n    payload: { obj }\n  });\n};\n\nexport const deleteField = (dispatch, id) => {\n  dispatch({\n    type: \"deleteField\",\n    payload: { id }\n  });\n};\n\nexport const handleAddingToWF = (dispatch, state, counter, setCounter, e) => {\n  state.map(field => {\n    if (field.fieldName === e.target.getAttribute(\"data-value\")) {\n      if (field.fieldType !== \"select\") {\n        dispatch({\n          type: \"addToWF\",\n          payload: { fieldName: e.target.getAttribute(\"data-value\"), counter }\n        });\n        setCounter(prevCount => prevCount + 1);\n      } else {\n        dispatch({\n          type: \"pauseSelect\",\n          payload: { fieldName: e.target.getAttribute(\"data-value\") }\n        });\n      }\n    }\n  });\n};\nexport const addVisibleSelect = (dispatch, setCounter, counter) => {\n  dispatch({\n    type: \"addVisibleSelectWF\",\n    payload: { counter }\n  });\n  setCounter(prevCount => prevCount + 1);\n};\n\nexport const addHiddenSelect = (dispatch, setCounter, counter, e) => {\n  dispatch({\n    type: \"addHiddenSelectWF\",\n    payload: { optionValue: e.target.getAttribute(\"data-value\"), counter }\n  });\n  setCounter(prevCount => prevCount + 1);\n};\n\nexport const removeFromList = (dispatch, e) => {\n  console.log(e.target);\n  console.log(e.currentTarget);\n  dispatch({\n    type: \"removeFromWF\",\n    payload: { fieldName: e.target.id }\n  });\n};\n\nexport const showOptionsOnClick = dispatch => {\n  dispatch({\n    type: \"addNotVisibleValue\"\n  });\n};\n","import languages from \"../../library/languages\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport { Checkbox, Typography, FormControlLabel, Box } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst DefaultClientFieldsSection = ({\n  state,\n  toggleSection,\n  sections\n}: any) => {\n  const defaultFieldNames = state\n    .filter(({ fieldPermanent }: any) => fieldPermanent === true)\n    .map(({ fieldName, _id }: any) => {\n      return (\n        <Card key={_id}>\n          <CardContent>\n          <Typography variant=\"h6\" component=\"h3\">{fieldName}</Typography>\n          </CardContent>\n        </Card>\n      );\n    });\n\n  return (\n    <Box my=\"2rem\">\n      <FormControlLabel\n        control={\n          <Checkbox\n            name=\"defaultFieldNames\"\n            onChange={toggleSection}\n             // toggle visibility of section ->Â default visible\n            checked={\n              sections.defaultFieldNames !== undefined ? sections.defaultFieldNames : true\n            }\n            icon={<KeyboardArrowRightIcon />}\n            checkedIcon={<KeyboardArrowDownIcon />}\n          />\n        }\n        label={\n          <Typography variant=\"h4\" component=\"h2\">\n            {languages.en.defaultClientFields}\n          </Typography>\n        }\n      />\n      {sections.defaultFieldNames || sections.defaultFieldNames === undefined ? (\n        <Box\n          display=\"flex\"\n          flexWrap=\"wrap\"\n          mt=\"1rem\"\n          mb=\"5rem\"\n          textAlign=\"center\"\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fill, minmax(200px, 1fr))\",\n            gridGap: \"1rem\"\n          }}\n        >\n          {defaultFieldNames}\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\nexport default DefaultClientFieldsSection;\n","import { useState, useReducer, useContext } from \"react\";\nimport axios from \"axios\";\nimport uniqid from \"uniqid\";\nimport generateUniqueId from \"generate-unique-id\";\nimport AddOrEditField from \"./AddOrEditField\";\nimport UserContext from \"../../UserContext\";\nimport CustomFieldsList from \"./CustomFieldsList\";\nimport SelectFieldOptions from \"./SelectFieldOptions\";\nimport globalVars from \"../../../library/globalVariables\";\nimport { Box } from \"@material-ui/core\";\nimport { addField, deleteField } from \"../../../actions/fieldsAction\";\n\nconst CustomFields = ({ state, dispatch }: any) => {\n  const blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldOptions: [],\n    fieldFormVisible: null,\n    _id: generateUniqueId({\n      length: 24,\n      useNumbers: true,\n      useLetters: false,\n      includeSymbols: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n    })\n  };\n\n  const user = useContext(UserContext);\n  const [displayComponent, setDisplayComponent] = useState(false);\n\n  const [editedField, setEditedField] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"fieldNameChange\":\n        return {\n          ...state,\n          fieldName: action.payload.value\n        };\n      case \"selectValueChange\":\n        return {\n          ...state,\n          fieldType: action.payload.value\n        };\n      case \"newOptionSpawn\":\n        return {\n          ...state,\n          fieldOptions: [...state.fieldOptions, { id: uniqid(), value: \"\" }]\n        };\n      case \"clear\":\n        return blankFieldObject;\n      case \"optionValueChange\":\n        return {\n          ...state,\n          fieldOptions: state.fieldOptions.map((el: any) =>\n            el.id === action.payload.id\n              ? { ...el, value: action.payload.value }\n              : el\n          )\n        };\n      case \"optionDelete\":\n        // if option with preselected in form being delete, remove field from form\n        return state.fieldInForm &&\n          state.fieldOptions.some(\n            el => el.id === action.payload.id && el.preselected\n          )\n          ? {\n              ...state,\n              fieldInForm: false,\n              fieldOptions: state.fieldOptions.filter(\n                e => e.id !== action.payload.id\n              )\n            }\n          : {\n              ...state,\n              fieldOptions: state.fieldOptions.filter(\n                e => e.id !== action.payload.id\n              )\n            };\n      case \"setWithPaylod\":\n        return action.payload.obj;\n\n      default:\n        return state;\n    }\n  }, blankFieldObject);\n\n  const fieldMethods = {\n    onNameChange(event: any) {\n      setEditedField({\n        type: \"fieldNameChange\",\n        payload: { value: event.target.value }\n      });\n    },\n    onSelectChange(event: any) {\n      setEditedField({\n        type: \"selectValueChange\",\n        payload: { value: event.target.value }\n      });\n    },\n    handleOptionSpawn(e) {\n      e.preventDefault();\n      setEditedField({\n        type: \"newOptionSpawn\"\n      });\n    },\n    toggleDisplayComponent() {\n      displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n      setEditedField({ type: \"clear\" });\n    },\n    onOptionDelete(event: any) {\n      setEditedField({\n        type: \"optionDelete\",\n        payload: { id: event.currentTarget.id }\n      });\n    },\n    onOptionChange(id, event) {\n      setEditedField({\n        type: \"optionValueChange\",\n        payload: { value: event.target.value, id }\n      });\n    },\n    setupEditedField(obj: any) {\n      setEditedField({\n        type: \"setWithPaylod\",\n        payload: { obj }\n      });\n      !displayComponent ? setDisplayComponent(true) : null;\n    },\n    saveEditedField(e) {\n      e.preventDefault();\n\n      const fieldIsUpdated = async () => {\n        const { fieldName, fieldType, fieldOptions, _id } = editedField;\n        const res = await axios({\n          method: \"PUT\",\n          url: `${globalVars.serverURL}/fields/${_id}`,\n          params: { key: user.user.userkey },\n          data: { fieldName, fieldType, fieldOptions },\n          responseType: \"json\"\n        });\n        const data = await res.data;\n        if (data.msg === globalVars.msgSuccess) {\n          reset();\n        }\n      };\n\n      const fieldIsCreated = async () => {\n        const res = await axios({\n          method: \"POST\",\n          params: { key: user.user.userkey },\n          url: `${globalVars.serverURL}/fields/`,\n          data: editedField,\n          responseType: \"json\"\n        });\n        const data = await res.data;\n        if (data.msg === globalVars.msgSuccess) {\n          reset();\n        }\n      };\n      state.some(field => field._id === editedField._id)\n        ? fieldIsUpdated()\n        : fieldIsCreated();\n    }\n  };\n\n  const reset = () => {\n    setDisplayComponent(false);\n    addField(dispatch, editedField);\n    setEditedField({ type: \"clear\" });\n  };\n\n  const deleteFieldRes = async (id: any) => {\n    const res = await axios({\n      method: \"DELETE\",\n      params: { key: user.user.userkey },\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === globalVars.msgSuccess ? deleteField(dispatch, id) : null;\n  };\n\n  return (\n    <Box mt=\"1rem\" mb=\"5rem\">\n      <CustomFieldsList\n        deleteFieldRes={deleteFieldRes}\n        state={state}\n        setupEditedField={fieldMethods.setupEditedField}\n      />\n      <AddOrEditField\n        editedField={editedField}\n        displayComponent={displayComponent}\n        fieldMethods={fieldMethods}\n        handleOption={\n          <SelectFieldOptions\n            options={editedField.fieldOptions}\n            fieldMethods={fieldMethods}\n          />\n        }\n      />\n    </Box>\n  );\n};\n\nexport default CustomFields;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Fab } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      textAlign: \"center\",\n      minWidth: \"280px\",\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"100%\"\n      }\n    },\n    list: {\n      padding: 0,\n      lineHeight: \"14px\",\n      margin: \"auto\",\n      marginBottom: theme.spacing(1)\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    },\n    cardWrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      height: \"100%\"\n    },\n    listItemIcon: {\n      minWidth: 0,\n      paddingRight: theme.spacing(1),\n      color: \"black\"\n    }\n  })\n);\n\nconst CustomFields = ({ setupEditedField, deleteFieldRes, state}: any) => {\n  const classes = useStyles({});\n\n  const separatedCustomFields = state\n    .filter(({ fieldPermanent }: any) => !fieldPermanent)\n    .map(({ fieldName, _id, fieldType, fieldOptions, fieldInForm, fieldFormVisible, order }: any) => {\n      const options = fieldOptions.map((e: any) => {\n        return (\n          <ListItem key={e.id}>\n            <ListItemText primary={e.value} />\n          </ListItem>\n        );\n      });\n\n      return (\n        <Grid item key={_id} className={classes.card}>\n          <Card style={{ height: \"100%\" }}>\n            <CardContent className={classes.cardWrapper}>\n              <Box>\n                <Typography variant=\"h6\" component=\"h3\">\n                  {fieldName}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                  ({fieldType.toLowerCase()})\n                </Typography>\n                {fieldType === \"select\" && fieldOptions.length > 0 ? (\n                  <Box>\n                    <List className={classes.list} dense>\n                      {options}\n                    </List>\n                  </Box>\n                ) : null}\n              </Box>\n              <Box>\n                <Box width=\"40%\" mt=\"1rem\">\n                  <Grid container spacing={1}>\n                    <Grid item xs={6}>\n                      <Fab\n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={() =>\n                          setupEditedField({\n                            fieldName,\n                            fieldType,\n                            fieldPermanent: false,\n                            fieldInForm,\n                            fieldFormVisible,\n                            fieldOptions,\n                            order,\n                            _id: _id\n                          })\n                        }\n                      >\n                        <EditIcon />\n                      </Fab>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Fab\n                        size=\"small\"\n                        color=\"secondary\"\n                        onClick={() => deleteFieldRes(_id)}\n                      >\n                        <DeleteIcon />\n                      </Fab>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n      );\n    });\n\n  return (\n    <Grid container spacing={2}>\n      {separatedCustomFields}\n    </Grid>\n  );\n};\n\nexport default CustomFields;\n","import CustomFields from \"./CustomFields\";\nimport languages from \"../../../library/languages\";\nimport { Checkbox, Typography, FormControlLabel, Box } from \"@material-ui/core\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\n\nconst CustomFieldsSection = ({\n  toggleSection,\n  sections,\n  dispatch,\n  state\n}: any) => (\n  <Box my=\"2rem\">\n    <FormControlLabel\n      control={\n        <Checkbox\n          onChange={toggleSection}\n          name=\"customFields\"\n          id=\"custom-fields\"\n          // toggle visibility of section\n          checked={sections.customFields !== undefined ? sections.customFields : true}\n          icon={<KeyboardArrowRightIcon />}\n          checkedIcon={<KeyboardArrowDownIcon />}\n        />\n      }\n      label={\n        <Typography variant=\"h4\" component=\"h2\">\n          {languages.en.customClientFields}\n        </Typography>\n      }\n    />\n    {sections.customFields || sections.customFields === undefined ? (\n      <CustomFields state={state} dispatch={dispatch}/>\n    ) : null}\n  </Box>\n);\n\nexport default CustomFieldsSection;\n","import { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormVisibleOrNot from \"./WebFormVisibleOrNot\";\nimport WebFormSubSelect from \"./WebFormSubSelect\";\nimport WebFormButtons from \"./WebFormButtons\";\nimport globalVars from \"../../../library/globalVariables\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formWrapper: {\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      boxShadow: theme.shadows[\"1\"],\n      padding: theme.spacing(3),\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\",\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\"\n      }\n    },\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  })\n);\n\nconst WebForm = ({state, dispatch }) => {\n  const initCounterValue = state\n    .map(e => e.order)\n    .sort((a, b) => (b > a ? 1 : -1))[0];\n  const classes = useStyles({});\n  const user = useContext(UserContext);\n  const [counter, setCounter] = useState(initCounterValue + 1);\n\n  const saveFormAuto = async () => {\n    await axios({\n      method: \"PUT\",\n      url: `${globalVars.serverURL}/fields`,\n      params: { key: user.user.userkey },\n      data: state,\n      responseType: \"json\"\n    });\n  };\n\n  useEffect(() => {\n    // save fields (form) on change\n    saveFormAuto();\n  }, [state]);\n\n  return (\n    <Box className={classes.formWrapper}>\n      <form>\n        <WebFormSelect\n          state={state}\n          counter={counter}\n          setCounter={setCounter}\n          dispatch={dispatch}\n        />\n        <WebFormVisibleOrNot\n          state={state}\n          dispatch={dispatch}\n          counter={counter}\n          setCounter={setCounter}\n          />\n        <WebFormSubSelect\n          state={state}\n          dispatch={dispatch}\n          counter={counter}\n          setCounter={setCounter}\n        />\n        <WebFormList state={state} dispatch={dispatch} />\n        <WebFormButtons state={state} />\n      </form>\n    </Box>\n  );\n};\n\nexport default WebForm;\n","import axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport globalVars from \"../../../library/globalVariables\";\nimport languages from \"../../../library/languages\";\nimport { useContext, useRef } from \"react\";\nimport {Button, Box, Typography} from \"@material-ui/core\"\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst WebFormButtons = ({ state }: any) => {\n\n  const user = useContext(UserContext);\n  const showTip = useRef(null);\n\n  const onDownload = async () => {\n    const res = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/webform/`,\n      params: {key: user.user.userkey},\n      data: state,\n      responseType: \"blob\"\n    });\n    const url = await window.URL.createObjectURL(new Blob([res.data]));\n    const link = await document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"crm-form.js\");\n    document.body.appendChild(link);\n    link.click();\n\n    showTip.current.style.display = \"block\";\n  };\n\n  return (\n    <>\n      <Typography ref={showTip} style={{display: \"none\"}}>{languages.en.webFormTip}</Typography>\n      <Box display=\"flex\" justifyContent=\"flex-end\">\n        <Button onClick={onDownload} variant=\"contained\" color=\"primary\" startIcon={<GetAppIcon/>}>{languages.en.donwloadForm}</Button>\n      </Box>\n    </>\n  );\n};\n\nexport default WebFormButtons;\n","import languages from \"../../../library/languages\";\nimport { Typography, Box, ListItem, List, IconButton } from \"@material-ui/core\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { removeFromList } from \"../../../actions/fieldsAction\";\n\nconst WebFormList = ({ state, dispatch }) => {\n  const list = state\n    .filter(el => el.fieldInForm)\n    .sort((a, b) => a.order - b.order)\n    .map(\n      ({\n        _id,\n        fieldName,\n        fieldFormVisible,\n        fieldOptions,\n        fieldType\n      }) => {\n        const strFormVisible = fieldFormVisible\n          ? ` - ${languages.en.visibleInForm}`\n          : null;\n\n        const strFormNotVisible1 = !fieldFormVisible\n          ? fieldType === \"select\"\n            ? ` - ${languages.en.hiddenInForm}`\n            : null\n          : null;\n\n        const strFormNotVisible2 = !fieldFormVisible\n          ? fieldType === \"select\"\n            ? fieldOptions.map(e => (e.preselected ? e.value : null)).join(\"\")\n            : null\n          : null;\n\n        const strFormNotVisible3 = !fieldFormVisible\n          ? fieldType === \"select\"\n            ? languages.en.asPreselected\n            : null\n          : null;\n\n        languages.en.asPreselected;\n\n        return (\n          <ListItem key={_id}>\n            <Typography>\n              <IconButton\n                id={fieldName}\n                onClick={() => removeFromList(dispatch, event)}\n                color=\"secondary\"\n                aria-label=\"delete\"\n                style={{ marginRight: \"1rem\" }}\n              >\n                <HighlightOffIcon />\n              </IconButton>\n              <strong>{fieldName}</strong>\n              {strFormVisible}\n              {strFormNotVisible1} <strong>{strFormNotVisible2}</strong>{\" \"}\n              {strFormNotVisible3}\n            </Typography>\n          </ListItem>\n        )\n      }\n    );\n\n  return (\n    <Box mb=\"2rem\">\n      <Typography component=\"h3\" variant=\"h5\" gutterBottom>\n        {languages.en.selectedFields}\n      </Typography>\n      {state.some(e => e.fieldInForm) ? (\n        <List dense>{list}</List>\n      ) : (\n        <Typography>{languages.en.noFieldsSelected}</Typography>\n      )}\n    </Box>\n  );\n};\n\nexport default WebFormList;\n","import WebForm from \"./WebForm\";\nimport languages from \"../../../library/languages\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport { Checkbox, Typography, FormControlLabel, Box } from \"@material-ui/core\";\n\nconst WebFormSection = ({ state, dispatch, toggleSection, sections }: any) => (\n  <Box my=\"2rem\">\n    <FormControlLabel\n      control={\n        <Checkbox\n          name=\"webForm\"\n          onChange={toggleSection}\n           // toggle visibility of section\n          checked={sections.webForm !== undefined ? sections.webForm : true}\n          icon={<KeyboardArrowRightIcon />}\n          checkedIcon={<KeyboardArrowDownIcon />}\n        />\n      }\n      label={\n        <Typography variant=\"h4\" component=\"h2\">\n          {languages.en.webForm}\n        </Typography>\n      }\n    />\n    {sections.webForm || sections.webForm === undefined ? <WebForm state={state} dispatch={dispatch} /> : null}\n  </Box>\n);\n\nexport default WebFormSection;\n","import languages from \"../../../library/languages\";\nimport {handleAddingToWF} from \"../../../actions/fieldsAction\";\nimport {\n  Typography,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  Box\n} from \"@material-ui/core\";\n\nconst WebFormSelect = ({ state, dispatch, counter, setCounter }) => {\n  const selectOptions = state.map(field => {\n    return !field.fieldInForm &&\n      field.fieldName !== \"Date added\" &&\n      field.fieldName !== \"Last modified\" ? (\n      <MenuItem key={field._id} value={field.fieldName} id={field.id}>\n        {field.fieldName}\n      </MenuItem>\n    ) : null;\n  });\n\n  return (\n    <Box mb=\"2rem\">\n      <Typography component=\"h3\" variant=\"h5\" gutterBottom>\n        {languages.en.selectField}\n      </Typography>\n      {selectOptions.some(field => field !== null) ? (\n        <FormControl fullWidth disabled={state.some(e => e.pause)}>\n          <InputLabel htmlFor=\"field-select\">\n            {languages.en.fieldName}\n          </InputLabel>\n          <Select\n            name=\"fields\"\n            id=\"field-select\"\n            onChange={() =>Â handleAddingToWF(dispatch, state, counter, setCounter, event)}\n            value=\"\"\n          >\n            {selectOptions}\n          </Select>\n        </FormControl>\n      ) : (\n        <Typography>{languages.en.allFieldsSelected}</Typography>\n      )}\n    </Box>\n  );\n};\n\nexport default WebFormSelect;\n","import languages from \"../../../library/languages\";\nimport { addHiddenSelect } from \"../../../actions/fieldsAction\";\nimport {\n  Typography,\n  Select,\n  InputLabel,\n  FormControl,\n  Box,\n  MenuItem\n} from \"@material-ui/core\";\n\nconst WebFormSubSelect = ({ state, dispatch, setCounter, counter}: any) => {\n  return state.some(e => e.fieldFormVisible === false && e.pause) ? (\n    <Box mb=\"2rem\">\n      <Typography component=\"h4\" variant=\"h6\">\n        {state.filter(el => el.pause).map(el => el.fieldName)}\n      </Typography>\n      <Typography gutterBottom>\n        {languages.en.pleaseSelectOption}\n      </Typography>\n      <Box width=\"50%\">\n        <FormControl fullWidth>\n          <InputLabel htmlFor=\"field-sub-select\">\n            {languages.en.fieldName}\n          </InputLabel>\n          <Select id=\"field-sub-select\" onChange={() => addHiddenSelect(dispatch, setCounter, counter, event)} value=\"\">\n            {state.map(field =>\n              field.pause\n                ? field.fieldOptions.map(option => (\n                    <MenuItem key={option.id} value={option.value}>\n                      {option.value}\n                    </MenuItem>\n                  ))\n                : null\n            )}\n          </Select>\n        </FormControl>\n      </Box>\n    </Box>\n  ) : null;\n};\n\nexport default WebFormSubSelect;\n","import { addVisibleSelect, showOptionsOnClick } from \"../../../actions/fieldsAction\";\nimport languages from \"../../../library/languages\";\nimport { Typography, Box, ButtonÂ } from \"@material-ui/core\";\n\nconst WebFormVisibleOrNot = ({ state, dispatch, counter, setCounter } : any) => {\n\n  const VisibleOrNot = state.map(({fieldName, fieldFormVisible, _id, pause}) =>\n    fieldFormVisible === null ? (\n      pause ? (\n        <Box key={_id} mb=\"2rem\">\n          <Typography gutterBottom component=\"h4\" variant=\"h6\">\n            {languages.en.shouldBe} <strong>{fieldName}</strong> {languages.en.visibleInForm}?\n          </Typography>\n          <Button id={fieldName} variant=\"contained\" color=\"primary\" style={{marginRight: \"1rem\"}} onClick={() => addVisibleSelect(dispatch, setCounter, counter)}>\n            {languages.en.yes}\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => showOptionsOnClick(dispatch)}>{languages.en.no}</Button>\n        </Box>\n      ) : null\n    ) : null\n  );\n\n  return (\n    <>\n    {VisibleOrNot}\n    </>\n  );\n};\n\nexport default WebFormVisibleOrNot;\n","const languages = {\n    en: {\n        editCustomField: \"Edit custom field\",\n        newCustomField: \"New custom field\",\n        fieldName: \"Field name\",\n        fieldType: \"FieldType\",\n        text: \"Text\",\n        select: \"Select\",\n        number: \"Number\",\n        save: \"Save\",\n        cancel: \"Cancel\",\n        addNew: \"Add new\",\n        delete: \"Delete\",\n        email: \"Email\",\n        addNewClient: \"Add new client\",\n        clientProfile: \"Client profile\",\n        customClientFields: \"Custom client fields\",\n        edit: \"Edit\",\n        defaultClientFields: \"Default client fields\",\n        emailSettingsUpdatedSuccess: \"Your email settings has been successfully changed!\",\n        somethingWentWrong: \"Something went wrong!\",\n        emailAccount: \"Email account\",\n        password: \"Password\",\n        showPassword: \"Show Password\",\n        hidePassword: \"Hide Password\",\n        add: \"Add\",\n        yourEmailSentSucces: \"Your email has been succesfully sent.\",\n        to: \"To\",\n        subject: \"Subject\",\n        message: \"Message\",\n        send: \"Send\",\n        dashboard: \"Dashboard\",\n        client: \"client\",\n        clients: \"Clients\",\n        emails: \"Emails\",\n        settings: \"Settings\",\n        saved: \"Saved\",\n        goTo: \"Go to\",\n        go: \"Go\",\n        dateAndTime: \"Date and time\",\n        selectField: \"Select field\",\n        selectedFields: \"Selected fields\",\n        visibleInForm: \"visible in form\",\n        hiddenInForm: \"hidden in form with\",\n        asPreselected: \"as preselected\",\n        shouldBe: \"Should be\",\n        yes: \"yes\",\n        no: \"no\",\n        pleaseSelectOption: \"Please select option, that will be auto assigned to clients from this form.\",\n        allFieldsSelected: \"All fields are already selected\",\n        noFieldsSelected: \"No fields selected\",\n        donwloadForm: \"Download form\",\n        clientsSaved: \"Saved clients\",\n        emailsSent: \"Emails sent\",\n        fieldsSaved: \"Fields saved\",\n        last: \"Last\",\n        sent: \"sent\",\n        pastSevenDays: \"past seven days\",\n        total: \"total\",\n        logout: \"logout\",\n        username: \"username\",\n        repeatPassword: \"repeat password\",\n        login: \"login\",\n        register: \"register\",\n        success: \"success\",\n        passwordsDoesNotMatch: \"Passwords do not match\",\n        userAlreadyExists: \"User already exists\",\n        indexTitle: \"CRM-APP - Where your business gets efficiency\",\n        welcomeH1: \"Welcome in lightweight CRM-APP built on Next.js, React.js, Material UI, Typescript, Express and Mongo DB\",\n        webForm: \"Web form\",\n        onlyGoogleAcc: \"Only google accounts are supported.\",\n        setupeLessSecure: \"You also need to provide access to less secure apps in your google settings.\",\n        setupYourEmailSettings: \"Please setup your emails settings first\",\n        option: \"Option\",\n        deleteOption: \"Delete option\",\n        field: \"Field\",\n        webFormTip: \"Downloaded script add to your website and create element with id '#crm-form-hook' where you want form to display. Form takes 100% width of the parent.\"\n    }\n}\n\nexport default languages;","import Header from \"../../components/Header\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect, useContext, useReducer } from \"react\";\nimport axios from \"axios\";\nimport fieldsReducer from \"../../reducers/fieldsReducer\";\nimport UserContext from \"../../components/UserContext\";\nimport DefaultFieldsSection from \"../../components/settings/DefaultFieldsSection\";\nimport CustomFieldsSection from \"../../components/settings/customFields/CustomFieldsSection\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport EmailSettingsSection from \"../../components/settings/emailSettings/EmailSettingsSection\";\nimport WebFormSection from \"../../components/settings/webform/WebFormSection\";\nimport globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Settings = ({ dataFields, username, pass }: any) => {\n  const router = useRouter();\n  const [initialized, setInitialized] = useState(false);\n  const [sections, setSection] = useState({});\n  const user = useContext(UserContext);\n\n  const [state, dispatch] = useReducer(fieldsReducer, dataFields);\n\n  const toggleSection = e => {\n    setSection({\n      ...sections,\n      [e.target.name]: e.target.checked\n    });\n  };\n\n  useEffect(() => {\n    //title from url\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .removeSlashAndTextAfter()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    //componendDidMount effect\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .removeSlashAndTextAfter()\n    .firstCharUpperCase()\n    .getString();\n\n  return !user.user.signedIn && !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n        {h1}\n      </Typography>\n      <DefaultFieldsSection\n        state={state}\n        toggleSection={toggleSection}\n        sections={sections}\n      />\n      <CustomFieldsSection\n        state={state}\n        dispatch={dispatch}\n        sections={sections}\n        toggleSection={toggleSection}\n      />\n      <EmailSettingsSection\n        username={username}\n        pass={pass}\n        toggleSection={toggleSection}\n        sections={sections}\n      />\n      <WebFormSection\n        state={state}\n        dispatch={dispatch}\n        toggleSection={toggleSection}\n        sections={sections}\n      />\n    </div>\n  );\n};\n\nSettings.getInitialProps = async (context: any) => {\n  const resFields = await axios({\n    method: \"GET\",\n    params: { key: context.query.key },\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const dataFields = await resFields.data;\n\n  const resEmailSettings = await axios({\n    method: \"GET\",\n    params: { key: context.query.key },\n    url: `${globalVars.serverURL}/emails/email-settings`,\n    responseType: \"json\"\n  });\n\n  const dataEmailSettings = await resEmailSettings.data;\n  const { username, pass } = await dataEmailSettings;\n\n  return { dataFields, username, pass };\n};\n\nexport default Settings;\n","const fieldsReducer = (state, action) => {\n  switch (action.type) {\n    case \"addNewField\":\n      return state.some(field => field._id === action.payload.obj._id)\n        ? state.map(field =>\n            field._id === action.payload.obj._id ? action.payload.obj : field\n          )\n        : [...state, action.payload.obj];\n    case \"deleteField\":\n      return state.filter(field => field._id !== action.payload.id);\n    case \"addToWF\":\n      return state.map(field =>\n        field.fieldName === action.payload.fieldName\n          ? { ...field, fieldInForm: true, order: action.payload.counter }\n          : field\n      );\n    case \"addVisibleSelectWF\":\n      return state.map(field =>\n        field.pause\n          ? {\n              ...field,\n              fieldInForm: true,\n              fieldFormVisible: true,\n              pause: false,\n              order: action.payload.counter\n            }\n          : field\n      );\n    case \"addNotVisibleValue\":\n      return state.map(field =>\n        field.pause\n          ? {\n              ...field,\n              fieldFormVisible: false\n            }\n          : field\n      );\n    case \"addHiddenSelectWF\":\n      return state.map(field =>\n        field.pause\n          ? {\n              ...field,\n              fieldInForm: true,\n              pause: false,\n              order: action.payload.counter,\n              fieldOptions: field.fieldOptions.map(option =>\n                option.value === action.payload.optionValue\n                  ? { ...option, preselected: true }\n                  : option\n              )\n            }\n          : field\n      );\n    case \"pauseSelect\":\n      return state.map(field =>\n        field.fieldName === action.payload.fieldName\n          ? { ...field, pause: true }\n          : field\n      );\n\n    case \"removeFromWF\":\n      return state.map(field =>\n        field.fieldName === action.payload.fieldName\n          ? {\n              ...field,\n              fieldInForm: false,\n              fieldFormVisible: null,\n              fieldOptions: field.fieldOptions.map(option =>\n                option.preselected ? { ...option, preselected: null } : option\n              )\n            }\n          : field\n      );\n    default:\n      throw new Error();\n  }\n};\n\nexport default fieldsReducer;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AALA;AAaA;AACA;AAfA;AAAA;AAAA;AACA;AADA;AAkBA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAFA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AADA;AADA;AAFA;AACA;AAOA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AACA;AAAA;AARA;AAaA;AACA;AAAA;AAdA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAlDA;AAoDA;AAtEA;AAAA;AACA;AAuEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AACA;AAHA;AAEA;AAFA;AAAA;AACA;AADA;AASA;AACA;AAAA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcaA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AA1BA;AADA;AACA;AAkCA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3EA;AADA;AAgFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AALA;AAAA;AAAA;AACA;AAOA;AACA;AAIA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAOA;AAPA;AAAA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AACA;AAVA;AASA;AATA;AAAA;AACA;AADA;AAgBA;AAhBA;AAAA;AACA;AADA;AAAA;AAiBA;AAAA;AAjBA;AAmBA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqBA;;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AADA;AADA;AACA;AAIA;AACA;AAAA;AAIA;AACA;AACA;AACA;AANA;AADA;AACA;AAUA;AACA;AAAA;AAIA;AAHA;AADA;AACA;AAOA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AANA;AADA;AACA;AAcA;AACA;AAAA;AAEA;AADA;AADA;AACA;AAKA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AADA;AALA;AADA;AACA;AAWA;AACA;AAzEA;AA2EA;AACA;AACA;;;;A","sourceRoot":""}