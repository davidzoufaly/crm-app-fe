{"version":3,"file":"static/webpack/static/development/pages/settings/[key].js.cba5ddc6d2bbc4394bc9.hot-update.js","sources":["webpack:///./components/settings/customFields/AddOrEditField.tsx"],"sourcesContent":["import languages from \"../../../library/languages\";\nimport stringMethods from \"../../../library/stringMethods\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {\n  Fab,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Grid,\n  Box\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      marginTop: theme.spacing(3),\n      color: theme.palette.common.white\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(2)\n    },\n    formWrapper: {\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      boxShadow: theme.shadows[\"1\"],\n      padding: theme.spacing(3),\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\",\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\"\n      }\n    },\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  })\n);\n\nconst AddOrEditField = ({\n  editedField,\n  displayComponent,\n  fieldMethods,\n  handleOption\n}: any) => {\n  const classes = useStyles({});\n  return displayComponent ? (\n    <Box className={classes.formWrapper}>\n      <Typography component=\"h3\" variant=\"h5\">\n        {editedField.id\n          ? languages.en.editCustomField\n          : languages.en.newCustomField}\n      </Typography>\n      <form onSubmit={fieldMethods.saveEditedField}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} lg={6}>\n            <TextField\n              id={new stringMethods(languages.en.fieldName)\n                .textToHtmlProp()\n                .getString()}\n              autoFocus={true}\n              type=\"text\"\n              label={languages.en.fieldName}\n              className={classes.textField}\n              value={editedField.fieldName}\n              onChange={fieldMethods.onNameChange}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <FormControl className={classes.textField} fullWidth>\n              <InputLabel\n                htmlFor={new stringMethods(languages.en.fieldType)\n                  .textToHtmlProp()\n                  .getString()}\n              >\n                {languages.en.fieldType}\n              </InputLabel>\n              <Select\n                id={new stringMethods(languages.en.fieldType)\n                  .textToHtmlProp()\n                  .getString()}\n                onChange={fieldMethods.onSelectChange}\n                value={editedField.fieldType}\n              >\n                <MenuItem value=\"text\">{languages.en.text}</MenuItem>\n                <MenuItem value=\"select\">{languages.en.select}</MenuItem>\n                <MenuItem value=\"number\">{languages.en.number}</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          {editedField.fieldType === \"select\" ? (\n            <Grid item xs={6}>\n              {handleOption}\n            </Grid>\n          ) : null}\n          <Grid item xs={12}>\n            <Box display=\"flex\" justifyContent=\"flex-end\">\n            <Button\n              onClick={fieldMethods.toggleDisplayComponent}\n              color=\"secondary\"\n              variant=\"contained\"\n              style={{ marginRight: \"1rem\" }}\n            >\n              {languages.en.cancel}\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              {languages.en.save}\n            </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </form>\n    </Box>\n  ) : (\n    <div>\n      <Fab\n        color=\"primary\"\n        variant=\"extended\"\n        aria-label=\"add\"\n        className={classes.fab}\n        onClick={fieldMethods.toggleDisplayComponent}\n      >\n        <AddIcon />\n        {languages.en.field}\n      </Fab>\n    </div>\n  );\n};\n\nexport default AddOrEditField;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAYA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AADA;AAIA;AACA;AADA;AAnBA;AADA;AACA;AAyBA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAGA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}