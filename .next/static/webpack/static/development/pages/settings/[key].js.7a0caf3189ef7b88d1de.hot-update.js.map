{"version":3,"file":"static/webpack/static/development/pages/settings/[key].js.7a0caf3189ef7b88d1de.hot-update.js","sources":["webpack:///./components/settings/webform/WebFormList.tsx"],"sourcesContent":["import languages from \"../../../library/languages\";\nimport { Typography, Box, ListItem, List, IconButton } from \"@material-ui/core\";\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { useEffect } from \"react\";\n\nconst WebFormList = ({ state, removeFromList, dispatch }) => {\n  // const list = [];\n  const list = state.filter(el => {\n    return el.fieldInForm\n  }).sort((a, b) => a.order - b.order)\n  \n  \n  state.map(\n    ({\n      _id,\n      fieldName,\n      fieldInForm,\n      fieldFormVisible,\n      fieldOptions,\n      fieldType,\n      // order\n    }) => {\n      const strFormVisible = fieldFormVisible\n        ? ` - ${languages.en.visibleInForm}`\n        : null;\n\n      const strFormNotVisible1 = !fieldFormVisible\n        ? fieldType === \"select\"\n          ? ` - ${languages.en.hiddenInForm}`\n          : null\n        : null;\n\n      const strFormNotVisible2 = !fieldFormVisible\n        ? fieldType === \"select\"\n          ? fieldOptions.map(e => (e.preselected ? e.value : null)).join(\"\")\n          : null\n        : null;\n\n      const strFormNotVisible3 = !fieldFormVisible\n        ? fieldType === \"select\"\n          ? languages.en.asPreselected\n          : null\n        : null;\n\n      languages.en.asPreselected;\n\n      fieldInForm\n        ? \n            <ListItem key={_id}>\n              <Typography>\n              <IconButton id={fieldName} onClick={() => removeFromList(dispatch, event)} color=\"secondary\" style={{marginRight: \"1rem\"}}>\n                <HighlightOffIcon/>\n              </IconButton>\n              <strong>{fieldName}</strong>\n              {strFormVisible}\n              {strFormNotVisible1} <strong>{strFormNotVisible2}</strong>{\" \"}\n              {strFormNotVisible3}\n              </Typography>\n            </ListItem>\n          \n        : [];\n    }\n  );\n\n  useEffect(() => {\n    console.log(list);\n  })\n\n  return (\n    <Box mb=\"2rem\">\n      <Typography component=\"h3\" variant=\"h5\" gutterBottom>{languages.en.selectedFields}</Typography>\n      {state.some(e => e.fieldInForm) ? <List dense></List> : <Typography>{languages.en.noFieldsSelected}</Typography>}\n    </Box>\n  );\n};\n\nexport default WebFormList;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAMA;AAEA;AAAA;AAIA;AAMA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}