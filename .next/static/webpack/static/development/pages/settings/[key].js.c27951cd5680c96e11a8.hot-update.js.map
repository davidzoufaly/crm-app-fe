{"version":3,"file":"static/webpack/static/development/pages/settings/[key].js.c27951cd5680c96e11a8.hot-update.js","sources":["webpack:///./components/settings/customFields/CustomFieldsList.tsx"],"sourcesContent":["import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Fab } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      textAlign: \"center\",\n      minWidth: \"280px\",\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"100%\"\n      }\n    },\n    list: {\n      padding: 0,\n      lineHeight: \"14px\",\n      margin: \"auto\",\n      marginBottom: theme.spacing(1)\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    },\n    cardWrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      height: \"100%\"\n    },\n    listItemIcon: {\n      minWidth: 0,\n      paddingRight: theme.spacing(1),\n      color: \"black\"\n    }\n  })\n);\n\nconst CustomFields = ({ fields, setupEditedField, deleteField }: any) => {\n  const classes = useStyles({});\n\n  const separatedCustomFields = fields\n    .filter(({ fieldPermanent }: any) => !fieldPermanent)\n    .map(({ fieldName, _id, fieldType, fieldOptions }: any) => {\n      const options = fieldOptions.map((e: any) => {\n        return (\n          <ListItem key={e.id}>\n            <ListItemText primary={e.value} />\n          </ListItem>\n        );\n      });\n\n      return (\n        <Grid item key={_id} className={classes.card}>\n          <Card style={{ height: \"100%\" }}>\n            <CardContent className={classes.cardWrapper}>\n              <Box>\n                <Typography variant=\"h6\" component=\"h3\">\n                  {fieldName}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                  ({fieldType.toLowerCase()})\n                </Typography>\n                {fieldType === \"select\" && fieldOptions.length > 0 ? (\n                  <Box>\n                    <List className={classes.list} dense>\n                      {options}\n                    </List>\n                  </Box>\n                ) : null}\n              </Box>\n              <Box>\n                <Box width=\"40%\" mt=\"1rem\">\n                  <Grid container spacing={1}>\n                    <Grid item xs={6}>\n                      <Fab\n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={() =>\n                          setupEditedField({\n                            fieldName,\n                            fieldType,\n                            fieldPermanent: false,\n                            fieldOptions,\n                            _id: _id\n                          })\n                        }\n                      >\n                        <EditIcon />\n                      </Fab>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Fab\n                        size=\"small\"\n                        color=\"secondary\"\n                        onClick={() => deleteFieldRes(_id)}\n                      >\n                        <DeleteIcon />\n                      </Fab>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n      );\n    });\n\n  return (\n    <Grid container spacing={2}>\n      {separatedCustomFields}\n    </Grid>\n  );\n};\n\nexport default CustomFields;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AA1BA;AADA;AACA;AAkaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}