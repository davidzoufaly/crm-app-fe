{"version":3,"file":"static/webpack/static/development/pages/settings.js.b0a5c11faede4e382c45.hot-update.js","sources":["webpack:///./components/settings/webform/WebForm.tsx","webpack:///./components/settings/webform/WebFormOptionSelect.tsx"],"sourcesContent":["import { useReducer, useEffect, useState } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormOptionSelect from \"./WebFormOptionSelect\";\n\nconst WebForm = ({ fields }) => {\n  const [optionSelect, setOptionSelect] = useState(null);\n  const [webFields, setWebFields] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true }\n            : field\n        );\n      case \"remove\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: false }\n            : field\n        );\n      case \"addVisibleSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true, fieldFormVisible: true }\n            : field\n        );\n      case \"addHiddenSelect\":\n\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field =>\n      field.fieldName === e.target.value\n        ? field.fieldType !== \"select\"\n          ? setWebFields({\n              type: \"add\",\n              payload: { fieldName: e.target.value }\n            })\n          : setOptionSelect(webFields.filter(el => el.fieldName === e.target.value))\n        : null\n    );\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: { fieldName: e.target.id }\n    });\n    setOptionSelect(null);\n  };\n\n  const addHiddenSelect = e => {\n      setWebFields({\n        type: \"addHiddenSelect\",\n        payload: {fieldName : e.target.value}\n      })\n      setOptionSelect(null);\n  }\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: { fieldName: e.target.id }\n    });\n  };\n\n  useEffect(() => {\n    console.log(webFields);\n  }, [webFields]);\n\n  return (\n    <>\n      <h3>Select field:</h3>\n      <WebFormSelect\n        webFields={webFields}\n        addNotSelect={addNotSelect}\n        optionSelect={optionSelect}\n      />\n      <WebFormOptionSelect\n        optionSelect={optionSelect}\n        webFields={webFields}\n        addVisibleSelect={addVisibleSelect}\n        WebFormOptions={<WebFormOptions optionSelect={optionSelect} addHiddenSelect={addHiddenSelect} />}\n      />\n      <h3>Selected fields:</h3>\n      <WebFormList webFields={webFields} removeFromList={removeFromList} />\n    </>\n  );\n};\n\nexport default WebForm;\n","import { useState } from \"react\";\n\nconst webFormOptionSelect = ({ optionSelect, webFields, addVisibleSelect, WebFormOptions }) => {\n  const [showOptions, setShowOptions] = useState(false);\n\n  const showOptionsOnClick = () => {\n    setShowOptions(true);\n  };\n\n  const insertIntoForm = webFields.map(field =>\n    optionSelect !== null && !showOptions ? (\n      optionSelect[0].fieldName === field.fieldName ? (\n        <div key={field.id}>\n          <p>\n            Should be <strong>{field.fieldName}</strong> visible in form?\n          </p>\n          <button id={field.fieldName} onClick={addVisibleSelect}>\n            YES\n          </button>\n          <button onClick={showOptionsOnClick}>NO</button>\n        </div>\n      ) : null\n    ) : null\n  );\n\n  return (\n    <>\n      {insertIntoForm}\n      {showOptions ? (\n        <>\n          <p>\n            Please select option, that will be auto assigned to clients from\n            this form\n          </p>\n          {WebFormOptions}\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default webFormOptionSelect;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAEA;AADA;AADA;AACA;AAIA;AACA;AAAA;AAEA;AADA;AADA;AACA;AAIA;AACA;AAAA;AAEA;AAAA;AADA;AADA;AACA;AAIA;AAGA;AACA;AAvBA;AAyBA;AA5BA;AAAA;AACA;AA6BA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAgBA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;;;;A","sourceRoot":""}