{"version":3,"file":"static/webpack/static/development/pages/client/[id].js.c40dad1a81392393453f.hot-update.js","sources":["webpack:///./components/singleClient/SingleClientData.tsx"],"sourcesContent":["import globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport {\n  TextField,\n  Select,\n  FormControl,\n  MenuItem,\n  InputLabel\n} from \"@material-ui/core\";\n\nconst SingleClientData = ({ fieldsData, client, onInputChange }: any) =>\n  fieldsData.map(field => {\n    switch (field.fieldType) {\n      case \"text\":\n        return (\n          <div key={field.fieldName}>\n            <TextField\n              name={field.fieldName}\n              label={field.fieldName}\n              margin=\"normal\"\n              value={client[field.fieldName]}\n              onChange={onInputChange}\n              disabled={\n                field.fieldName === \"Date added\" ||\n                field.fieldName === \"Last modified\"\n              }\n            />\n          </div>\n        );\n      case \"number\":\n        return (\n          <div key={field.fieldName}>\n            {field.fieldName}\n            <input\n              type=\"number\"\n              name={field.fieldName}\n              value={client[field.fieldName]}\n              onChange={onInputChange}\n            />\n          </div>\n        );\n      case \"select\":\n        return (\n          <FormControl key={field.fieldName}>\n            <InputLabel\n              htmlFor={new stringMethods(field.fieldName)\n                .textToHtmlProp()\n                .getString()}\n            >\n              {field.fieldName}\n            </InputLabel>\n            <Select\n              name={field.fieldName}\n              value={client[field.fieldName]}\n              onChange={onInputChange}\n              id={new stringMethods(field.fieldName).textToHtmlProp().getString()}\n            >\n              <MenuItem key=\"---\">{globalVars.blankOption}</MenuItem>\n              {field.fieldOptions.map(option => (\n                <MenuItem key={option.id}>{option.value}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        );\n    }\n  });\n\nexport default SingleClientData;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AA9CA;AAqDA;AAvDA;AACA;AAwDA;;;;A","sourceRoot":""}