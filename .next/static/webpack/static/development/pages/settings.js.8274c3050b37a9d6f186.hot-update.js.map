{"version":3,"file":"static/webpack/static/development/pages/settings.js.8274c3050b37a9d6f186.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/readOnlyError.js","webpack:///./pages/settings.tsx"],"sourcesContent":["export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}","import Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport DefaultClientFields from \"../components/DefaultClientFields\";\n\nconst Settings = ({data} : any) => {\n  const router = useRouter();\n  const [fields, setField] = useState([]);\n  const [title, setTitle] = useState(\"\")\n\n\n  useEffect(() =>Â {\n    setField(data);\n  })\n\n  useEffect(() => {\n    title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase();\n\n    document.title = title.addStringToEnd(globalVars.titleSubText).getString();\n  }, [router]);\n\n  if (fields.length === 0) {\n    return \"Loading...\"\n  }\n  return (\n    <div>\n      <Header />\n      <h1>{title}</h1>\n      <DefaultClientFields fields={fields} />\n    </div>\n  );\n};\n\nSettings.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  })\n  const data = await res.data;\n  return {data};\n}\n\nexport default Settings;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAMA;AANA;AAOA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;A","sourceRoot":""}