{"version":3,"file":"static/webpack/static/development/pages/clients/[id].js.72af0b66ab3dbe596c86.hot-update.js","sources":["webpack:///./components/EmailForm.tsx"],"sourcesContent":["import axios from \"axios\";\nimport languages from \"../library/languages\";\nimport globalVars from \"../library/globalVariables\";\nimport { useState, useEffect } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst EmailForm = ({\n  to,\n  isEmailCreated,\n  toggleIsEmailCreated,\n  unCheckAll\n}: any) => {\n  const initEmail = { to, subject: \"\", message: \"\" };\n  const [email, setEmail] = useState(initEmail);\n  const [spinner, setSpinner] = useState(false);\n\n  useEffect(() => {\n    setEmail({ ...email, to: to });\n  }, [to]);\n\n  const sendEmail = async e => {\n    e.preventDefault();\n    setSpinner(true);\n\n    const res = await axios({\n      method: \"post\",\n      data: email,\n      url: `${globalVars.serverURL}/emails/send`,\n      responseType: \"json\"\n    });\n\n    const data = await res.data;\n    data ? setSpinner(false) : null;\n\n    if (data.msg === globalVars.msgSuccess) {\n      alert(languages.en.yourEmailSentSucces);\n      setEmail(initEmail);\n      // if email is sending from clients page\n      toggleIsEmailCreated();\n      unCheckAll ? unCheckAll() : null;\n    } else {\n      alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  const onChange = e => {\n    setEmail({ ...email, [e.target.name]: e.target.value });\n  };\n\n  return isEmailCreated && to.length > 0 ? (\n    <>\n    <h2>{languages.en.email}</h2>\n    <form onSubmit={sendEmail}>\n      <label htmlFor=\"email-to\">{languages.en.to}</label>\n      <input type=\"text\" id=\"email-to\" name=\"to\" value={email.to} disabled />\n      <label htmlFor=\"email-subject\">\n        {languages.en.subject}\n      </label>\n      <input\n        type=\"text\"\n        id=\"email-subject\"\n        name=\"subject\"\n        autoFocus={true}\n        value={email.subject}\n        onChange={onChange}\n        disabled={spinner}\n      />\n      <label htmlFor=\"email-message\">\n        {languages.en.message}\n      </label>\n      {spinner ? <CircularProgress /> : null}\n      <textarea\n        name=\"message\"\n        onChange={onChange}\n        value={email.message}\n        disabled={spinner}\n      />\n      <button onClick={toggleIsEmailCreated}>{languages.en.cancel}</button>\n      <button type=\"submit\">{languages.en.send}</button>\n    </form>\n    </>\n  ) : null;\n};\n\nexport default EmailForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AACA;AALA;AAIA;AAJA;AAAA;AACA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAwBA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}