{"version":3,"file":"static/webpack/static/development/pages/clients/[id].js.28ae77851424eb13dc98.hot-update.js","sources":["webpack:///./components/SingleClientData.tsx","webpack:///./pages/clients/.tsx"],"sourcesContent":["import stringMethods from \"../library/stringMethods\";\n\nconst SingleClientData = () => {\n    const list = [];\n    fieldsData.map(field => {\n      switch (field.fieldType) {\n        case \"text\":\n          list.push(\n            <li key={field.fieldName}>\n              {new stringMethods(field.fieldName)\n                .camelStringToText()\n                .firstCharUpperCase()\n                .getString()}\n              <textarea value={client[field.fieldName]} />\n            </li>\n          );\n          break;\n        case \"number\":\n          list.push(\n            <li key={field.fieldName}>\n              {new stringMethods(field.fieldName)\n                .camelStringToText()\n                .firstCharUpperCase()\n                .getString()}\n              <input type=\"number\" value={client[field.fieldName]} />\n            </li>\n          );\n          break;\n        case \"select\":\n          list.push(\n            <li key={field.fieldName}>\n              {new stringMethods(field.fieldName)\n                .camelStringToText()\n                .firstCharUpperCase()\n                .getString()}\n              <select value={client[field.fieldName]}>\n                {field.fieldOptions.map(option => (\n                  <option key={option.id}>{option.value}</option>\n                ))}\n              </select>\n            </li>\n          );\n      }\n    });\n    return SingleClientData;\n  };\n\n  export default SingleClientData;","import Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { useEffect, useState} from \"react\";\nimport globalVars from \"../../library/globalVariables\";\nimport SingleClientData from \"../../components/SingleClientData\";\n\n//TODO: SKRÝVÁNÍ POLÍ CO NEJSOU V DB\n\nconst Client = ({ clientData, fieldsData }: any) => {\n  const [client, setEditedClient] = useState(clientData);\n  const { firstName, lastName } = client;\n\n  useEffect(() => {\n    document.title = `${firstName} ${lastName} ${globalVars.titleSubText}`;\n    // console.log(clientData);\n    // console.log(fieldsData);\n  });\n\n  return (\n    <div>\n      <Header />\n      <h1>\n        {firstName} {lastName}\n      </h1>\n      <ul><SingleClientData fieldsData={fieldsData}/></ul>\n    </div>\n  );\n};\n\nClient.getInitialProps = async (context: any) => {\n  const { id } = context.query;\n  const resClient = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/${id}`,\n    responseType: \"json\"\n  });\n  const clientData = await resClient.data;\n\n  const resFields = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const fieldsData = await resFields.data;\n\n  return { clientData, fieldsData };\n};\n\nexport default Client;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AA/BA;AAsCA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AAHA;AACA;AAHA;AAEA;AAFA;AAAA;AACA;AADA;AAOA;AAPA;AAAA;AAUA;AACA;AACA;AAHA;AACA;AAVA;AASA;AATA;AAAA;AACA;AADA;AAcA;AAdA;AAgBA;AAAA;AAAA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAkBA;;;;A","sourceRoot":""}