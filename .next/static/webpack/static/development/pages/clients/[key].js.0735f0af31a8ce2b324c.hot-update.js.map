{"version":3,"file":"static/webpack/static/development/pages/clients/[key].js.0735f0af31a8ce2b324c.hot-update.js","sources":["webpack:///./components/clients/CreateClient.tsx"],"sourcesContent":["import { useReducer, useEffect, useState, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport generateUniqueId from \"generate-unique-id\";\nimport UserContext from \"../UserContext\";\nimport ClientForm from \"./ClientForm\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formWrapper: {\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      padding: theme.spacing(3),\n      backgroundColor: theme.palette.grey[\"200\"],\n      boxShadow: theme.shadows[\"1\"],\n      width: \"50%\",\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\"\n      }\n    },\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  })\n);\n\nconst CreateClient = ({\n  fields,\n  isClientAdded,\n  toggleIsClientAdded,\n  addNewClientToState\n}: any) => {\n  const classes = useStyles({});\n  const initialNewClientState = fields\n    .map((e: any) => e.fieldName)\n    .reduce((o, key) => Object.assign(o, { [key]: \"\" }), {});\n\n  const user = useContext(UserContext);\n  const [submitting, setSubmitting] = useState(false);\n  const [newClient, setNewClient] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"onTextChange\":\n        return {\n          ...state,\n          [action.payload.fieldName as string]:\n            action.payload.fieldType === globalVars.fieldTypes.number\n              ? parseInt(action.payload.value)\n              : action.payload.value\n        };\n      case \"addId\":\n        return {\n          ...state,\n          _id: generateUniqueId({\n            length: 24,\n            useNumbers: true,\n            useLetters: false,\n            includeSymbols: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n          })\n        };\n      case \"addDate\":\n        return {\n          ...state,\n          [\"Date added\"]: moment().format(\"llll\")\n        };\n      case \"clear\":\n        return {\n          initialNewClientState\n        };\n\n      default:\n        return state;\n    }\n  }, initialNewClientState);\n\n  const onChange = event => {\n    console.log(event.currentTarget);\n    console.log(newClient);\n    setNewClient({\n      type: \"onTextChange\",\n      payload: {\n        fieldName: event.target.name,\n        value: event.target.value,\n        fieldType: event.target.type\n      }\n    });\n  };\n\n  useEffect(() => {\n    //trigger side effect when submitting state is changed and its is true\n    submitting ? submitNewClient() : null;\n  }, [submitting]);\n\n  const onSubmit = e => {\n    // on Button Click prepare client object to be ready to send\n    e.preventDefault();\n    setNewClient({ type: \"addDate\" });\n    setNewClient({ type: \"addId\" });\n    // change submitting state to trigger effect with POST req.\n    setSubmitting(true);\n  };\n\n  const submitNewClient = async () => {\n    //post req to DB\n    const clientRes = await axios({\n      method: \"POST\",\n      data: newClient,\n      url: `${globalVars.serverURL}/clients`,\n      params: { key: user.user.userkey },\n      responseType: \"json\"\n    });\n    const clientData = await clientRes.data;\n    if (clientData.msg === globalVars.msgSuccess) {\n      // add client data to clients state for table update\n      addNewClientToState(newClient);\n      // reset newClient state\n      setNewClient({\n        type: \"clear\"\n      });\n      // hide form\n      toggleIsClientAdded();\n      //reset submitting\n      setSubmitting(false);\n    } else {\n      alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  const onCancel = () => {\n    setNewClient({\n      type: \"clear\"\n    });\n    toggleIsClientAdded();\n  };\n\n  return isClientAdded ? (\n    <Box className={classes.formWrapper}>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        {languages.en.addNewClient}\n      </Typography>\n      <form onSubmit={onSubmit}>\n        <ClientForm fields={fields} onChange={onChange} newClient={newClient} />\n        <Box display=\"flex\" justifyContent=\"flex-end\" mt=\"2rem\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={onCancel}\n          >\n            {languages.en.cancel}\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            {languages.en.save}\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  ) : null;\n};\n\nexport default CreateClient;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AADA;AAIA;AACA;AADA;AAZA;AADA;AACA;AAkBA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAPA;AAAA;AAAA;AACA;AADA;AASA;AACA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAFA;AACA;AAQA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AAGA;AACA;AA9BA;AAgCA;AAzCA;AAAA;AACA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AACA;AAHA;AAEA;AAFA;AAAA;AACA;AADA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAyBA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}