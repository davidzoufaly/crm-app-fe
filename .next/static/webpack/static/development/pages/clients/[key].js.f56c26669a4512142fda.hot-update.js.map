{"version":3,"file":"static/webpack/static/development/pages/clients/[key].js.f56c26669a4512142fda.hot-update.js","sources":["webpack:///./components/clients/ClientForm.tsx"],"sourcesContent":["import globalVars from \"../../library/globalVariables\";\nimport {\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n  TextField,\n  Grid\n} from \"@material-ui/core\";\n\nconst ClientForm = ({ fields, onChange, newClient }: any) => {\n  const inputs = fields.map((e: any) => {\n    if (\n      e.fieldName !== globalVars.permanentFields.dateAdded &&\n      e.fieldName !== globalVars.permanentFields.lastModified\n    ) {\n      if (e.fieldType === \"text\") {\n        return (\n          <Grid item xs={12} sm={6} key={e.fieldName}>\n            <TextField\n              type=\"text\"\n              key={e.fieldName}\n              label={e.fieldName}\n              id={e.fieldName}\n              autoFocus={e.fieldName === globalVars.permanentFields.fistName}\n              name={e.fieldName}\n              margin=\"normal\"\n              fullWidth\n              onChange={onChange}\n              defaultValue={newClient[e.fieldName]}\n            />\n          </Grid>\n        );\n      } else if (e.fieldType === \"number\") {\n        return (\n          <Grid item xs={12} sm={6} key={e.fieldName}>\n            <TextField\n              id={e.fieldName}\n              key={e.fieldName}\n              label={e.fieldName}\n              margin=\"normal\"\n              fullWidth\n              type=\"number\"\n              name={e.fieldName}\n              onChange={onChange}\n              defaultValue={newClient[e.fieldName]}\n            />\n          </Grid>\n        );\n      } else if (e.fieldType === \"select\") {\n        return (\n          <Grid item xs={12} sm={6} key={e.fieldName}>\n            <FormControl margin=\"normal\" fullWidth>\n              <InputLabel htmlFor={e.fieldName}>{e.fieldName}</InputLabel>\n              <Select\n                name={e.fieldName}\n                id={e.fieldName}\n                onChange={onChange}\n                value={newClient[e.fieldName] ? newClient[e.fieldName] : \"\"}\n              >\n                <MenuItem value=\"\" key={globalVars.blankOption}>\n                  {globalVars.blankOption}\n                </MenuItem>\n                {e.fieldOptions.map((e: any) => {\n                  return (\n                    <MenuItem value={e.value} key={e.id}>\n                      {e.value}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          </Grid>\n        );\n      }\n    }\n  });\n  return (\n    <Grid container spacing={3}>\n      {inputs}\n    </Grid>\n  );\n};\n\nexport default ClientForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}