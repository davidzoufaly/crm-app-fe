{"version":3,"file":"static/webpack/static/development/pages/clients/[key].js.56416729880a07957d70.hot-update.js","sources":["webpack:///./components/EmailForm.tsx","webpack:///./components/LoadingSpinner.tsx","webpack:///./library/globalVariables.tsx"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"./UserContext\";\nimport languages from \"../library/languages\";\nimport globalVars from \"../library/globalVariables\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Box, Typography, TextField, Button, Grid } from \"@material-ui/core\";\nimport SendIcon from '@material-ui/icons/Send';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formWrapper: {\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      padding: theme.spacing(3),\n      boxShadow: theme.shadows[\"1\"],\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\",\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\"\n      }\n    },\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  })\n);\n\nconst EmailForm = ({\n  to,\n  isEmailCreated,\n  toggleIsEmailCreated,\n  unCheckAll\n}: any) => {\n  const initEmail = { to: to, subject: \"\", message: \"\" };\n  const [email, setEmail] = useState(initEmail);\n  const [spinner, setSpinner] = useState(false);\n  const user = useContext(UserContext);\n  const classes = useStyles({});\n\n  useEffect(() => {\n    setEmail({ ...email, to: to });\n  }, [to]);\n\n  const sendEmail = async e => {\n    e.preventDefault();\n    setSpinner(true);\n\n    const res = await axios({\n      method: \"post\",\n      data: email,\n      url: `${globalVars.serverURL}/emails/send`,\n      params: { key: user.user.userkey },\n      responseType: \"json\"\n    });\n\n    const data = await res.data;\n    data ? setSpinner(false) : null;\n    if (\n      data === globalVars.msgSuccess ||\n      data === \"Setup your email settings first\"\n    ) {\n      setEmail(initEmail);\n      toggleIsEmailCreated();\n      // if email is sending from clients page\n      unCheckAll ? unCheckAll() : null;\n      data === globalVars.msgSuccess\n        ? alert(languages.en.yourEmailSentSucces)\n        : alert(languages.en.setupYourEmailSettings);\n    } else {\n      alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  const onChange = e => {\n    setEmail({ ...email, [e.target.name]: e.target.value });\n  };\n\n  return isEmailCreated && to.length > 0 ? (\n    <Box className={classes.formWrapper}>\n      <Typography component=\"h2\" variant=\"h4\" gutterBottom>\n        {languages.en.email}\n      </Typography>\n      <form onSubmit={sendEmail}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              type=\"text\"\n              id=\"email-to\"\n              margin=\"normal\"\n              fullWidth\n              multiline\n              label={languages.en.to}\n              name=\"to\"\n              value={email.to}\n              disabled\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              type=\"text\"\n              id=\"email-subject\"\n              name=\"subject\"\n              margin=\"normal\"\n              fullWidth\n              label={languages.en.subject}\n              autoFocus={true}\n              value={email.subject}\n              onChange={onChange}\n              disabled={spinner}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              name=\"message\"\n              multiline\n              rows=\"4\"\n              fullWidth\n              label={languages.en.message}\n              onChange={onChange}\n              value={email.message}\n              disabled={spinner}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Box display=\"flex\" justifyContent=\"flex-end\" mt=\"2rem\">\n              {spinner ? <CircularProgress /> : null}\n              <Button\n                onClick={toggleIsEmailCreated}\n                color=\"secondary\"\n                variant=\"contained\"\n                style={{marginRight: \"1rem\"}}\n              >\n                {languages.en.cancel}\n              </Button>\n              <Button type=\"submit\" color=\"primary\" variant=\"contained\" startIcon={<SendIcon/>}>\n                {languages.en.send}\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </form>\n    </Box>\n  ) : null;\n};\n\nexport default EmailForm;\n","import CircularProgress from '@material-ui/core/CircularProgress';\n\nconst LoadingSpinner = () => (\n      <CircularProgress />\n)\n\nexport default LoadingSpinner;","const globalVars = {\n    titleSubText: \"| CRM-APP\",\n    // serverURL: \"http://localhost:8080/api\",\n    serverURL: \"https://crm-app-be.herokuapp.com/api\",\n    permanentFields: {\n        fistName: \"First name\",\n        lastName: \"Last name\",\n        email: \"Email\",\n        dateAdded: \"Date added\",\n        lastModified: \"Last modified\"\n    },\n    fieldTypes: {\n        text : \"text\",\n        number: \"number\",\n        select: \"select\"\n    },\n    blankOption: \"---\",\n    msgSuccess: \"Success\"\n}\n\nexport default globalVars;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AADA;AAIA;AACA;AADA;AAZA;AADA;AACA;AAkBA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AACA;AALA;AAIA;AAJA;AAAA;AACA;AADA;AAYA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA6BA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnJA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAGA;;;;;;;;;;;;ACNA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAjBA;AAoBA;;;;A","sourceRoot":""}