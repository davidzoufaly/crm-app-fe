{"version":3,"file":"static/webpack/static/development/pages/clients/[key].js.b271e3eb5af6546bbaf8.hot-update.js","sources":["webpack:///./components/clients/ClientForm.tsx"],"sourcesContent":["import globalVars from \"../../library/globalVariables\";\n\nconst ClientForm = ({ fields, onChange, newClient }: any) => {\n  const inputs = fields.map((e: any) => {\n    if (e.fieldName !== globalVars.permanentFields.dateAdded && e.fieldName !== globalVars.permanentFields.lastModified) {\n      if (e.fieldType === \"text\") {\n        return (\n          <div key={e.fieldName}>\n            <label htmlFor={e.fieldName}>\n              {e.fieldName}\n            </label>\n            <input\n              type=\"text\"\n              id={e.fieldName}\n              autoFocus={e.fieldName === globalVars.permanentFields.fistName}\n              name={e.fieldName}\n              onChange={() => onChange(e.fieldType, event)}\n              defaultValue={newClient[e.fieldName]}\n            />\n          </div>\n        );\n      } else if (e.fieldType === \"number\") {\n        return (\n          <div key={e.fieldName}>\n            <label htmlFor={e.fieldName}> \n             {e.fieldName} \n            </label>\n            <input\n              id={e.fieldName}\n              type=\"number\"\n              name={e.fieldName}\n              onChange={() => onChange(e.fieldType, event)}\n              defaultValue={newClient[e.fieldName]}\n            />\n          </div>\n        );\n      } else if (e.fieldType === \"select\") {\n        return (\n          <div key={e.fieldName}>\n            <label htmlFor={e.fieldName}>\n              {e.fieldName}\n            </label>\n            <select\n              id={e.fieldName}\n              name={e.fieldName}\n              onChange={() => onChange(e.fieldType, event)}\n              defaultValue={newClient[e.fieldName]}\n            >\n              <option>{globalVars.blankOption}</option>\n              {e.fieldOptions.map((e: any) => {\n                return (\n                  <option value={e.value} key={e.id}>\n                    {e.value}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        );\n      }\n    }\n  });\n  return <div>{inputs}</div>;\n};\n\nexport default ClientForm;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}