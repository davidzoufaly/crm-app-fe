{"version":3,"file":"static/webpack/static/development/pages/clients/[key].js.2e1344a4fb12a65ba00c.hot-update.js","sources":["webpack:///./components/clients/TableBody.tsx"],"sourcesContent":["import { useContext } from \"react\";\nimport Link from \"next/link\";\nimport uniqid from \"uniqid\";\nimport UserContext from \"../UserContext\";\nimport languages from \"../../library/languages\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport {TableCell, TableRow, Checkbox, Button } from '@material-ui/core';\n\nconst TableBody = ({ clients, sort, fields, handleCheckbox }: any) => {\n  const { sortBy, reverse } = sort;\n  const user = useContext(UserContext);\n  // field we want to filter is type number -> return true and filter it correctly -> 23 > 4\n  if (fields.some(e => e.fieldName === sortBy && e.fieldType === \"number\")) {\n    clients.sort((a: any, b: any) =>\n      reverse ? b[sortBy] - a[sortBy] : a[sortBy] - b[sortBy]\n    );\n  } else {\n    clients.sort((a: any, b: any) =>\n      reverse\n        ? b[sortBy] > a[sortBy]\n          ? -1\n          : 1\n        : b[sortBy] < a[sortBy]\n        ? -1\n        : 1\n    );\n  }\n\n  const fieldNames = [];\n  fields.forEach((e: any) => fieldNames.push(e.fieldName));\n\n  const tableClients = clients.map((client: any) => {\n    let items = [];\n\n    for (let i = 0; i < fieldNames.length; i++) {\n      items[i] = null;\n    }\n\n    const tableItem = () => {\n      for (let key in client) {\n        //show only clients data with existing fields\n        if (client[key] !== client._id && fieldNames.includes(key)) {\n          items[fieldNames.indexOf(key)] = (\n            <TableCell key={uniqid()}>{client[key]}</TableCell>\n          );\n        }\n      }\n      // add put checkbox at first position\n      items.unshift(\n        <TableCell padding=\"checkbox\" key={uniqid()}>\n        <Checkbox\n        color=\"primary\"\n        checked={!!client.isChecked || client.isChecked}\n        onChange={() => handleCheckbox(client._id)}\n        inputProps={{\n          'aria-label': 'primary checkbox',\n        }}\n      />\n      </TableCell>\n      );\n      // add put profile link at last position\n      items.push(\n        <TableCell key={uniqid()}>\n          <Link\n            href={`/client/[id]/?key=${user.user.userkey}`}\n            as={`/client/${client._id}/?key=${user.user.userkey}`}\n          >\n            <Button startIcon={<PersonIcon/>}>{languages.en.go}</Button>\n          </Link>\n        </TableCell>\n      );\n\n      items = items.map(e =>\n        !!!e ? <TableCell key={uniqid()}></TableCell> : e\n      );\n\n      return items;\n    };\n\n    return <TableRow key={client._id} hover={true}>{tableItem()}</TableRow>;\n  });\n  return tableClients;\n};\n\nexport default TableBody;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}