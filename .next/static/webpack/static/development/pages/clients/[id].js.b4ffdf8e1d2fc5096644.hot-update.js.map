{"version":3,"file":"static/webpack/static/development/pages/clients/[id].js.b4ffdf8e1d2fc5096644.hot-update.js","sources":["webpack:///./components/SingleClientData.tsx"],"sourcesContent":["import stringMethods from \"../library/stringMethods\";\n\nconst SingleClientData = ({ fieldsData, client }: any) =>\n  fieldsData.map(field => {\n    switch (field.fieldType) {\n      case \"text\":\n        return (\n          <li key={field.fieldName}>\n            {new stringMethods(field.fieldName)\n              .camelStringToText()\n              .firstCharUpperCase()\n              .getString()}\n            <textarea value={client[field.fieldName]} />\n          </li>\n        );\n      case \"number\":\n        return (\n          <li key={field.fieldName}>\n            {new stringMethods(field.fieldName)\n              .camelStringToText()\n              .firstCharUpperCase()\n              .getString()}\n            <input type=\"number\" value={client[field.fieldName]} />\n          </li>\n        );\n      case \"select\":\n        return (\n          <li key={field.fieldName}>\n            {new stringMethods(field.fieldName)\n              .camelStringToText()\n              .firstCharUpperCase()\n              .getString()}\n            <select value={client[field.fieldName]}>\n              {field.fieldOptions.map(option => (\n                <option key={option.id}>{option.value}</option>\n              ))}\n            </select>\n          </li>\n        );\n    }\n  });\n\nexport default SingleClientData;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AA7BA;AAoCA;AAtCA;AACA;AAuCA;;;;A","sourceRoot":""}