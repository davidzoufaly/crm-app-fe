{"version":3,"file":"static/webpack/static/development/pages/settings.js.4ff25cb7c41f6e871eb4.hot-update.js","sources":["webpack:///./components/settings/webform/WebFormOptionSelect.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport WebFormOptions from \"./WebFormOptions\";\n\nconst webFormOptionSelect = ({ optionSelect, webFields, addVisibleSelect }) => {\n  const [showOptions, setShowOptions] = useState(false);\n\n  const showOptionsOnClick = () => {\n    setShowOptions(true);\n  };\n\n  const insertIntoForm = webFields.map(field =>\n    optionSelect !== null ? (\n      optionSelect[0].fieldName === field.fieldName ? (\n        <div key={field.id}>\n          <p>\n            Should be <strong>{field.fieldName}</strong> visible in form?\n          </p>\n          <button id={field.fieldName} onClick={addVisibleSelect}>\n            YES\n          </button>\n          <button onClick={showOptionsOnClick}>NO</button>\n        </div>\n      ) : null\n    ) : null\n  );\n\n  return (\n    <>\n      {insertIntoForm}\n      {showOptions ? <WebFormOptions optionSelect={optionSelect} /> : null}\n    </>\n  );\n};\n\nexport default webFormOptionSelect;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAgBA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}