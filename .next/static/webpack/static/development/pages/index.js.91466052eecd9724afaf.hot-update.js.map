{"version":3,"file":"static/webpack/static/development/pages/index.js.91466052eecd9724afaf.hot-update.js","sources":["webpack:///./components/homepage/RegisterForm.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport TextInput from \"./TextInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\n\nconst RegisterForm = () => {\n  const [regUser, setRegUser] = useState({\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  });\n\n  const onChange = e => {\n    switch (e.target.name) {\n      case \"username\":\n        return setRegUser({ ...regUser, username: e.target.value });\n      case \"password\":\n        return setRegUser({ ...regUser, password: e.target.value });\n      case \"repeat-password\":\n        return setRegUser({ ...regUser, repeatPassword: e.target.value });\n    }\n  };\n\n  const sentFormToBe = async () => {\n    const userRes = await axios({\n      method: \"POST\",\n      data: regUser,\n      url: `${globalVars.serverURL}/users`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n    if (userData.msg === \"Success\") {\n      alert(languages.en.success);\n    } else {\n      alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  const onRegister = () => {\n      regUser.password === regUser.repeatPassword\n        ? sentFormToBe()\n        : alert(languages.en.passwordsDoesNotMatch)\n  };\n\n  return (\n    <>\n      <h2>Register</h2>\n      <form>\n        <TextInput\n          onChange={onChange}\n          type=\"text\"\n          value={regUser.username}\n          text=\"username\"\n          title={new stringMethods(languages.en.username)\n            .firstCharUpperCase()\n            .getString()}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={regUser.password}\n          text=\"password\"\n          title={languages.en.password}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={regUser.repeatPassword}\n          text=\"repeat-password\"\n          title={new stringMethods(languages.en.repeatPassword)\n            .firstCharUpperCase()\n            .getString()}\n        />\n        <LoginButton onClick={onRegister} text={languages.en.register} />\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAAA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AANA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}