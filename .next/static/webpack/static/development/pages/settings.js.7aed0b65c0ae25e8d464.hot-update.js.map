{"version":3,"file":"static/webpack/static/development/pages/settings.js.7aed0b65c0ae25e8d464.hot-update.js","sources":["webpack:///./library/stringMethods.tsx"],"sourcesContent":["class StringMethods {\n  private text: string;\n\n  constructor(text: string) {\n    this.text = text;\n  }\n\n  camelStringToText = () => {\n    this.text = Array.from(this.text)\n      .map(e => (e === e.toUpperCase() ? (e = `%-%${e.toLowerCase()}`) : e))\n      .join(\"\")\n      .replace(/%-%/g, \" \");\n\n    return this;\n  };\n\n  firstCharUpperCase = () => {\n    this.text = Array.from(this.text)\n      .map((e, i) => (i === 0 ? e.toUpperCase() : e ))\n      .join(\"\");\n\n    return this;\n  };\n\n  removeSlash = () => {\n    this.text = this.text.replace(\"/\", \"\");\n    return this;\n  };\n\n  addStringToEnd = (text: string) => {\n    this.text = this.text + \" \" + text;\n    return this;\n  };\n\n  textToCamelString = () => {\n    let array = Array.from(this.text.toLowerCase());\n\n    for (let i = 0; i < array.length; i++) {\n      if (array[i] === \" \") {\n        array[i + 1] = array[i + 1].toUpperCase();\n        array.splice(i, 1);\n      }\n    }\n    this.text = array.join(\"\");\n    return this;\n  };\n\n  replaceStringDiacritics = () => {\n    this.text = this.text.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    return this;\n  }\n\n  getString = () => {\n    return this.text;\n  }\n}\n\nexport default StringMethods;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AADA;AACA;AADA;AACA;AADA;AAKA;AACA;AAAA;AAIA;AACA;AACA;AAZA;AAcA;AACA;AAAA;AAGA;AACA;AACA;AApBA;AAsBA;AACA;AACA;AACA;AAzBA;AA2BA;AACA;AACA;AACA;AA9BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA3CA;AA6CA;AACA;AACA;AACA;AAhDA;AAkDA;AACA;AACA;AAnDA;AACA;AACA;AAmDA;;;;A","sourceRoot":""}