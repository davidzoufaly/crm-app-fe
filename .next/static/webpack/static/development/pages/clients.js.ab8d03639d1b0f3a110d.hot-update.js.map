{"version":3,"file":"static/webpack/static/development/pages/clients.js.ab8d03639d1b0f3a110d.hot-update.js","sources":["webpack:///./components/CreateClient.tsx"],"sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\n\nconst CreateClient = ({\n  fields,\n  isClientAdded,\n  toggleIsClientAdded,\n  refreshList\n}: any) => {\n  const initialNewClintState = fields\n    .map((e: any) => e.fieldName)\n    .reduce((o, key) => Object.assign(o, { [key]: \"\" }), {});\n\n  const [newClient, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"onNumberChange\":\n        return {\n          ...state,\n          [action.fieldName]: parseInt(action.event.target.value)\n        };\n\n      case \"onTextChange\":\n        return { ...state, [action.fieldName]: action.event.target.value };\n      \n        case \"clear\":\n        return initialNewClintState;\n\n      default:\n        return state;\n    }\n  }, initialNewClintState);\n\n  const onChange = (fieldName, fieldType, event) => {\n    fieldType === \"number\"\n      ? dispatch({\n          type: \"onNumberChange\",\n          fieldName,\n          event\n        })\n      : dispatch({\n          type: \"onTextChange\",\n          fieldName,\n          event\n        });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const clientRes = await axios({\n      method: \"post\",\n      data: newClient,\n      url: `${globalVars.serverURL}/clients`,\n      responseType: \"json\"\n    });\n    const clientData = await clientRes.data;\n    if (clientData.msg === \"Success\") {\n      dispatch({\n        type: \"clear\"\n      });\n      toggleIsClientAdded();\n      refreshList();\n    }\n  };\n\n  const onCancel = () => {\n    dispatch({\n      type: \"clear\"\n    });\n    toggleIsClientAdded();\n  };\n\n  useEffect(() => {\n    // console.log(newClient);\n  });\n\n  return isClientAdded ? (\n    <div>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        Add new client\n      </Typography>\n      <form onSubmit={onSubmit}>\n        <ClientForm fields={fields} onChange={onChange} newClient={newClient} />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Save\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\n          Cancel\n        </Button>\n      </form>\n    </div>\n  ) : null;\n};\n\nexport default CreateClient;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AAtBA;AAAA;AACA;AAuBA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AACA;AAHA;AAEA;AAFA;AAAA;AACA;AADA;AAQA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}