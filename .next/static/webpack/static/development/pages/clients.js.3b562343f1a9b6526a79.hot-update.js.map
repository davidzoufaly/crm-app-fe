{"version":3,"file":"static/webpack/static/development/pages/clients.js.3b562343f1a9b6526a79.hot-update.js","sources":["webpack:///./components/ClientForm.tsx"],"sourcesContent":["import stringMethods from \"../library/stringMethods\";\n\nconst ClientForm = ({ fields, onChange, newClient }: any) => {\n\n  const inputs = fields.map((e: any) => {\n    if (e.fieldName !== \"dateAdded\" && e.fieldName !== \"dateModified\") {\n      if (e.fieldType === \"text\") {\n        return (\n          <div key={e.fieldName}>\n            <p>{new stringMethods(e.fieldName).camelStringToText().firstCharUpperCase().getString()}</p>\n            <input\n              type=\"text\"\n              name={e.fieldName}\n              onChange={() => onChange(e.fieldName, event)}\n              value={newClient[e.fieldName]}\n            />\n          </div>\n        );\n      } else if (e.fieldType === \"number\") {\n        return (\n          <div key={e.fieldName}>\n            <p>{e.fieldName}</p>\n            <input type=\"number\" name={e.fieldName} onChange={() => onChange(e.fieldName, e.fieldType, event)} />\n          </div>\n        )\n      } else if (e.fieldType === \"select\") {\n        return (\n          <div key={e.fieldName}>\n            <p>{e.fieldName}</p>\n            <select name={e.fieldName} onChange={() => onChange(e.fieldName, event)}>\n              <option>---</option>\n              {e.fieldOptions.map((e: any) => {\n                return (\n                  <option value={e.value} key={e.id}>\n                    {e.value}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        );\n      }\n    }\n  });\n  return <form>{inputs}</form>;\n};\n\nexport default ClientForm;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}