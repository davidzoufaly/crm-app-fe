{"version":3,"file":"static/webpack/static/development/pages/settings.js.215a33df20f398fc9a0c.hot-update.js","sources":["webpack:///./components/settings/webform/WebForm.tsx"],"sourcesContent":["import { useReducer, useEffect, useState } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormOptionSelect from \"./WebFormOptionSelect\";\nimport WebFormOptions from \"./WebFormOptions\";\n\n//TODO: KEY list error\n\nconst WebForm = ({ fields }) => {\n  const [counter, setCounter] = useState(0);\n  const [webFields, setWebFields] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true, order: counter }\n            : field\n        );\n\n      case \"addVisibleSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? {\n                ...field,\n                fieldInForm: true,\n                fieldFormVisible: true,\n                pause: false,\n                order: counter\n              }\n            : field\n        );\n\n      case \"addHiddenSelect\":\n        return state.map(field =>\n          field.pause\n            ? {\n                ...field,\n                fieldInForm: true,\n                fieldFormVisible: false,\n                pause: false,\n                order: counter,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.value === action.payload.optionValue\n                    ? { ...option, preselected: true }\n                    : option\n                )\n              }\n            : field\n        );\n\n      case \"pauseSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, pause: true }\n            : field\n        );\n\n      case \"remove\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? {\n                ...field,\n                fieldInForm: false,\n                fieldFormVisible: false,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.preselected\n                    ? { ...option, preselected: false }\n                    : option\n                )\n              }\n            : field\n        );\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field => {\n      if (field.fieldName === e.target.value) {\n        if (field.fieldType !== \"select\") {\n          setWebFields({\n            type: \"add\",\n            payload: { fieldName: e.target.value }\n          });\n          setCounter(prevCount => prevCount + 1);\n        } else {\n          setWebFields({\n            type: \"pauseSelect\",\n            payload: { fieldName: e.target.value }\n          });\n        }\n      }\n    });\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: { fieldName: e.target.id }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: { optionValue: e.target.value }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: { fieldName: e.target.id }\n    });\n  };\n\n  useEffect(() => {\n    console.log(webFields);\n  }, [webFields]);\n\n  return (\n    <>\n      <h3>Select field:</h3>\n      <WebFormSelect webFields={webFields} addNotSelect={addNotSelect} />\n      <WebFormOptionSelect\n        webFields={webFields}\n        addVisibleSelect={addVisibleSelect}\n        WebFormOptions={\n          <WebFormOptions\n            webFields={webFields}\n            addHiddenSelect={addHiddenSelect}\n          />\n        }\n      />\n      <h3>Selected fields:</h3>\n      <WebFormList webFields={webFields} removeFromList={removeFromList} />\n    </>\n  );\n};\n\nexport default WebForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AADA;AADA;AACA;AAKA;AACA;AAAA;AAIA;AACA;AACA;AACA;AANA;AADA;AACA;AAWA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AAPA;AADA;AACA;AAgBA;AACA;AAAA;AAEA;AADA;AADA;AACA;AAKA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AADA;AADA;AALA;AADA;AACA;AAcA;AACA;AA/DA;AAiEA;AApEA;AAAA;AACA;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}