{"version":3,"file":"static/webpack/static/development/pages/_app.js.7a04a501953718b640cf.hot-update.js","sources":["webpack:///./pages/_app.tsx"],"sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport CountContext from \"../components/CountContext\";\nimport UserContext from \"../components/UserContext\";\nimport globalVars from \"../library/globalVariables\";\nimport theme from \"../src/theme\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nexport default class MyApp extends App {\n  state = {\n    counters: { clientCounter: \"\", emailsCounter: \"\", fieldCounter: \"\" },\n    user: {\n      username: \"\",\n      signedIn: false\n    }\n  };\n\n  componentDidMount() {\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n    if (jssStyles) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n    this.getCounts();\n  }\n\n  getCounts = async () => {\n    const resClientCount = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/clients/count`,\n      responseType: \"json\"\n    });\n    const clientCounter = await resClientCount.data;\n\n    const resFieldsData = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/fields/count`,\n      responseType: \"json\"\n    });\n    const fieldCounter = await resFieldsData.data;\n\n    const resEmailsCount = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/emails/count`,\n      responseType: \"json\"\n    });\n    const emailsCounter = await resEmailsCount.data;\n\n    this.setState({\n      clientCounter,\n      fieldCounter,\n      emailsCounter\n    });\n  };\n\n  setUser = username => {\n    this.setState({\n      ...this.state,\n      ...this.state.user, username\n    });\n    sessionStorage.setItem('user', this.state.user.username);\n    sessionStorage.setItem('signedIn', this.state.user.signedIn.toString());\n    Router.push('/dashboard');\n  };\n\n  checkUser = () =>Â {\n    sessionStorage.getItem('user') === \"\"\n      ? Router.push('/')\n      : null\n  }\n\n  logoutUser = () => {\n    this.setState({\n      ...this.state,\n      user : \"\"\n    }, () => sessionStorage.setItem('user', this.state.user))\n    Router.push('/');\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <Head>\n          <title>CRM APP</title>\n        </Head>\n        <UserContext.Provider\n          value={{ setUser: this.setUser, logoutUser: this.logoutUser, checkUser: this.checkUser, user: this.state.user }}\n        >\n          <CountContext.Provider value={this.state.counters}>\n            <ThemeProvider theme={theme}>\n              <CssBaseline />\n              <Component {...pageProps} />\n            </ThemeProvider>\n          </CountContext.Provider>\n        </UserContext.Provider>\n      </React.Fragment>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AACA;;;;;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AASA;AACA;AACA;AAHA;AACA;AATA;AAQA;AARA;AAAA;AACA;AADA;AAaA;AAbA;AAAA;AAgBA;AACA;AACA;AAHA;AACA;AAhBA;AAeA;AAfA;AAAA;AACA;AADA;AAoBA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA4BA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAFA;AAGA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AA5DA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAuDA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA1FA;AACA;;;;;A","sourceRoot":""}