{"version":3,"file":"static/webpack/static/development/pages/_app.js.8f832f46cab6035e4258.hot-update.js","sources":["webpack:///./components/CountContext.tsx","webpack:///./pages/_app.tsx"],"sourcesContent":["import { useEffect, useState, createContext } from \"react\";\n\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\n\nconst CountContext = (props) => {\n    const [count, setCount] = useState({});\n    const Context = createContext(count);\n\n    useEffect(() => {\n        const getCounts = async () => {\n            const resClientCount = await axios({\n                method: \"GET\",\n                url: `${globalVars.serverURL}/clients/count`,\n                responseType: \"json\"\n              });\n              const clientData = await resClientCount.data;\n            \n              const resFieldsData = await axios({\n                method: \"GET\",\n                url: `${globalVars.serverURL}/fields/count`,\n                responseType: \"json\"\n              });\n              const fieldData = await resFieldsData.data;\n            \n              const resEmailsCount = await axios({\n                method: \"GET\",\n                url: `${globalVars.serverURL}/emails/count`,\n                responseType: \"json\"\n              })\n              const emailsData = await resEmailsCount.data;\n\n              setCount({\n                  clientData,\n                  fieldData,\n                  emailsData\n              })\n        } \n        getCounts();\n    }, [])\n\n    return (\n        <Context.Provider value={count}>\n            {props.children}\n        </Context.Provider>\n    )\n}\n\nexport default CountContext;","import React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"../src/theme\";\nimport CountContext from \"../components/CountContext\";\n\nexport default class MyApp extends App {\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n    if (jssStyles) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <Head>\n          <title>My page</title>\n        </Head>\n        <ThemeProvider theme={theme}>\n          <CountContext>\n            {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n            <CssBaseline />\n            <Component {...pageProps} />\n          </CountContext>\n        </ThemeProvider>\n      </React.Fragment>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AASA;AACA;AACA;AAHA;AACA;AATA;AAQA;AARA;AAAA;AACA;AADA;AAaA;AAbA;AAAA;AAgBA;AACA;AACA;AAHA;AACA;AAhBA;AAeA;AAfA;AAAA;AACA;AADA;AAoBA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA2BA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA1BA;AACA;;;;;A","sourceRoot":""}