{"version":3,"file":"static/webpack/static/development/pages/emails.js.b5500125a22e7ec1d98b.hot-update.js","sources":["webpack:///./pages/emails.tsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport generateUniqueId from \"generate-unique-id\";\nimport Header from \"../components/Header\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport CountContext from \"../components/CountContext\";\nimport UserContext from \"../components/UserContext\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport languages from \"../library/languages\";\n\nconst Emails = props => {\n  const counters = useContext(CountContext);\n  const [initialized, setInitialized] = useState(false);\n  const router = useRouter();\n  const user = useContext(UserContext);\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n\n  const tableBody = props.data\n    .map(email => (\n      <tr key={generateUniqueId()}>\n        <td>{email.date}</td>\n        <td>\n          {email.to.map(e => (\n            <p key={generateUniqueId()}>{e}</p>\n          ))}\n        </td>\n        <td>{email.subject}</td>\n        <td>\n          {email.message.length > 50\n            ? `${email.message.slice(0, 50)}...`\n            : email.message}\n        </td>\n      </tr>\n    ))\n    .reverse();\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  return !user.user.signedIn && !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <>\n      <Header />\n      <h1>{h1}</h1>\n      <p>{counters.counters.emailsCounter}</p>\n      <table>\n        <thead>\n          <tr>\n            <td>{languages.en.dateAndTime}</td>\n            <td>{languages.en.to}</td>\n            <td>{languages.en.subject}</td>\n            <td>{languages.en.message}</td>\n          </tr>\n        </thead>\n        <tbody>{tableBody}</tbody>\n      </table>\n    </>\n  );\n};\n\nEmails.getInitialProps = async (context : any) => {\n  const res = await axios({\n    method: \"get\",\n    params: {key: context.query.Api_KEY},\n    url: `${globalVars.serverURL}/emails`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return { data };\n};\n\nexport default Emails;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAkBA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAOA;AAPA;AAQA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;;;;A","sourceRoot":""}