{"version":3,"file":"static/webpack/static/development/pages/clients.js.7cd7c925db05ef4adb37.hot-update.js","sources":["webpack:///./pages/clients.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\nimport ClientsList from \"../components/ClientList\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport TableHead from \"../components/TableHead\";\n\n//TODO: PŘIDAT NOVÉHO KLIENTA\n\n\nconst Clients = ({ fieldData, clientData }: any) => {\n  const router = useRouter();\n\n  const [clients] = useState(clientData);\n  const [reverse, setReverseOrder] = useState(false);\n  const [sort, setSortBy] = useState(\"name\");\n  const [headingOne, setHeadingOne] = useState(\"\");\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    setHeadingOne(\n      new stringMethods(router.pathname)\n        .removeSlash()\n        .firstCharUpperCase()\n        .getString()\n    );\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    console.log(fieldData);\n    setInitialized(true);\n  });\n\n  const sortBy = (fieldName) => {\n    setSortBy(fieldName);\n    console.log(sortBy);\n    reverse === false ? setReverseOrder(true) : setReverseOrder(false);\n  }\n\n  if (!initialized) {\n    return \"Loading\";\n  }\n  return (\n    <div>\n      <Header />\n      <h1>{headingOne}</h1>\n      <table>\n        <thead>\n          <TableHead fields={fieldData} sortBy={sortBy}/>\n        </thead>\n        <tbody>\n          <ClientsList clients={clients} fields={fieldData} sort={sort} reverse={reverse}/>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nClients.getInitialProps = async () => {\n  const clientRes = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients`,\n    responseType: \"json\"\n  });\n  const clientData = await clientRes.data;\n\n  const fieldRes = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  })\n  const fieldData = await fieldRes.data\n\n  return {\n    clientData, fieldData\n  };\n};\n\nexport default Clients;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAQA;AACA;AAMA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AASA;AACA;AACA;AAHA;AACA;AATA;AAQA;AARA;AAAA;AACA;AADA;AAaA;AAbA;AAgBA;AAAA;AADA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;;;;A","sourceRoot":""}