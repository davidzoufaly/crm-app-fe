{"version":3,"file":"static/webpack/static/development/pages/emails.js.907833ffba7dee9e557a.hot-update.js","sources":["webpack:///./node_modules/generate-unique-id/index.js","webpack:///./pages/emails.tsx"],"sourcesContent":["'use strict'\n\nfunction generateUniqueId ({\n  length = 20,\n  useLetters = true,\n  useNumbers = true,\n  includeSymbols = [],\n  excludeSymbols = []\n} = {}) {\n  let letters = 'abcdefghijklmnopqrstuvwxyz'\n  let numbers = '0123456789'\n  let availableChars = []\n  let lettersArr = []\n  let numbersArr = []\n\n  if (useLetters) {\n    if (excludeSymbols.length) letters = filterSymbols(excludeSymbols, letters)\n    lettersArr = letters.split('')\n  }\n\n  if (useNumbers) {\n    if (excludeSymbols.length) numbers = filterSymbols(excludeSymbols, numbers)\n    numbersArr = numbers.split('')\n  }\n\n  availableChars = [...lettersArr, ...numbersArr, ...includeSymbols]\n\n  return createId(availableChars, length)\n}\n\nfunction createId (availableChars, idLength) {\n  let id = ''\n\n  for (let i = 0; i < idLength; i++) {\n    id += availableChars[getRandomNumber(availableChars.length)]\n  }\n\n  return id\n}\n\nfunction filterSymbols (excludeSymbols, group) {\n  excludeSymbols.forEach(symbol => (group = group.replace(symbol, '')))\n\n  return group\n}\n\nfunction getRandomNumber (limit) {\n  return Math.floor(Math.random() * limit).toString()\n}\n\nmodule.exports = generateUniqueId\n","import Header from \"../components/Header\";\nimport globalVars from \"../library/globalVariables\";\nimport axios from \"axios\";\nimport generateUniqueId from \"generate-unique-id\";\n\nconst Emails = ({ data }) => {\n\n  const tableBody = data.map(email => (\n    <tr>\n      <td key={generateUniqueId()}>{email.date}</td>\n      <td key={generateUniqueId()}>{email.to}</td>\n      <td key={generateUniqueId()}>{email.subject}</td>\n      <td key={generateUniqueId()}>{email.message}</td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Header />\n      <table>\n        <thead>\n          <tr>\n            <td>Date and time</td>\n            <td>To</td>\n            <td>Subject</td>\n            <td>Message</td>\n          </tr>\n        </thead>\n        <tbody>{tableBody}</tbody>\n      </table>\n    </>\n  );\n};\n\nEmails.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/emails`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return { data };\n};\n\nexport default Emails;\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAMA;AANA;AAOA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;A","sourceRoot":""}