{"version":3,"file":"static/webpack/static/development/pages/emails/[key].js.7d1462a2a2c84ddb1cf8.hot-update.js","sources":["webpack:///./components/Header.tsx"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport EmailIcon from '@material-ui/icons/Email';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { Grid, Button, Toolbar, AppBar, Box, IconButtonÂ } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    menuButton: {\n      marginRight: theme.spacing(2),\n      color: \"white\"\n    },\n    title: {\n      flexGrow: 1\n    },\n    toolBar: {\n      padding: 0,\n    },\n    mobilMenuButton: {\n      color: \"white\",\n      display: \"none\", [theme.breakpoints.down(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    menu: {\n      // display: \"block\", [theme.breakpoints.down(\"sm\")]: {\n      //   display: \"none\"\n      // }\n    }\n  })\n);\n\nconst Header = () => {\n  const classes = useStyles({})\n  const user = useContext(UserContext);\n  const [mobilMenu, setMobilMenu] = useState(false)\n\n  const toggleMenu = () => {\n      setMobilMenu(prevState => !prevState)\n  }\n\n  return (\n    <AppBar position=\"fixed\">\n      <Container maxWidth=\"lg\">\n        <Toolbar className={classes.toolBar}>\n          <Box display=\"flex\" width=\"100%\" justifyContent=\"space-between\">\n            <IconButton onClick={toggleMenu} className={classes.mobilMenuButton}>\n                <MenuIcon/>\n            </IconButton>\n            <Box component=\"nav\" display={{ sm: 'none', md: 'block' }} className={classes.menu} >\n              <Grid container>\n                <Grid item>\n              <Link\n                href=\"/dashboard/[key]\"\n                as={`/dashboard/${user.user.userkey}`}\n              >\n                <Button startIcon={<DashboardIcon />} className={classes.menuButton}>\n                  {languages.en.dashboard}\n                </Button>\n              </Link>\n              </Grid>\n              <Grid item>\n              <Link href=\"/clients/[key]\" as={`/clients/${user.user.userkey}`}>\n                <Button startIcon={<PeopleAltIcon />} className={classes.menuButton}>\n                  {languages.en.clients}\n                </Button>\n              </Link>\n              </Grid>\n              <Grid item>\n              <Link href=\"/emails/[key]\" as={`/emails/${user.user.userkey}`}>\n                <Button startIcon={<EmailIcon />} className={classes.menuButton}>\n                  {languages.en.emails}\n                </Button>\n              </Link>\n              </Grid>\n              <Grid item>\n              <Link\n                href=\"/settings/[key]\"\n                as={`/settings/${user.user.userkey}`}\n              >\n                <Button startIcon={<SettingsIcon />} className={classes.menuButton}>\n                  {languages.en.settings}\n                </Button>\n              </Link>\n              </Grid>\n              </Grid>\n            </Box>\n          </Box>\n          <Button\n            className={classes.menuButton}\n            onClick={() => user.logoutUser()}\n            startIcon={<ExitToAppIcon/>}\n          >\n            {languages.en.logout}\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAGA;AADA;AAIA;AAEA;AACA;AAHA;AAjBA;AADA;AACA;AAyBA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}