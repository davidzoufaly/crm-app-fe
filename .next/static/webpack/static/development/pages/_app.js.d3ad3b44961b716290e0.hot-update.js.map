{"version":3,"file":"static/webpack/static/development/pages/_app.js.d3ad3b44961b716290e0.hot-update.js","sources":["webpack:///./pages/_app.tsx"],"sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport CountContext from \"../components/CountContext\";\nimport UserContext from \"../components/UserContext\";\nimport globalVars from \"../library/globalVariables\";\nimport theme from \"../src/theme\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nexport default class MyApp extends App {\n  state = {\n    counters: { clientCounter: \"\", emailsCounter: \"\", fieldCounter: \"\" },\n    user: {\n      userkey: \"\",\n      signedIn: false\n    }\n  };\n\n  componentDidMount() {\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n    if (jssStyles) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  getCounts = async () => {\n    const resClientCount = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/clients/count`,\n      params: { key: this.state.user.userkey },\n      responseType: \"json\"\n    });\n    const clientCounter = await resClientCount.data;\n\n    const resFieldsData = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/fields/count`,\n      params: { key: this.state.user.userkey },\n      responseType: \"json\"\n    });\n    const fieldCounter = await resFieldsData.data;\n\n    const resEmailsCount = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/emails/count`,\n      params: { key: this.state.user.userkey },\n      responseType: \"json\"\n    });\n    const emailsCounter = await resEmailsCount.data;\n\n    this.setState({\n      ...this.state,\n      counters: { clientCounter, fieldCounter, emailsCounter }\n    });\n  };\n\n  setUser = userkey => {\n    this.setState({\n      ...this.state,\n      user: { ...this.state.user, userkey, signedIn: true }\n    });\n    this.getCounts();\n    sessionStorage.setItem(\"userkey\", this.state.user.userkey);\n    sessionStorage.setItem(\"signedIn\", this.state.user.signedIn.toString());\n    Router.query\n    Router.push({\n        pathname: '/dashboard',\n        query: { Api_KEY: this.state.user.userkey }\n    });\n  };\n\n  checkUser = () => {\n    sessionStorage.getItem(\"signedIn\") === \"false\"\n      ? Router.push(\"/\")\n      : this.setState({\n          ...this.state,\n          user: {\n            ...this.state.user,\n            userkey: sessionStorage.getItem(\"userkey\"),\n            signedIn: true\n          }\n        });\n  };\n\n  logoutUser = () => {\n    this.setState(\n      {\n        ...this.state,\n        user: { ...this.state.user, userkey: \"\", signedIn: false }\n      },\n      () => {\n        sessionStorage.setItem(\"userkey\", this.state.user.userkey);\n        sessionStorage.setItem(\"signedIn\", this.state.user.signedIn.toString());\n      }\n    );\n    Router.push(\"/\");\n  };\n\n  componentDidUpdate() {\n    console.log(this.state.user);\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <Head>\n          <title>CRM APP</title>\n        </Head>\n        <UserContext.Provider\n          value={{\n            setUser: this.setUser,\n            logoutUser: this.logoutUser,\n            checkUser: this.checkUser,\n            user: this.state.user\n          }}\n        >\n          <CountContext.Provider value={this.state.counters}>\n            <ThemeProvider theme={theme}>\n              <CssBaseline />\n              <Component {...pageProps} />\n            </ThemeProvider>\n          </CountContext.Provider>\n        </UserContext.Provider>\n      </React.Fragment>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AACA;;;;;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAOA;AAPA;AAAA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AACA;AAVA;AASA;AATA;AAAA;AACA;AADA;AAeA;AAfA;AAAA;AAkBA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AACA;AAlBA;AAiBA;AAjBA;AAAA;AACA;AADA;AAuBA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA8BA;AACA;AAEA;AAAA;AAAA;AAAA;AAFA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AA/EA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AA2EA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAtHA;AACA;;;;;A","sourceRoot":""}