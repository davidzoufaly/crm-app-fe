{"version":3,"file":"static/webpack/static/development/pages/settings.js.005f66edb2f082e6e79d.hot-update.js","sources":["webpack:///./pages/settings.tsx"],"sourcesContent":["import Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../components/UserContext\";\nimport DefaultFields from \"../components/settings/DefaultFields\";\nimport CustomFields from \"../components/settings/customFields/CustomFields\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport EmailSettings from \"../components/settings/EmailSettings\";\nimport WebForm from \"../components/settings/webform/WebForm\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Settings = ({ dataFields, username, pass }: any) => {\n  const router = useRouter();\n  const [fields, setField] = useState(dataFields);\n  const [initialized, setInitialized] = useState(false);\n  const user = useContext(UserContext);\n\n  const refreshList = async () => {\n    //get data from DB after change\n    const res = await axios({\n      method: \"get\",\n      url: `${globalVars.serverURL}/fields/`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    setField(data);\n  };\n\n  useEffect(() => {\n    //title from url\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    //componendDidMount effect\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  return !user.user.signedIn && !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n        {h1}\n      </Typography>\n      <DefaultFields fields={fields} />\n      <CustomFields fields={fields} refreshList={refreshList} />\n      <EmailSettings data={username, pass} />\n      <WebForm fields={fields} />\n    </div>\n  );\n};\n\nSettings.getInitialProps = async (context : any) => {\n  const resFields = await axios({\n    method: \"GET\",\n    params: {key: context.query.Api_KEY},\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const dataFields = await resFields.data;\n\n  const resEmailSettings = await axios({\n    method: \"GET\",\n    params: {key: context.query.Api_KEY},\n    url: `${globalVars.serverURL}/emails/email-settings`,\n    responseType: \"json\"\n  });\n\n  const dataEmailSettings = await resEmailSettings.data;\n  const {username, pass} = await dataEmailSettings;\n\n  return { dataFields, username, pass };\n};\n\nexport default Settings;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AACA;AAHA;AAEA;AAFA;AAAA;AACA;AADA;AAOA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAOA;AAPA;AAAA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AACA;AAVA;AASA;AATA;AAAA;AACA;AADA;AAgBA;AAhBA;AAAA;AACA;AADA;AAAA;AAiBA;AAAA;AAjBA;AAmBA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqBA;;;;A","sourceRoot":""}