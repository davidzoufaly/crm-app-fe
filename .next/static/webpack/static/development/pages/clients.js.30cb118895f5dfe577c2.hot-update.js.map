{"version":3,"file":"static/webpack/static/development/pages/clients.js.30cb118895f5dfe577c2.hot-update.js","sources":["webpack:///./components/EmailForm.tsx"],"sourcesContent":["import axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport { useState, useEffect } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst EmailForm = ({ to, isEmailCreated, toggleIsEmailCreated, unCheckAll }: any) => {\n  const initEmail = { to, subject: \"\", message: \"\" };\n  const [email, setEmail] = useState(initEmail);\n  const [spinner, setSpinner] = useState(false); \n\n  useEffect(() => {\n    setEmail({ ...email, to: to });\n  }, [to]);\n\n  const sendEmail = async e => {\n    e.preventDefault();\n    let loading = true;\n    console.log(loading);\n    const res = await axios({\n      method: \"post\",\n      data: email,\n      url: `${globalVars.serverURL}/emails/send`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    if (data.msg === \"Success\") {\n      alert(\"Your email has been succesfully sent.\");\n      setEmail(initEmail);\n      // if email is sending from clients page\n      toggleIsEmailCreated();\n      unCheckAll ? unCheckAll() : null;\n      loading = false;\n      console.log(loading);\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const onChange = e => {\n    setEmail({ ...email, [e.target.name]: e.target.value });\n  };\n\n  return isEmailCreated && to.length > 0 ? (\n    <form onSubmit={sendEmail}>\n      <label htmlFor=\"email-to\">To</label>\n      <input type=\"text\" id=\"email-to\" name=\"to\" value={email.to} disabled />\n      <label htmlFor=\"email-subject\">Subject</label>\n      <input\n        type=\"text\"\n        id=\"email-to\"\n        name=\"subject\"\n        value={email.subject}\n        onChange={onChange}\n      />\n      <label htmlFor=\"email-message\">Message</label>\n      <textarea name=\"message\" onChange={onChange} value={email.message} />\n      <button onClick={toggleIsEmailCreated}>Cancel</button>\n      <button type=\"submit\">Send</button>\n    </form>\n  ) : null;\n};\n\nexport default EmailForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AACA;AALA;AAIA;AAJA;AAAA;AACA;AADA;AAUA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}