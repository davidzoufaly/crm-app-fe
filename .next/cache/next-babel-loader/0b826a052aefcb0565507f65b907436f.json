{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/CreateClient.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../../library/globalVariables\";\nimport generateUniqueId from \"generate-unique-id\";\n\nvar CreateClient = function CreateClient(_ref) {\n  var fields = _ref.fields,\n      isClientAdded = _ref.isClientAdded,\n      toggleIsClientAdded = _ref.toggleIsClientAdded,\n      addNewClientToState = _ref.addNewClientToState;\n  var initialNewClintState = fields.map(function (e) {\n    return e.fieldName;\n  }).reduce(function (o, key) {\n    return _Object$assign(o, _defineProperty({}, key, \"\"));\n  }, {});\n\n  var _useReducer = useReducer(function (state, action) {\n    switch (action.type) {\n      case \"onTextChange\":\n        return _objectSpread({}, state, _defineProperty({}, action.payload.fieldName, action.payload.fieldType === \"number\" ? _parseInt(action.payload.value) : action.payload.value));\n\n      case \"addId\":\n        return _objectSpread({}, state, {\n          _id: generateUniqueId({\n            length: 24,\n            useNumbers: true,\n            useLetters: false,\n            includeSymbols: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n          })\n        });\n\n      case \"clear\":\n        return initialNewClintState;\n\n      default:\n        return state;\n    }\n  }, initialNewClintState),\n      newClient = _useReducer[0],\n      setNewClient = _useReducer[1];\n\n  var onChange = function onChange(fieldName, fieldType, event) {\n    setNewClient({\n      type: \"addId\"\n    });\n    setNewClient({\n      type: \"onTextChange\",\n      payload: {\n        fieldName: fieldName,\n        value: event.target.value,\n        fieldType: fieldType\n      }\n    });\n  };\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var clientRes, clientData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return axios({\n                method: \"post\",\n                data: newClient,\n                url: \"\".concat(globalVars.serverURL, \"/clients\"),\n                responseType: \"json\"\n              });\n\n            case 3:\n              clientRes = _context.sent;\n              _context.next = 6;\n              return clientRes.data;\n\n            case 6:\n              clientData = _context.sent;\n\n              if (clientData.msg === \"Success\") {\n                setNewClient({\n                  type: \"clear\"\n                });\n                toggleIsClientAdded();\n                addNewClientToState(newClient);\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onCancel = function onCancel() {\n    setNewClient({\n      type: \"clear\"\n    });\n    toggleIsClientAdded();\n  };\n\n  useEffect(function () {// console.log(newClient);\n  });\n  return isClientAdded ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Add new client\"), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(ClientForm, {\n    fields: fields,\n    onChange: onChange,\n    newClient: newClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Save\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Cancel\"))) : null;\n};\n\nexport default CreateClient;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/CreateClient.tsx"],"names":["Button","Typography","ClientForm","useEffect","useReducer","axios","globalVars","generateUniqueId","CreateClient","fields","isClientAdded","toggleIsClientAdded","addNewClientToState","initialNewClintState","map","e","fieldName","reduce","o","key","state","action","type","payload","fieldType","value","_id","length","useNumbers","useLetters","includeSymbols","newClient","setNewClient","onChange","event","target","onSubmit","preventDefault","method","data","url","serverURL","responseType","clientRes","clientData","msg","onCancel"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../../library/globalVariables\";\nimport generateUniqueId from \"generate-unique-id\";\n\nconst CreateClient = ({\n  fields,\n  isClientAdded,\n  toggleIsClientAdded,\n  addNewClientToState\n}: any) => {\n  const initialNewClintState = fields\n    .map((e: any) => e.fieldName)\n    .reduce((o, key) => Object.assign(o, { [key]: \"\" }), {});\n\n  const [newClient, setNewClient] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"onTextChange\":\n        return {\n          ...state,\n          [action.payload.fieldName]:\n            action.payload.fieldType === \"number\"\n              ? parseInt(action.payload.value)\n              : action.payload.value\n        };\n      case \"addId\" : \n        return {...state, _id : generateUniqueId({length: 24, useNumbers: true, useLetters: false, includeSymbols: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]})}\n      \n      case \"clear\":\n        return initialNewClintState;\n\n      default:\n        return state;\n    }\n  }, initialNewClintState);\n\n  const onChange = (fieldName, fieldType, event) => {\n    setNewClient({type: \"addId\"})\n    setNewClient({\n      type: \"onTextChange\",\n      payload: { fieldName, value: event.target.value, fieldType }\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const clientRes = await axios({\n      method: \"post\",\n      data: newClient,\n      url: `${globalVars.serverURL}/clients`,\n      responseType: \"json\"\n    });\n    const clientData = await clientRes.data;\n    if (clientData.msg === \"Success\") {\n      setNewClient({\n        type: \"clear\"\n      });\n      toggleIsClientAdded();\n      addNewClientToState(newClient);\n    }\n  };\n\n  const onCancel = () => {\n    setNewClient({\n      type: \"clear\"\n    });\n    toggleIsClientAdded();\n  };\n\n  useEffect(() => {\n    // console.log(newClient);\n  });\n\n  return isClientAdded ? (\n    <div>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        Add new client\n      </Typography>\n      <form onSubmit={onSubmit}>\n        <ClientForm fields={fields} onChange={onChange} newClient={newClient} />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Save\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\n          Cancel\n        </Button>\n      </form>\n    </div>\n  ) : null;\n};\n\nexport default CreateClient;\n"]},"metadata":{},"sourceType":"module"}