{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CreateClient.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\n\nconst CreateClient = ({\n  fields,\n  isClientAdded,\n  toggleIsClientAdded,\n  refreshList\n}) => {\n  const initialNewClintState = fields.map(e => e.fieldName).reduce((o, key) => _Object$assign(o, {\n    [key]: \"\"\n  }), {});\n  const {\n    0: newClient,\n    1: setNewClient\n  } = useState(initialNewClintState);\n\n  const onChange = (fieldName, event) => {\n    setNewClient(_objectSpread({}, newClient, {\n      [fieldName]: event.target.value\n    }));\n  };\n\n  const onSubmit = async () => {\n    const clientRes = await axios({\n      method: \"post\",\n      data: newClient,\n      url: `${globalVars.serverURL}/clients`,\n      responseType: \"json\"\n    });\n    const clientData = await clientRes.data;\n\n    if (clientData.msg === \"Success\") {\n      setNewClient(initialNewClintState);\n      toggleIsClientAdded();\n      refreshList();\n    }\n  };\n\n  const onCancel = () => {\n    setNewClient(initialNewClintState);\n    toggleIsClientAdded();\n  };\n\n  useEffect(() => {// console.log(newClient);\n  });\n  return isClientAdded ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Add new client\"), __jsx(ClientForm, {\n    fields: fields,\n    onChange: onChange,\n    newClient: newClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Save\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Cancel\")) : null;\n};\n\nexport default CreateClient;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CreateClient.tsx"],"names":["Button","Typography","ClientForm","useEffect","useState","axios","globalVars","CreateClient","fields","isClientAdded","toggleIsClientAdded","refreshList","initialNewClintState","map","e","fieldName","reduce","o","key","newClient","setNewClient","onChange","event","target","value","onSubmit","clientRes","method","data","url","serverURL","responseType","clientData","msg","onCancel"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA,mBAAzB;AAA8CC,EAAAA;AAA9C,CAAD,KAAsE;AACzF,QAAMC,oBAAoB,GAAGJ,MAAM,CAChCK,GAD0B,CACrBC,CAAD,IAAYA,CAAC,CAACC,SADQ,EAE1BC,MAF0B,CAEnB,CAACC,CAAD,EAAIC,GAAJ,KAAY,eAAcD,CAAd,EAAiB;AAAE,KAACC,GAAD,GAAO;AAAT,GAAjB,CAFO,EAE0B,EAF1B,CAA7B;AAIA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BhB,QAAQ,CAACQ,oBAAD,CAA1C;;AAEA,QAAMS,QAAQ,GAAG,CAACN,SAAD,EAAYO,KAAZ,KAAsB;AACrCF,IAAAA,YAAY,mBAAMD,SAAN;AAAiB,OAACJ,SAAD,GAAaO,KAAK,CAACC,MAAN,CAAaC;AAA3C,OAAZ;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,YAAY;AAC3B,UAAMC,SAAS,GAAG,MAAMrB,KAAK,CAAC;AAC5BsB,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,IAAI,EAAET,SAFsB;AAG5BU,MAAAA,GAAG,EAAG,GAAEvB,UAAU,CAACwB,SAAU,UAHD;AAI5BC,MAAAA,YAAY,EAAE;AAJc,KAAD,CAA7B;AAMA,UAAMC,UAAU,GAAG,MAAMN,SAAS,CAACE,IAAnC;;AACA,QAAII,UAAU,CAACC,GAAX,KAAmB,SAAvB,EAAkC;AAChCb,MAAAA,YAAY,CAACR,oBAAD,CAAZ;AACAF,MAAAA,mBAAmB;AACnBC,MAAAA,WAAW;AACZ;AACF,GAbD;;AAeA,QAAMuB,QAAQ,GAAG,MAAM;AACrBd,IAAAA,YAAY,CAACR,oBAAD,CAAZ;AACAF,IAAAA,mBAAmB;AACpB,GAHD;;AAKAP,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,CAAT;AAIA,SAAOM,aAAa,GAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAED,MAApB;AAA4B,IAAA,QAAQ,EAAEa,QAAtC;AAAgD,IAAA,SAAS,EAAEF,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAEM,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAQE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA8C,IAAA,OAAO,EAAES,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADkB,GAahB,IAbJ;AAcD,CAjDD;;AAmDA,eAAe3B,YAAf","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\n\nconst CreateClient = ({ fields, isClientAdded, toggleIsClientAdded, refreshList }: any) => {\n  const initialNewClintState = fields\n    .map((e: any) => e.fieldName)\n    .reduce((o, key) => Object.assign(o, { [key]: \"\" }), {});\n\n  const [newClient, setNewClient] = useState(initialNewClintState);\n\n  const onChange = (fieldName, event) => {\n    setNewClient({ ...newClient, [fieldName]: event.target.value});\n  };\n\n  const onSubmit = async () => {\n    const clientRes = await axios({\n      method: \"post\",\n      data: newClient,\n      url: `${globalVars.serverURL}/clients`,\n      responseType: \"json\"\n    });\n    const clientData = await clientRes.data;\n    if (clientData.msg === \"Success\") {\n      setNewClient(initialNewClintState);\n      toggleIsClientAdded();\n      refreshList();\n    }\n  };\n\n  const onCancel = () => {\n    setNewClient(initialNewClintState);\n    toggleIsClientAdded();\n  };\n\n  useEffect(() => {\n    // console.log(newClient);\n  });\n\n  return isClientAdded ? (\n    <div>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        Add new client\n      </Typography>\n      <ClientForm fields={fields} onChange={onChange} newClient={newClient} />\n      <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n        Save\n      </Button>\n      <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\n        Cancel\n      </Button>\n    </div>\n  ) : null;\n};\n\nexport default CreateClient;\n"]},"metadata":{},"sourceType":"module"}