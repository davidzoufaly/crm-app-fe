{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useReducer } from \"react\";\nimport AddOrEditField from \"./AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SelectFieldOptions from \"./SelectFieldOptions\"; //TODO: EDIT OPTIONU SE PRERENDEROVAVA\n//TODO: TO much baskspace u optionu uplne odstran√≠ pole\n\nvar CustomClientFields = function CustomClientFields(_ref) {\n  var fields = _ref.fields,\n      refreshList = _ref.refreshList;\n  var blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldOptions: []\n  };\n\n  var _useState = useState(false),\n      displayComponent = _useState[0],\n      setDisplayComponent = _useState[1];\n\n  var _useReducer = useReducer(function (state, action) {\n    switch (action.type) {\n      case \"fieldNameChange\":\n        return _objectSpread({}, state, {\n          fieldName: action.payload.event.target.value\n        });\n\n      case \"optionValueChange\":\n        return _objectSpread({}, state, {\n          fieldType: action.payload.event.target.options[action.payload.event.target.options.selectedIndex].value\n        });\n\n      case \"newOptionSpawn\":\n        return _objectSpread({}, state, {\n          fieldOptions: [].concat(_toConsumableArray(editedField.fieldOptions), [{\n            id: uniqid(),\n            value: \"\"\n          }])\n        });\n\n      case \"clear\":\n        return {\n          blankFieldObject: blankFieldObject\n        };\n\n      default:\n        return state;\n    }\n  }, blankFieldObject),\n      editedField = _useReducer[0],\n      setEditedField = _useReducer[1];\n\n  var fieldMethods = {\n    onNameChange: function onNameChange(event) {\n      setEditedField({\n        type: \"fieldNameChange\",\n        payload: {\n          event: event\n        }\n      });\n    },\n    onSelectChange: function onSelectChange(event) {\n      setEditedField({\n        type: \"optionValueChange\",\n        payload: {\n          event: event\n        }\n      });\n    },\n    handleOptionSpawn: function handleOptionSpawn() {\n      setEditedField({\n        type: \"newOptionSpawn\"\n      });\n    },\n    toggleDisplayComponent: function toggleDisplayComponent() {\n      displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n      setEditedField({\n        type: \"clear\"\n      });\n    },\n    saveEditedField: function saveEditedField() {\n      var fieldIsUpdated =\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          var fieldName, fieldType, fieldOptions, id, res, data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  fieldName = editedField.fieldName, fieldType = editedField.fieldType, fieldOptions = editedField.fieldOptions, id = editedField.id;\n                  _context.next = 3;\n                  return axios({\n                    method: \"put\",\n                    url: \"\".concat(globalVars.serverURL, \"/fields/\").concat(id),\n                    data: {\n                      fieldName: fieldName,\n                      fieldType: fieldType,\n                      fieldOptions: fieldOptions\n                    },\n                    responseType: \"json\"\n                  });\n\n                case 3:\n                  res = _context.sent;\n                  _context.next = 6;\n                  return res.data;\n\n                case 6:\n                  data = _context.sent;\n\n                  if (data.msg === \"Success\") {\n                    reset();\n                  }\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function fieldIsUpdated() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      var fieldIsCreated =\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2() {\n          var res, data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return axios({\n                    method: \"post\",\n                    url: \"\".concat(globalVars.serverURL, \"/fields/\"),\n                    data: editedField,\n                    responseType: \"json\"\n                  });\n\n                case 2:\n                  res = _context2.sent;\n                  _context2.next = 5;\n                  return res.data;\n\n                case 5:\n                  data = _context2.sent;\n\n                  if (data.msg === \"Success\") {\n                    reset();\n                  }\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function fieldIsCreated() {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n\n      !editedField.id ? fieldIsCreated() : fieldIsUpdated();\n    }\n  };\n\n  var reset = function reset() {\n    setDisplayComponent(false);\n    setEditedField({\n      type: \"clear\"\n    });\n    refreshList();\n  };\n\n  var deleteField =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(id) {\n      var res, resData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios({\n                method: \"delete\",\n                url: \"\".concat(globalVars.serverURL, \"/fields/\").concat(id),\n                responseType: \"json\"\n              });\n\n            case 2:\n              res = _context3.sent;\n              _context3.next = 5;\n              return res.data;\n\n            case 5:\n              resData = _context3.sent;\n              resData.msg === \"Success\" ? refreshList() : null;\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function deleteField(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onOptionChange = function onOptionChange(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(function (e) {\n        return event.target.id === e.id ? e.value = event.target.value : e;\n      })\n    }));\n  };\n\n  var onOptionDelete = function onOptionDelete(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(function (e) {\n        return event.target.id !== e.id ? e : null;\n      })\n    }));\n  };\n\n  var setupEditedField = function setupEditedField(obj) {\n    setEditedField(obj);\n    !displayComponent ? setDisplayComponent(true) : null;\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Custom Client Fields\"), __jsx(CustomFieldsList, {\n    deleteField: deleteField,\n    fields: fields,\n    setupEditedField: setupEditedField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), __jsx(AddOrEditField, {\n    editedField: editedField,\n    displayComponent: displayComponent,\n    fieldMethods: fieldMethods,\n    handleOption: __jsx(SelectFieldOptions, {\n      options: editedField.fieldOptions,\n      onOptionChange: onOptionChange,\n      onOptionDelete: onOptionDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }));\n};\n\nexport default CustomClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomFields.tsx"],"names":["useState","useReducer","AddOrEditField","axios","globalVars","uniqid","CustomFieldsList","Typography","SelectFieldOptions","CustomClientFields","fields","refreshList","blankFieldObject","fieldName","fieldType","fieldOptions","displayComponent","setDisplayComponent","state","action","type","payload","event","target","value","options","selectedIndex","editedField","id","setEditedField","fieldMethods","onNameChange","onSelectChange","handleOptionSpawn","toggleDisplayComponent","saveEditedField","fieldIsUpdated","method","url","serverURL","data","responseType","res","msg","reset","fieldIsCreated","deleteField","resData","onOptionChange","filter","e","onOptionDelete","setupEditedField","obj"],"mappings":"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","sourcesContent":["import { useState, useReducer } from \"react\";\nimport AddOrEditField from \"./AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SelectFieldOptions from \"./SelectFieldOptions\";\n\n//TODO: EDIT OPTIONU SE PRERENDEROVAVA\n//TODO: TO much baskspace u optionu uplne odstran√≠ pole\n\nconst CustomClientFields = ({ fields, refreshList }: any) => {\n  const blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldOptions: []\n  };\n\n  const [displayComponent, setDisplayComponent] = useState(false);\n\n  const [editedField, setEditedField] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"fieldNameChange\":\n        return {\n          ...state,\n          fieldName: action.payload.event.target.value\n        };\n      case \"optionValueChange\":\n        return {\n          ...state,\n          fieldType:\n            action.payload.event.target.options[\n              action.payload.event.target.options.selectedIndex\n            ].value\n        };\n      case \"newOptionSpawn\": \n        return {\n          ...state,\n          fieldOptions: [...editedField.fieldOptions, { id: uniqid(), value: \"\" }]\n        }\n      case \"clear\": \n      return {\n        blankFieldObject\n      }\n      default:\n        return state;\n    }\n  }, blankFieldObject);\n\n  const fieldMethods = {\n    onNameChange(event: any) {\n      setEditedField({\n        type: \"fieldNameChange\",\n        payload: {event}\n      });\n    },\n    onSelectChange(event: any) {\n      setEditedField({\n        type: \"optionValueChange\",\n        payload: {event}\n      });\n    },\n    handleOptionSpawn() {\n      setEditedField({\n        type: \"newOptionSpawn\"\n      });\n    },\n    toggleDisplayComponent() {\n      displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n      setEditedField({\n        type: \"clear\"\n      })\n    },\n    saveEditedField() {\n      const fieldIsUpdated = async () => {\n        const { fieldName, fieldType, fieldOptions, id } = editedField;\n        const res = await axios({\n          method: \"put\",\n          url: `${globalVars.serverURL}/fields/${id}`,\n          data: { fieldName, fieldType, fieldOptions },\n          responseType: \"json\"\n        });\n        const data = await res.data;\n        if (data.msg === \"Success\") {\n          reset();\n        }\n      };\n\n      const fieldIsCreated = async () => {\n        const res = await axios({\n          method: \"post\",\n          url: `${globalVars.serverURL}/fields/`,\n          data: editedField,\n          responseType: \"json\"\n        });\n        const data = await res.data;\n        if (data.msg === \"Success\") {\n          reset();\n        }\n      };\n      !editedField.id ? fieldIsCreated() : fieldIsUpdated();\n    }\n  };\n\n  const reset = () => {\n    setDisplayComponent(false);\n    setEditedField({type: \"clear\"});\n    refreshList();\n  };\n\n  const deleteField = async (id: any) => {\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const onOptionChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id === e.id ? (e.value = event.target.value) : e\n      )\n    });\n  };\n\n  const onOptionDelete = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id !== e.id ? e : null\n      )\n    });\n  };\n\n  const setupEditedField = (obj: any) => {\n    setEditedField(obj);\n    !displayComponent ? setDisplayComponent(true) : null;\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        Custom Client Fields\n      </Typography>\n      <CustomFieldsList\n        deleteField={deleteField}\n        fields={fields}\n        setupEditedField={setupEditedField}\n      />\n      <AddOrEditField\n        editedField={editedField}\n        displayComponent={displayComponent}\n        fieldMethods={fieldMethods}\n        handleOption={\n          <SelectFieldOptions\n            options={editedField.fieldOptions}\n            onOptionChange={onOptionChange}\n            onOptionDelete={onOptionDelete}\n          />\n        }\n      />\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"]},"metadata":{},"sourceType":"module"}