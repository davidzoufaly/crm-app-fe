{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard/[key].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../../components/Header\";\nimport ShowRecordsNumber from \"../../components/dashboard/ShowRecordsNumber\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport UserContext from \"../../components/UserContext\";\nimport globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport languages from \"../../library/languages\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nconst Dashboard = ({\n  lastCampaign,\n  clientsLastWeek,\n  clientCounter,\n  fieldCounter,\n  emailsCounter\n}) => {\n  const router = useRouter();\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n  const user = useContext(UserContext);\n  useEffect(() => {\n    const title = new stringMethods(router.pathname).removeSlash().removeSlashAndTextAfter().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n  const h1 = new stringMethods(router.pathname).removeSlash().removeSlashAndTextAfter().firstCharUpperCase().getString();\n  const campaignStr = lastCampaign.length > 0 ? `${languages.en.last} ${languages.en.sent} ${lastCampaign[0].date} ${languages.en.to.toLowerCase()} ${lastCampaign[0].to.length} ${lastCampaign[0].to.length > 1 ? languages.en.clients : languages.en.client}` : \"\";\n  const lastWeekStr = `${clientsLastWeek > 0 ? \"+\" : \"\"} ${clientsLastWeek} ${languages.en.pastSevenDays}`;\n  return !initialized && !user.user.signedIn ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }) : __jsx(React.Fragment, null, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h3\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, h1), __jsx(Grid, {\n    container: true,\n    justify: \"space-around\",\n    alignItems: \"stretch\",\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(ShowRecordsNumber, {\n    data: clientCounter,\n    string: languages.en.clientsSaved,\n    buttonString: languages.en.clients,\n    subData: lastWeekStr,\n    link: \"/clients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(ShowRecordsNumber, {\n    data: fieldCounter.custom,\n    string: languages.en.customClientFields,\n    buttonString: languages.en.customClientFields,\n    subData: `${fieldCounter.permanent + fieldCounter.custom} ${languages.en.total}`,\n    link: \"/settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(ShowRecordsNumber, {\n    data: emailsCounter,\n    string: languages.en.emailsSent,\n    buttonString: languages.en.emails,\n    subData: campaignStr,\n    link: \"/emails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))));\n};\n\nDashboard.getInitialProps = async context => {\n  const resLastCampaign = await axios(`${globalVars.serverURL}/emails/last?key=${context.query.key}`);\n  const resLastWeekNumber = await axios(`${globalVars.serverURL}/clients/last-week?key=${context.query.key}`);\n  const resClientCount = await axios(`${globalVars.serverURL}/clients/count?key=${context.query.key}`);\n  const resFieldsData = await axios(`${globalVars.serverURL}/fields/count?key=${context.query.key}`);\n  const resEmailsCount = await axios(`${globalVars.serverURL}/emails/count?key=${context.query.key}`);\n  const lastCampaign = await resLastCampaign.data;\n  const clientsLastWeek = await resLastWeekNumber.data;\n  const clientCounter = await resClientCount.data;\n  const fieldCounter = await resFieldsData.data;\n  const emailsCounter = await resEmailsCount.data;\n  return {\n    lastCampaign,\n    clientsLastWeek,\n    clientCounter,\n    fieldCounter,\n    emailsCounter\n  };\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard/[key].tsx"],"names":["useEffect","useState","useContext","useRouter","axios","Header","ShowRecordsNumber","LoadingSpinner","UserContext","globalVars","stringMethods","languages","Typography","Grid","Dashboard","lastCampaign","clientsLastWeek","clientCounter","fieldCounter","emailsCounter","router","initialized","setInitialized","user","title","pathname","removeSlash","removeSlashAndTextAfter","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","checkUser","h1","campaignStr","length","en","last","sent","date","to","toLowerCase","clients","client","lastWeekStr","pastSevenDays","signedIn","clientsSaved","custom","customClientFields","permanent","total","emailsSent","emails","getInitialProps","context","resLastCampaign","serverURL","query","key","resLastWeekNumber","resClientCount","resFieldsData","resEmailsCount","data"],"mappings":"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","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../../components/Header\";\nimport ShowRecordsNumber from \"../../components/dashboard/ShowRecordsNumber\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport UserContext from \"../../components/UserContext\";\nimport globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport languages from \"../../library/languages\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nconst Dashboard = ({\n  lastCampaign,\n  clientsLastWeek,\n  clientCounter,\n  fieldCounter,\n  emailsCounter\n}: any) => {\n  const router = useRouter();\n  const [initialized, setInitialized] = useState(false);\n  const user = useContext(UserContext);\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .removeSlashAndTextAfter()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .removeSlashAndTextAfter()\n    .firstCharUpperCase()\n    .getString();\n\n  const campaignStr =\n    lastCampaign.length > 0\n      ? `${languages.en.last} ${languages.en.sent} ${\n          lastCampaign[0].date\n        } ${languages.en.to.toLowerCase()} ${lastCampaign[0].to.length} ${\n          lastCampaign[0].to.length > 1\n            ? languages.en.clients\n            : languages.en.client\n        }`\n      : \"\";\n\n  const lastWeekStr = `${clientsLastWeek > 0 ? \"+\" : \"\"} ${clientsLastWeek} ${\n    languages.en.pastSevenDays\n  }`;\n  return !initialized && !user.user.signedIn ? (\n    <LoadingSpinner />\n  ) : (\n    <>\n      <Header />\n      <Typography component=\"h1\" variant=\"h3\" gutterBottom>\n        {h1}\n      </Typography>\n      <Grid container justify=\"space-around\" alignItems=\"stretch\" spacing={4}>\n        <Grid item xs={12} md={4}>\n          <ShowRecordsNumber\n            data={clientCounter}\n            string={languages.en.clientsSaved}\n            buttonString={languages.en.clients}\n            subData={lastWeekStr}\n            link={\"/clients\"}\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <ShowRecordsNumber\n            data={fieldCounter.custom}\n            string={languages.en.customClientFields}\n            buttonString={languages.en.customClientFields}\n            subData={`${fieldCounter.permanent + fieldCounter.custom} ${\n              languages.en.total\n            }`}\n            link={\"/settings\"}\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <ShowRecordsNumber\n            data={emailsCounter}\n            string={languages.en.emailsSent}\n            buttonString={languages.en.emails}\n            subData={campaignStr}\n            link={\"/emails\"}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nDashboard.getInitialProps = async context => {\n  const resLastCampaign = await axios(\n    `${globalVars.serverURL}/emails/last?key=${context.query.key}`\n  );\n\n  const resLastWeekNumber = await axios(\n    `${globalVars.serverURL}/clients/last-week?key=${context.query.key}`\n  );\n\n  const resClientCount = await axios(\n    `${globalVars.serverURL}/clients/count?key=${context.query.key}`\n  );\n\n  const resFieldsData = await axios(\n    `${globalVars.serverURL}/fields/count?key=${context.query.key}`\n  );\n\n  const resEmailsCount = await axios(\n    `${globalVars.serverURL}/emails/count?key=${context.query.key}`\n  );\n\n  const lastCampaign = await resLastCampaign.data;\n  const clientsLastWeek = await resLastWeekNumber.data;\n  const clientCounter = await resClientCount.data;\n  const fieldCounter = await resFieldsData.data;\n  const emailsCounter = await resEmailsCount.data;\n\n  return {\n    lastCampaign,\n    clientsLastWeek,\n    clientCounter,\n    fieldCounter,\n    emailsCounter\n  };\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}