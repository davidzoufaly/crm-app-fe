{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport UsernameInput from \"./UsernameInput\";\nimport PasswordInput from \"./PasswordInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\n\nvar LoginForm = function LoginForm() {\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var userContext = useContext(UserContext);\n\n  var onChange = function onChange(e) {\n    e.target.name === \"username\" ? setUser(_objectSpread({}, user, {\n      username: e.target.value\n    })) : setUser(_objectSpread({}, user, {\n      password: e.target.value\n    }));\n  };\n\n  var onLogin =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var userRes, userData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios({\n                method: \"POST\",\n                data: user,\n                url: \"\".concat(globalVars.serverURL, \"/users\"),\n                responseType: \"json\"\n              });\n\n            case 2:\n              userRes = _context.sent;\n              _context.next = 5;\n              return userRes.data;\n\n            case 5:\n              userData = _context.sent;\n\n              if (userData.msg === \"Success\") {\n                userContext.setUser(user.username);\n              } else {\n                alert(\"Incorrect username or password\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, languages.en.username), __jsx(UsernameInput, {\n    onChange: onChange,\n    username: user.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, languages.en.password), __jsx(PasswordInput, {\n    onChange: onChange,\n    password: user.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(LoginButton, {\n    onClick: onLogin,\n    text: languages.en.log,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx"],"names":["useState","useContext","axios","UserContext","UsernameInput","PasswordInput","LoginButton","globalVars","languages","LoginForm","username","password","user","setUser","userContext","onChange","e","target","name","value","onLogin","method","data","url","serverURL","responseType","userRes","userData","msg","alert","en","log"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,UAAxB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,kBACIT,QAAQ,CAAC;AAACU,IAAAA,QAAQ,EAAG,EAAZ;AAAgBC,IAAAA,QAAQ,EAAG;AAA3B,GAAD,CADZ;AAAA,MACbC,IADa;AAAA,MACPC,OADO;;AAEpB,MAAMC,WAAW,GAAGb,UAAU,CAACE,WAAD,CAA9B;;AAEA,MAAMY,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AACpBA,IAAAA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,UAAlB,GACML,OAAO,mBAAKD,IAAL;AAAWF,MAAAA,QAAQ,EAAEM,CAAC,CAACC,MAAF,CAASE;AAA9B,OADb,GAEMN,OAAO,mBAAKD,IAAL;AAAWD,MAAAA,QAAQ,EAAEK,CAAC,CAACC,MAAF,CAASE;AAA9B,OAFb;AAGH,GAJD;;AAMA,MAAMC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUlB,KAAK,CAAC;AACxBmB,gBAAAA,MAAM,EAAE,MADgB;AAExBC,gBAAAA,IAAI,EAAEV,IAFkB;AAGxBW,gBAAAA,GAAG,YAAKhB,UAAU,CAACiB,SAAhB,WAHqB;AAIxBC,gBAAAA,YAAY,EAAE;AAJU,eAAD,CADf;;AAAA;AACNC,cAAAA,OADM;AAAA;AAAA,qBAOWA,OAAO,CAACJ,IAPnB;;AAAA;AAONK,cAAAA,QAPM;;AAQZ,kBAAGA,QAAQ,CAACC,GAAT,KAAiB,SAApB,EAA+B;AAC3Bd,gBAAAA,WAAW,CAACD,OAAZ,CAAoBD,IAAI,CAACF,QAAzB;AACH,eAFD,MAEO;AACHmB,gBAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;;AAZW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPT,OAAO;AAAA;AAAA;AAAA,KAAb;;AAeA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,SAAS,CAACsB,EAAV,CAAapB,QAAjB,CADJ,EAEI,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEK,QAAzB;AAAmC,IAAA,QAAQ,EAAEH,IAAI,CAACF,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,SAAS,CAACsB,EAAV,CAAanB,QAAjB,CAHJ,EAII,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEI,QAAzB;AAAmC,IAAA,QAAQ,EAAEH,IAAI,CAACD,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAES,OAAtB;AAA+B,IAAA,IAAI,EAAEZ,SAAS,CAACsB,EAAV,CAAaC,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAFJ,CADJ;AAYH,CArCD;;AAuCA,eAAetB,SAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport UsernameInput from \"./UsernameInput\";\nimport PasswordInput from \"./PasswordInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\n\nconst LoginForm = () => {\n    const [user, setUser] = useState({username : \"\", password : \"\" });\n    const userContext = useContext(UserContext);\n\n    const onChange = (e) =>Â {\n        e.target.name === \"username\"\n            ? setUser({...user, username: e.target.value})\n            : setUser({...user, password: e.target.value})\n    }\n\n    const onLogin = async() => {\n        const userRes = await axios({\n            method: \"POST\",\n            data: user,\n            url: `${globalVars.serverURL}/users`,\n            responseType: \"json\"\n        })\n        const userData = await userRes.data;\n        if(userData.msg === \"Success\") {\n            userContext.setUser(user.username);\n        } else {\n            alert(\"Incorrect username or password\")\n        }\n    }\n\n    return (\n        <>  \n            <h2>Login</h2>\n            <form> \n                <p>{languages.en.username}</p>\n                <UsernameInput onChange={onChange} username={user.username}/>\n                <p>{languages.en.password}</p>\n                <PasswordInput onChange={onChange} password={user.password}/>\n                <LoginButton onClick={onLogin} text={languages.en.log} />\n            </form>\n        </>\n    )\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}