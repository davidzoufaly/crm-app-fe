{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\nimport TableBody from \"../components/TableBody\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport TableHead from \"../components/TableHead\";\nimport CreateClient from \"../components/CreateClient\";\nimport Button from \"@material-ui/core/Button\";\n\nvar Clients = function Clients(_ref) {\n  var fieldData = _ref.fieldData,\n      clientData = _ref.clientData;\n  var router = useRouter();\n\n  var _useState = useState(clientData),\n      clients = _useState[0]; //TODO: SPOJIT DO JEDNOHO STATU\n\n\n  var _useState2 = useState(false),\n      reverse = _useState2[0],\n      setReverseOrder = _useState2[1];\n\n  var _useState3 = useState(\"firstName\"),\n      sort = _useState3[0],\n      setSortBy = _useState3[1]; //\n\n\n  var _useState4 = useState(\"\"),\n      headingOne = _useState4[0],\n      setHeadingOne = _useState4[1];\n\n  var _useState5 = useState(false),\n      initialized = _useState5[0],\n      setInitialized = _useState5[1];\n\n  var _useState6 = useState(false),\n      isClientAdded = _useState6[0],\n      setIsClientAdded = _useState6[1];\n\n  useEffect(function () {\n    setHeadingOne(new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString());\n    var title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n  });\n\n  var refreshList =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios({\n                method: \"get\",\n                url: \"\".concat(globalVars.serverURL, \"/clients/\"),\n                responseType: \"json\"\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.data;\n\n            case 5:\n              data = _context.sent;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function refreshList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var sortBy = function sortBy(fieldName) {\n    setSortBy(fieldName);\n    !reverse ? setReverseOrder(true) : setReverseOrder(false);\n  };\n\n  var toggleIsClientAdded = function toggleIsClientAdded() {\n    isClientAdded ? setIsClientAdded(false) : setIsClientAdded(true);\n  };\n\n  if (!initialized) {\n    return \"Loading\";\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, headingOne), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return setIsClientAdded(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Add new client\"), __jsx(CreateClient, {\n    fields: fieldData,\n    isClientAdded: isClientAdded,\n    toggleIsClientAdded: toggleIsClientAdded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    fields: fieldData,\n    sortBy: sortBy,\n    reverse: reverse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(TableBody, {\n    clients: clients,\n    fields: fieldData,\n    sort: sort,\n    reverse: reverse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))));\n};\n\nClients.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee2() {\n  var clientRes, clientData, fieldRes, fieldData;\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return axios({\n            method: \"get\",\n            url: \"\".concat(globalVars.serverURL, \"/clients\"),\n            responseType: \"json\"\n          });\n\n        case 2:\n          clientRes = _context2.sent;\n          _context2.next = 5;\n          return clientRes.data;\n\n        case 5:\n          clientData = _context2.sent;\n          _context2.next = 8;\n          return axios({\n            method: \"get\",\n            url: \"\".concat(globalVars.serverURL, \"/fields\"),\n            responseType: \"json\"\n          });\n\n        case 8:\n          fieldRes = _context2.sent;\n          _context2.next = 11;\n          return fieldRes.data;\n\n        case 11:\n          fieldData = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            clientData: clientData,\n            fieldData: fieldData\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n}));\nexport default Clients;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients.tsx"],"names":["useState","useEffect","useRouter","axios","Header","TableBody","stringMethods","globalVars","TableHead","CreateClient","Button","Clients","fieldData","clientData","router","clients","reverse","setReverseOrder","sort","setSortBy","headingOne","setHeadingOne","initialized","setInitialized","isClientAdded","setIsClientAdded","pathname","removeSlash","firstCharUpperCase","getString","title","addStringToEnd","titleSubText","document","refreshList","method","url","serverURL","responseType","res","data","sortBy","fieldName","toggleIsClientAdded","getInitialProps","clientRes","fieldRes"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\nimport TableBody from \"../components/TableBody\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport TableHead from \"../components/TableHead\";\nimport CreateClient from \"../components/CreateClient\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Clients = ({ fieldData, clientData }: any) => {\n  const router = useRouter();\n\n  const [clients] = useState(clientData);\n  //TODO: SPOJIT DO JEDNOHO STATU\n  const [reverse, setReverseOrder] = useState(false);\n  const [sort, setSortBy] = useState(\"firstName\");\n  //\n  const [headingOne, setHeadingOne] = useState(\"\");\n  const [initialized, setInitialized] = useState(false);\n  const [isClientAdded, setIsClientAdded] = useState(false);\n\n  useEffect(() => {\n    setHeadingOne(\n      new stringMethods(router.pathname)\n        .removeSlash()\n        .firstCharUpperCase()\n        .getString()\n    );\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n  });\n\n  const refreshList = async () => {\n    //get data from DB after change\n    const res = await axios({\n      method: \"get\",\n      url: `${globalVars.serverURL}/clients/`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n  }\n\n  const sortBy = (fieldName) => {\n    setSortBy(fieldName);\n    !reverse ? setReverseOrder(true) : setReverseOrder(false);\n  }\n\n  const toggleIsClientAdded = () => {\n    isClientAdded ? setIsClientAdded(false) : setIsClientAdded(true);\n  }\n\n  if (!initialized) {\n    return \"Loading\";\n  }\n  return (\n    <div>\n      <Header />\n      <h1>{headingOne}</h1>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setIsClientAdded(true)}>\n      Add new client\n      </Button>\n      <CreateClient fields={fieldData} isClientAdded={isClientAdded} toggleIsClientAdded={toggleIsClientAdded} />\n      <table>\n          <TableHead fields={fieldData} sortBy={sortBy} reverse={reverse}/>\n          <tbody>\n          <TableBody clients={clients} fields={fieldData} sort={sort} reverse={reverse}/>\n          </tbody>\n      </table>\n\n    </div>\n  );\n};\n\nClients.getInitialProps = async () => {\n  const clientRes = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients`,\n    responseType: \"json\"\n  });\n  const clientData = await clientRes.data;\n\n  const fieldRes = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  })\n  const fieldData = await fieldRes.data\n\n  return {\n    clientData, fieldData\n  };\n};\n\nexport default Clients;\n"]},"metadata":{},"sourceType":"module"}