{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport DefaultFields from \"../components/DefaultFields\";\nimport CustomFields from \"../components/CustomFields\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LoadingSpinner from \"../components/loadingSpinner\";\n\nvar Settings = function Settings(_ref) {\n  var data = _ref.data;\n  var router = useRouter();\n\n  var _useState = useState(data),\n      fields = _useState[0],\n      setField = _useState[1];\n\n  var _useState2 = useState(false),\n      initialized = _useState2[0],\n      setInitialized = _useState2[1];\n\n  var refreshList =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios({\n                method: \"get\",\n                url: \"\".concat(globalVars.serverURL, \"/fields/\"),\n                responseType: \"json\"\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.data;\n\n            case 5:\n              data = _context.sent;\n              setField(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function refreshList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    //title from url\n    var title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title; //componendDidMount effect\n\n    setInitialized(true);\n  });\n  var h1 = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString();\n  return !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(Typography, {\n    variant: \"h3\",\n    component: \"h1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, h1), __jsx(DefaultFields, {\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(CustomFields, {\n    fields: fields,\n    refreshList: refreshList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n};\n\nSettings.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee2() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return axios({\n            method: \"get\",\n            url: \"\".concat(globalVars.serverURL, \"/fields\"),\n            responseType: \"json\"\n          });\n\n        case 2:\n          res = _context2.sent;\n          _context2.next = 5;\n          return res.data;\n\n        case 5:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            data: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n}));\nexport default Settings;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings.tsx"],"names":["Header","useRouter","stringMethods","globalVars","axios","useState","useEffect","DefaultFields","CustomFields","Typography","LoadingSpinner","Settings","data","router","fields","setField","initialized","setInitialized","refreshList","method","url","serverURL","responseType","res","title","pathname","removeSlash","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","h1","getInitialProps"],"mappings":"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","sourcesContent":["import Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport DefaultFields from \"../components/DefaultFields\";\nimport CustomFields from \"../components/CustomFields\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LoadingSpinner from \"../components/loadingSpinner\";\n\nconst Settings = ({ data }: any) => {\n  const router = useRouter();\n  const [fields, setField] = useState(data);\n  const [initialized, setInitialized] = useState(false);\n\n  const refreshList = async () => {\n    //get data from DB after change\n    const res = await axios({\n      method: \"get\",\n      url: `${globalVars.serverURL}/fields/`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    setField(data);\n  };\n\n  useEffect(() => {\n    //title from url\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n\n    document.title = title;\n\n    //componendDidMount effect\n    setInitialized(true);\n  });\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  return !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n        {h1}\n      </Typography>\n      <DefaultFields fields={fields} />\n      <CustomFields fields={fields} refreshList={refreshList} />\n    </div>\n  );\n};\n\nSettings.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return { data };\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}