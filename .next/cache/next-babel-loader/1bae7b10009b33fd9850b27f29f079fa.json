{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport WebFormSelect from \"./WebFormSelect\";\nimport { useReducer } from \"react\";\n\nconst WebForm = ({\n  fields\n}) => {\n  const {\n    0: webFields,\n    1: setWebFields\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field => field.fieldName === action.payload);\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addedToForm = e => {\n    setWebFields({\n      type: \"add\",\n      payload: {\n        fieldName: e.target.value\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(WebFormSelect, {\n    webFields: webFields,\n    addedToForm: addedToForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nexport default WebForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx"],"names":["WebFormSelect","useReducer","WebForm","fields","webFields","setWebFields","state","action","type","map","field","fieldName","payload","addedToForm","e","target","value"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC9B,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BJ,UAAU,CAAC,CAACK,KAAD,EAAQC,MAAR,KAAmB;AAC9D,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,KAAL;AACE,eAAOF,KAAK,CAACG,GAAN,CAAUC,KAAK,IAAIA,KAAK,CAACC,SAAN,KAAoBJ,MAAM,CAACK,OAA9C,CAAP;;AACF;AACE,eAAON,KAAP;AAJJ;AAMD,GAP2C,EAOzCH,MAPyC,CAA5C;;AASA,QAAMU,WAAW,GAAIC,CAAD,IAAO;AACzBT,IAAAA,YAAY,CAAC;AACTG,MAAAA,IAAI,EAAE,KADG;AAETI,MAAAA,OAAO,EAAE;AAACD,QAAAA,SAAS,EAAGG,CAAC,CAACC,MAAF,CAASC;AAAtB;AAFA,KAAD,CAAZ;AAID,GALD;;AAOA,SACE,4BACE,MAAC,aAAD;AAAe,IAAA,SAAS,EAAEZ,SAA1B;AAAqC,IAAA,WAAW,EAAES,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAtBD;;AAwBA,eAAeX,OAAf","sourcesContent":["import WebFormSelect from \"./WebFormSelect\";\nimport { useReducer } from \"react\";\n\nconst WebForm = ({ fields }) => {\n  const [webFields, setWebFields] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\": \n        return state.map(field => field.fieldName === action.payload)\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addedToForm = (e) => {\n    setWebFields({\n        type: \"add\",\n        payload: {fieldName : e.target.value}\n    })\n  }\n\n  return (\n    <>\n      <WebFormSelect webFields={webFields} addedToForm={addedToForm} />\n    </>\n  );\n};\n\nexport default WebForm;\n"]},"metadata":{},"sourceType":"module"}