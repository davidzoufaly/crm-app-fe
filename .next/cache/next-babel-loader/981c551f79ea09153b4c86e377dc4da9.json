{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormOptionSelect.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nvar webFormOptionSelect = function webFormOptionSelect(_ref) {\n  var webFields = _ref.webFields,\n      addVisibleSelect = _ref.addVisibleSelect,\n      WebFormOptions = _ref.WebFormOptions;\n\n  var _useState = useState(false),\n      showOptions = _useState[0],\n      setShowOptions = _useState[1];\n\n  var showOptionsOnClick = function showOptionsOnClick() {\n    setShowOptions(true);\n  };\n\n  var insertIntoForm = webFields.map(function (field) {\n    return !showOptions ? field.pause ? __jsx(\"div\", {\n      key: field.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Should be \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, field.fieldName), \" visible in form?\"), __jsx(\"button\", {\n      id: field.fieldName,\n      onClick: addVisibleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"YES\"), __jsx(\"button\", {\n      onClick: showOptionsOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"NO\")) : null : null;\n  });\n  return __jsx(React.Fragment, null, insertIntoForm, showOptions ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Please select option, that will be auto assigned to clients from this form\"), WebFormOptions) : null);\n};\n\nexport default webFormOptionSelect;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormOptionSelect.tsx"],"names":["useState","webFormOptionSelect","webFields","addVisibleSelect","WebFormOptions","showOptions","setShowOptions","showOptionsOnClick","insertIntoForm","map","field","pause","id","fieldName"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAqD;AAAA,MAAlDC,SAAkD,QAAlDA,SAAkD;AAAA,MAAvCC,gBAAuC,QAAvCA,gBAAuC;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AAAA,kBACzCJ,QAAQ,CAAC,KAAD,CADiC;AAAA,MACxEK,WADwE;AAAA,MAC3DC,cAD2D;;AAG/E,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,MAAME,cAAc,GAAGN,SAAS,CAACO,GAAV,CAAc,UAAAC,KAAK;AAAA,WACxC,CAACL,WAAD,GACEK,KAAK,CAACC,KAAN,GACE;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASF,KAAK,CAACG,SAAf,CADZ,sBADF,EAIE;AAAQ,MAAA,EAAE,EAAEH,KAAK,CAACG,SAAlB;AAA6B,MAAA,OAAO,EAAEV,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAOE;AAAQ,MAAA,OAAO,EAAEI,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CADF,GAUI,IAXN,GAYI,IAboC;AAAA,GAAnB,CAAvB;AAgBA,SACE,4BACGC,cADH,EAEGH,WAAW,GACV,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFADF,EAKGD,cALH,CADU,GAQR,IAVN,CADF;AAcD,CArCD;;AAuCA,eAAeH,mBAAf","sourcesContent":["import { useState } from \"react\";\n\nconst webFormOptionSelect = ({ webFields, addVisibleSelect, WebFormOptions }) => {\n  const [showOptions, setShowOptions] = useState(false);\n\n  const showOptionsOnClick = () => {\n    setShowOptions(true);\n  };\n\n  const insertIntoForm = webFields.map(field =>\n    !showOptions ? (\n      field.pause ? (\n        <div key={field.id}>\n          <p>\n            Should be <strong>{field.fieldName}</strong> visible in form?\n          </p>\n          <button id={field.fieldName} onClick={addVisibleSelect}>\n            YES\n          </button>\n          <button onClick={showOptionsOnClick}>NO</button>\n        </div>\n      ) : null\n    ) : null\n  );\n\n  return (\n    <>\n      {insertIntoForm}\n      {showOptions ? (\n        <>\n          <p>\n            Please select option, that will be auto assigned to clients from\n            this form\n          </p>\n          {WebFormOptions}\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default webFormOptionSelect;\n"]},"metadata":{},"sourceType":"module"}