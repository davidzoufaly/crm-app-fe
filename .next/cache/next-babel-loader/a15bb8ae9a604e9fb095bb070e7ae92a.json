{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer, useEffect, useState } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormOptionSelect from \"./WebFormOptionSelect\";\nimport WebFormOptions from \"./WebFormOptions\";\nimport languages from \"../../../library/languages\"; //TODO: STRINGY DO LANGUAGES\n//TODO: GENERATE A SAVE BUTTONS\n//TODO: POST REQUEST NA BE\n\nconst WebForm = ({\n  fields\n}) => {\n  const {\n    0: counter,\n    1: setCounter\n  } = useState(0);\n  const {\n    0: webFields,\n    1: setWebFields\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true,\n          order: counter\n        }) : field);\n\n      case \"addVisibleSelect\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true,\n          fieldFormVisible: true,\n          pause: false,\n          order: counter\n        }) : field);\n\n      case \"addHiddenSelect\":\n        return state.map(field => field.pause ? _objectSpread({}, field, {\n          fieldInForm: true,\n          fieldFormVisible: false,\n          pause: false,\n          order: counter,\n          fieldOptions: field.fieldOptions.map(option => option.value === action.payload.optionValue ? _objectSpread({}, option, {\n            preselected: true\n          }) : option)\n        }) : field);\n\n      case \"pauseSelect\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          pause: true\n        }) : field);\n\n      case \"remove\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: false,\n          fieldFormVisible: false,\n          fieldOptions: field.fieldOptions.map(option => option.preselected ? _objectSpread({}, option, {\n            preselected: false\n          }) : option)\n        }) : field);\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field => {\n      if (field.fieldName === e.target.value) {\n        if (field.fieldType !== \"select\") {\n          setWebFields({\n            type: \"add\",\n            payload: {\n              fieldName: e.target.value\n            }\n          });\n          setCounter(prevCount => prevCount + 1);\n        } else {\n          setWebFields({\n            type: \"pauseSelect\",\n            payload: {\n              fieldName: e.target.value\n            }\n          });\n        }\n      }\n    });\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: {\n        optionValue: e.target.value\n      }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n  };\n\n  useEffect(() => {// console.log(webFields);\n  }, [webFields]);\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, languages.en.selectField, \":\"), __jsx(WebFormSelect, {\n    webFields: webFields,\n    addNotSelect: addNotSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), __jsx(WebFormOptionSelect, {\n    webFields: webFields,\n    addVisibleSelect: addVisibleSelect,\n    WebFormOptions: __jsx(WebFormOptions, {\n      webFields: webFields,\n      addHiddenSelect: addHiddenSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, languages.en.selectedFields, \":\"), __jsx(WebFormList, {\n    webFields: webFields,\n    removeFromList: removeFromList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }));\n};\n\nexport default WebForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx"],"names":["useReducer","useEffect","useState","WebFormSelect","WebFormList","WebFormOptionSelect","WebFormOptions","languages","WebForm","fields","counter","setCounter","webFields","setWebFields","state","action","type","map","field","fieldName","payload","fieldInForm","order","fieldFormVisible","pause","fieldOptions","option","value","optionValue","preselected","addNotSelect","e","target","fieldType","prevCount","addVisibleSelect","id","addHiddenSelect","removeFromList","en","selectField","selectedFields"],"mappings":"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","sourcesContent":["import { useReducer, useEffect, useState } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormOptionSelect from \"./WebFormOptionSelect\";\nimport WebFormOptions from \"./WebFormOptions\";\nimport languages from \"../../../library/languages\";\n\n//TODO: STRINGY DO LANGUAGES\n//TODO: GENERATE A SAVE BUTTONS\n//TODO: POST REQUEST NA BE\n\nconst WebForm = ({ fields }) => {\n  const [counter, setCounter] = useState(0);\n  const [webFields, setWebFields] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true, order: counter }\n            : field\n        );\n\n      case \"addVisibleSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? {\n                ...field,\n                fieldInForm: true,\n                fieldFormVisible: true,\n                pause: false,\n                order: counter\n              }\n            : field\n        );\n\n      case \"addHiddenSelect\":\n        return state.map(field =>\n          field.pause\n            ? {\n                ...field,\n                fieldInForm: true,\n                fieldFormVisible: false,\n                pause: false,\n                order: counter,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.value === action.payload.optionValue\n                    ? { ...option, preselected: true }\n                    : option\n                )\n              }\n            : field\n        );\n\n      case \"pauseSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, pause: true }\n            : field\n        );\n\n      case \"remove\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? {\n                ...field,\n                fieldInForm: false,\n                fieldFormVisible: false,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.preselected\n                    ? { ...option, preselected: false }\n                    : option\n                )\n              }\n            : field\n        );\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field => {\n      if (field.fieldName === e.target.value) {\n        if (field.fieldType !== \"select\") {\n          setWebFields({\n            type: \"add\",\n            payload: { fieldName: e.target.value }\n          });\n          setCounter(prevCount => prevCount + 1);\n        } else {\n          setWebFields({\n            type: \"pauseSelect\",\n            payload: { fieldName: e.target.value }\n          });\n        }\n      }\n    });\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: { fieldName: e.target.id }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: { optionValue: e.target.value }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: { fieldName: e.target.id }\n    });\n  };\n\n  useEffect(() => {\n    // console.log(webFields);\n  }, [webFields]);\n\n  return (\n    <>\n      <h3>{languages.en.selectField}:</h3>\n      <WebFormSelect webFields={webFields} addNotSelect={addNotSelect} />\n      <WebFormOptionSelect\n        webFields={webFields}\n        addVisibleSelect={addVisibleSelect}\n        WebFormOptions={\n          <WebFormOptions\n            webFields={webFields}\n            addHiddenSelect={addHiddenSelect}\n          />\n        }\n      />\n      <h3>{languages.en.selectedFields}:</h3>\n      <WebFormList webFields={webFields} removeFromList={removeFromList} />\n    </>\n  );\n};\n\nexport default WebForm;\n"]},"metadata":{},"sourceType":"module"}