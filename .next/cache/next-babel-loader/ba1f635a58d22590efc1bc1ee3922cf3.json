{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\"; //TODO: SKRÝVÁNÍ POLÍ CO NEJSOU V DB\n\nvar Client = function Client(props) {\n  var _props$data = props.data,\n      firstName = _props$data.firstName,\n      lastName = _props$data.lastName;\n  useEffect(function () {\n    document.title = \"\".concat(name, \" \").concat(globalVars.titleSubText);\n  });\n\n  var showAllProperities = function showAllProperities() {\n    var data = props.data;\n    var list = [];\n\n    for (var key in data) {\n      var convertedKey = new stringMethods(key).camelStringToText().firstCharUpperCase().getString();\n\n      if (key !== \"_id\" && key !== \"name\") {\n        list.push(__jsx(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, convertedKey, \": \", data[key]));\n      }\n    }\n\n    return list;\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, firstName, \" \", lastName), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, showAllProperities()));\n};\n\nClient.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, resClient, clientData, resFields, fieldsData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return axios({\n              method: \"get\",\n              url: \"\".concat(globalVars.serverURL, \"/clients/\").concat(id),\n              responseType: \"json\"\n            });\n\n          case 3:\n            resClient = _context.sent;\n            _context.next = 6;\n            return resClient.data;\n\n          case 6:\n            clientData = _context.sent;\n            _context.next = 9;\n            return axios({\n              method: \"get\",\n              url: \"\".concat(globalVars.serverURL, \"/fields\"),\n              responseType: \"json\"\n            });\n\n          case 9:\n            resFields = _context.sent;\n            _context.next = 12;\n            return resFields.data;\n\n          case 12:\n            fieldsData = _context.sent;\n            return _context.abrupt(\"return\", {\n              clientData: clientData,\n              fieldsData: fieldsData\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Client;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[id].tsx"],"names":["Header","axios","useEffect","stringMethods","globalVars","Client","props","data","firstName","lastName","document","title","name","titleSubText","showAllProperities","list","key","convertedKey","camelStringToText","firstCharUpperCase","getString","push","getInitialProps","context","id","query","method","url","serverURL","responseType","resClient","clientData","resFields","fieldsData"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,+BAAvB,C,CAEA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAgB;AAAA,oBACGA,KAAK,CAACC,IADT;AAAA,MACrBC,SADqB,eACrBA,SADqB;AAAA,MACVC,QADU,eACVA,QADU;AAG7BP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,QAAQ,CAACC,KAAT,aAAoBC,IAApB,cAA4BR,UAAU,CAACS,YAAvC;AACD,GAFQ,CAAT;;AAIA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,QAAMP,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAMQ,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIC,GAAT,IAAgBT,IAAhB,EAAsB;AACpB,UAAMU,YAAY,GAAG,IAAId,aAAJ,CAAkBa,GAAlB,EAClBE,iBADkB,GAElBC,kBAFkB,GAGlBC,SAHkB,EAArB;;AAKA,UAAIJ,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,MAA7B,EAAqC;AACnCD,QAAAA,IAAI,CAACM,IAAL,CACE;AAAI,UAAA,GAAG,EAAEL,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,YADH,QACmBV,IAAI,CAACS,GAAD,CADvB,CADF;AAKD;AACF;;AACD,WAAOD,IAAP;AACD,GAlBD;;AAoBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,SAAL,OAAiBC,QAAjB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKK,kBAAkB,EAAvB,CAHF,CADF;AAOD,CAlCD;;AAoCAT,MAAM,CAACiB,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,EADe,GACRD,OAAO,CAACE,KADA,CACfD,EADe;AAAA;AAAA,mBAECvB,KAAK,CAAC;AAC5ByB,cAAAA,MAAM,EAAE,KADoB;AAE5BC,cAAAA,GAAG,YAAKvB,UAAU,CAACwB,SAAhB,sBAAqCJ,EAArC,CAFyB;AAG5BK,cAAAA,YAAY,EAAE;AAHc,aAAD,CAFN;;AAAA;AAEjBC,YAAAA,SAFiB;AAAA;AAAA,mBAOEA,SAAS,CAACvB,IAPZ;;AAAA;AAOjBwB,YAAAA,UAPiB;AAAA;AAAA,mBASC9B,KAAK,CAAC;AAC5ByB,cAAAA,MAAM,EAAE,KADoB;AAE5BC,cAAAA,GAAG,YAAKvB,UAAU,CAACwB,SAAhB,YAFyB;AAG5BC,cAAAA,YAAY,EAAE;AAHc,aAAD,CATN;;AAAA;AASjBG,YAAAA,SATiB;AAAA;AAAA,mBAcEA,SAAS,CAACzB,IAdZ;;AAAA;AAcjB0B,YAAAA,UAdiB;AAAA,6CAgBhB;AAAEF,cAAAA,UAAU,EAAVA,UAAF;AAAcE,cAAAA,UAAU,EAAVA;AAAd,aAhBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AAmBA,eAAe5B,MAAf","sourcesContent":["import Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\";\n\n//TODO: SKRÝVÁNÍ POLÍ CO NEJSOU V DB\n\nconst Client = (props: any) => {\n  const { firstName, lastName } = props.data;\n\n  useEffect(() => {\n    document.title = `${name} ${globalVars.titleSubText}`;\n  });\n\n  const showAllProperities = () => {\n    const data = props.data;\n    const list = [];\n    for (let key in data) {\n      const convertedKey = new stringMethods(key)\n        .camelStringToText()\n        .firstCharUpperCase()\n        .getString();\n   \n      if (key !== \"_id\" && key !== \"name\") {\n        list.push(\n          <li key={key}>\n            {convertedKey}: {data[key]}\n          </li>\n        );\n      }\n    }\n    return list;\n  };\n\n  return (\n    <div>\n      <Header />\n      <h1>{firstName} {lastName}</h1>\n      <ul>{showAllProperities()}</ul>\n    </div>\n  );\n};\n\nClient.getInitialProps = async (context: any) => {\n  const { id } = context.query;\n  const resClient = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/${id}`,\n    responseType: \"json\"\n  });\n  const clientData = await resClient.data;\n  \n  const resFields = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  })\n  const fieldsData = await resFields.data;\n\n  return { clientData, fieldsData };\n};\n\nexport default Client;\n"]},"metadata":{},"sourceType":"module"}