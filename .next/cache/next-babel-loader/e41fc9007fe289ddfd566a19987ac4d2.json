{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"./UserContext\";\nimport languages from \"../library/languages\";\nimport globalVars from \"../library/globalVariables\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography, TextField, Button, Grid } from \"@material-ui/core\";\nimport SendIcon from '@material-ui/icons/Send';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    formWrapper: _defineProperty({\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      padding: theme.spacing(3),\n      boxShadow: theme.shadows[\"1\"],\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\"\n    }, theme.breakpoints.down(\"sm\"), {\n      width: \"100%\"\n    }),\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  });\n});\n\nvar EmailForm = function EmailForm(_ref) {\n  var to = _ref.to,\n      isEmailCreated = _ref.isEmailCreated,\n      toggleIsEmailCreated = _ref.toggleIsEmailCreated,\n      unCheckAll = _ref.unCheckAll;\n  var initEmail = {\n    to: to,\n    subject: \"\",\n    message: \"\"\n  };\n\n  var _useState = useState(initEmail),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(false),\n      spinner = _useState2[0],\n      setSpinner = _useState2[1];\n\n  var user = useContext(UserContext);\n  var classes = useStyles({});\n  useEffect(function () {\n    setEmail(_objectSpread({}, email, {\n      to: to\n    }));\n  }, [to]);\n\n  var sendEmail =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setSpinner(true);\n              _context.next = 4;\n              return axios({\n                method: \"post\",\n                data: email,\n                url: \"\".concat(globalVars.serverURL, \"/emails/send\"),\n                params: {\n                  key: user.user.userkey\n                },\n                responseType: \"json\"\n              });\n\n            case 4:\n              res = _context.sent;\n              console.log(res);\n              _context.next = 8;\n              return res.data;\n\n            case 8:\n              data = _context.sent;\n              data ? setSpinner(false) : null;\n\n              if (data === globalVars.msgSuccess || data === \"Setup your email settings first\") {\n                setEmail(initEmail);\n                toggleIsEmailCreated(); // if email is sending from clients page\n\n                unCheckAll ? unCheckAll() : null;\n                data === globalVars.msgSuccess ? alert(languages.en.yourEmailSentSucces) : alert(languages.en.setupYourEmailSettings);\n              } else {\n                alert(languages.en.somethingWentWrong);\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sendEmail(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onChange = function onChange(e) {\n    setEmail(_objectSpread({}, email, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return isEmailCreated && to.length > 0 ? __jsx(Box, {\n    className: classes.formWrapper\n  }, __jsx(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    gutterBottom: true\n  }, languages.en.email), __jsx(\"form\", {\n    onSubmit: sendEmail\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    type: \"text\",\n    id: \"email-to\",\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    label: languages.en.to,\n    name: \"to\",\n    value: email.to,\n    disabled: true\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    type: \"text\",\n    id: \"email-subject\",\n    name: \"subject\",\n    margin: \"normal\",\n    fullWidth: true,\n    label: languages.en.subject,\n    autoFocus: true,\n    value: email.subject,\n    onChange: onChange,\n    disabled: spinner\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    name: \"message\",\n    multiline: true,\n    rows: \"4\",\n    fullWidth: true,\n    label: languages.en.message,\n    onChange: onChange,\n    value: email.message,\n    disabled: spinner\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    mt: \"2rem\"\n  }, spinner ? __jsx(CircularProgress, null) : null, __jsx(Button, {\n    onClick: toggleIsEmailCreated,\n    color: \"secondary\",\n    variant: \"contained\",\n    style: {\n      marginRight: \"1rem\"\n    }\n  }, languages.en.cancel), __jsx(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    startIcon: __jsx(SendIcon, null)\n  }, languages.en.send)))))) : null;\n};\n\nexport default EmailForm;","map":null,"metadata":{},"sourceType":"module"}