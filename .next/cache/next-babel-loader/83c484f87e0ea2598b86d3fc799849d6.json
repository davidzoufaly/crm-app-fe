{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/singleClient/SingleClientData.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport stringMethods from \"../../library/stringMethods\";\nimport { TextField, Select, FormControl, MenuItem, InputLabel } from \"@material-ui/core\";\n\nvar SingleClientData = function SingleClientData(_ref) {\n  var fieldsData = _ref.fieldsData,\n      client = _ref.client,\n      onInputChange = _ref.onInputChange;\n  return fieldsData.map(function (field) {\n    switch (field.fieldType) {\n      case \"text\":\n        return __jsx(TextField, {\n          key: field.fieldName,\n          name: field.fieldName,\n          label: field.fieldName,\n          fullWidth: true,\n          margin: \"normal\",\n          value: client[field.fieldName],\n          onChange: onInputChange,\n          disabled: field.fieldName === \"Date added\" || field.fieldName === \"Last modified\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        });\n\n      case \"number\":\n        return __jsx(TextField, {\n          fullWidth: true,\n          key: field.fieldName,\n          label: field.fieldName,\n          type: \"number\",\n          name: field.fieldName,\n          value: client[field.fieldName] ? client[field.fieldName] : \"\",\n          onChange: onInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n\n      case \"select\":\n        var fieldNameAsHtml = new stringMethods(field.fieldName).textToHtmlProp().getString();\n        return __jsx(FormControl, {\n          key: field.fieldName,\n          fullWidth: true,\n          margin: \"normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, __jsx(InputLabel, {\n          htmlFor: fieldNameAsHtml,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, field.fieldName), __jsx(Select, {\n          name: field.fieldName,\n          value: client[field.fieldName] ? client[field.fieldName] : \"ff\",\n          onChange: onInputChange,\n          id: fieldNameAsHtml,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, __jsx(MenuItem, {\n          value: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Ten\"), __jsx(MenuItem, {\n          value: 20,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Twenty\"), __jsx(MenuItem, {\n          value: 30,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Thirty\"), \"))}\"));\n    }\n  });\n};\n\nexport default SingleClientData;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/singleClient/SingleClientData.tsx"],"names":["stringMethods","TextField","Select","FormControl","MenuItem","InputLabel","SingleClientData","fieldsData","client","onInputChange","map","field","fieldType","fieldName","fieldNameAsHtml","textToHtmlProp","getString"],"mappings":";;;AACA,OAAOA,aAAP,MAA0B,6BAA1B;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,UALF,QAMO,mBANP;;AAQA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,MAAeC,MAAf,QAAeA,MAAf;AAAA,MAAuBC,aAAvB,QAAuBA,aAAvB;AAAA,SACvBF,UAAU,CAACG,GAAX,CAAe,UAAAC,KAAK,EAAI;AACtB,YAAQA,KAAK,CAACC,SAAd;AACE,WAAK,MAAL;AACE,eACI,MAAC,SAAD;AACE,UAAA,GAAG,EAAED,KAAK,CAACE,SADb;AAEE,UAAA,IAAI,EAAEF,KAAK,CAACE,SAFd;AAGE,UAAA,KAAK,EAAEF,KAAK,CAACE,SAHf;AAIE,UAAA,SAAS,MAJX;AAKE,UAAA,MAAM,EAAC,QALT;AAME,UAAA,KAAK,EAAEL,MAAM,CAACG,KAAK,CAACE,SAAP,CANf;AAOE,UAAA,QAAQ,EAAEJ,aAPZ;AAQE,UAAA,QAAQ,EACNE,KAAK,CAACE,SAAN,KAAoB,YAApB,IACAF,KAAK,CAACE,SAAN,KAAoB,eAVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAeF,WAAK,QAAL;AACE,eACI,MAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,GAAG,EAAEF,KAAK,CAACE,SAFb;AAGE,UAAA,KAAK,EAAEF,KAAK,CAACE,SAHf;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,IAAI,EAAEF,KAAK,CAACE,SALd;AAME,UAAA,KAAK,EAAEL,MAAM,CAACG,KAAK,CAACE,SAAP,CAAN,GAA0BL,MAAM,CAACG,KAAK,CAACE,SAAP,CAAhC,GAAoD,EAN7D;AAOE,UAAA,QAAQ,EAAEJ,aAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAWF,WAAK,QAAL;AACE,YAAMK,eAAe,GAAG,IAAId,aAAJ,CAAkBW,KAAK,CAACE,SAAxB,EACrBE,cADqB,GAErBC,SAFqB,EAAxB;AAGA,eACE,MAAC,WAAD;AAAa,UAAA,GAAG,EAAEL,KAAK,CAACE,SAAxB;AAAmC,UAAA,SAAS,MAA5C;AAA6C,UAAA,MAAM,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,UAAD;AAAY,UAAA,OAAO,EAAEC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuCH,KAAK,CAACE,SAA7C,CADF,EAEE,MAAC,MAAD;AACE,UAAA,IAAI,EAAEF,KAAK,CAACE,SADd;AAEE,UAAA,KAAK,EAAEL,MAAM,CAACG,KAAK,CAACE,SAAP,CAAN,GAA0BL,MAAM,CAACG,KAAK,CAACE,SAAP,CAAhC,GAAoD,IAF7D;AAGE,UAAA,QAAQ,EAAEJ,aAHZ;AAIE,UAAA,EAAE,EAAEK,eAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,MAAC,QAAD;AAAU,UAAA,KAAK,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EAOF,MAAC,QAAD;AAAU,UAAA,KAAK,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPE,EAQF,MAAC,QAAD;AAAU,UAAA,KAAK,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARE,QAFF,CADF;AAjCJ;AAqDD,GAtDD,CADuB;AAAA,CAAzB;;AAyDA,eAAeR,gBAAf","sourcesContent":["import globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport {\n  TextField,\n  Select,\n  FormControl,\n  MenuItem,\n  InputLabel\n} from \"@material-ui/core\";\n\nconst SingleClientData = ({ fieldsData, client, onInputChange }: any) =>\n  fieldsData.map(field => {\n    switch (field.fieldType) {\n      case \"text\":\n        return (\n            <TextField\n              key={field.fieldName}\n              name={field.fieldName}\n              label={field.fieldName}\n              fullWidth\n              margin=\"normal\"\n              value={client[field.fieldName]}\n              onChange={onInputChange}\n              disabled={\n                field.fieldName === \"Date added\" ||\n                field.fieldName === \"Last modified\"\n              }\n            />\n        );\n      case \"number\":\n        return (\n            <TextField\n              fullWidth\n              key={field.fieldName}\n              label={field.fieldName}\n              type=\"number\"\n              name={field.fieldName}\n              value={client[field.fieldName] ? client[field.fieldName] : \"\"}\n              onChange={onInputChange}\n            />\n        );\n      case \"select\":\n        const fieldNameAsHtml = new stringMethods(field.fieldName)\n          .textToHtmlProp()\n          .getString();\n        return (\n          <FormControl key={field.fieldName} fullWidth margin=\"normal\">\n            <InputLabel htmlFor={fieldNameAsHtml}>{field.fieldName}</InputLabel>\n            <Select\n              name={field.fieldName}\n              value={client[field.fieldName] ? client[field.fieldName] : \"ff\"}\n              onChange={onInputChange}\n              id={fieldNameAsHtml}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n              {/* <MenuItem key={globalVars.blankOption} value=\"\">{globalVars.blankOption}</MenuItem>\n              {field.fieldOptions.map(option => (\n                <MenuItem key={option.id}>{option.value}</MenuItem> */}\n              ))}\n            </Select>\n          </FormControl>\n        );\n    }\n  });\n\nexport default SingleClientData;\n"]},"metadata":{},"sourceType":"module"}