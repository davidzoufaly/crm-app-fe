{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/countContext.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState, createContext } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\n\nconst CountContext = props => {\n  const {\n    0: count,\n    1: setCount\n  } = useState({});\n  const Context = createContext(count);\n  useEffect(() => {\n    const getCounts = async () => {\n      const resClientCount = await axios({\n        method: \"GET\",\n        url: `${globalVars.serverURL}/clients/count`,\n        responseType: \"json\"\n      });\n      const clientData = await resClientCount.data;\n      const resFieldsData = await axios({\n        method: \"GET\",\n        url: `${globalVars.serverURL}/fields/count`,\n        responseType: \"json\"\n      });\n      const fieldData = await resFieldsData.data;\n      const resEmailsCount = await axios({\n        method: \"GET\",\n        url: `${globalVars.serverURL}/emails/count`,\n        responseType: \"json\"\n      });\n      const emailsData = await resEmailsCount.data;\n      setCount({\n        clientData,\n        fieldData,\n        emailsData\n      });\n    };\n\n    getCounts();\n  }, []);\n  return __jsx(Context.Provider, {\n    value: count,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default CountContext;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/countContext.tsx"],"names":["useEffect","useState","createContext","axios","globalVars","CountContext","props","count","setCount","Context","getCounts","resClientCount","method","url","serverURL","responseType","clientData","data","resFieldsData","fieldData","resEmailsCount","emailsData","children"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,aAA9B,QAAmD,OAAnD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMQ,OAAO,GAAGP,aAAa,CAACK,KAAD,CAA7B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,SAAS,GAAG,YAAY;AAC1B,YAAMC,cAAc,GAAG,MAAMR,KAAK,CAAC;AAC/BS,QAAAA,MAAM,EAAE,KADuB;AAE/BC,QAAAA,GAAG,EAAG,GAAET,UAAU,CAACU,SAAU,gBAFE;AAG/BC,QAAAA,YAAY,EAAE;AAHiB,OAAD,CAAlC;AAKE,YAAMC,UAAU,GAAG,MAAML,cAAc,CAACM,IAAxC;AAEA,YAAMC,aAAa,GAAG,MAAMf,KAAK,CAAC;AAChCS,QAAAA,MAAM,EAAE,KADwB;AAEhCC,QAAAA,GAAG,EAAG,GAAET,UAAU,CAACU,SAAU,eAFG;AAGhCC,QAAAA,YAAY,EAAE;AAHkB,OAAD,CAAjC;AAKA,YAAMI,SAAS,GAAG,MAAMD,aAAa,CAACD,IAAtC;AAEA,YAAMG,cAAc,GAAG,MAAMjB,KAAK,CAAC;AACjCS,QAAAA,MAAM,EAAE,KADyB;AAEjCC,QAAAA,GAAG,EAAG,GAAET,UAAU,CAACU,SAAU,eAFI;AAGjCC,QAAAA,YAAY,EAAE;AAHmB,OAAD,CAAlC;AAKA,YAAMM,UAAU,GAAG,MAAMD,cAAc,CAACH,IAAxC;AAEAT,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,UADK;AAELG,QAAAA,SAFK;AAGLE,QAAAA;AAHK,OAAD,CAAR;AAKL,KA3BD;;AA4BAX,IAAAA,SAAS;AACZ,GA9BQ,EA8BN,EA9BM,CAAT;AAgCA,SACI,MAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEH,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACgB,QADX,CADJ;AAKH,CAzCD;;AA2CA,eAAejB,YAAf","sourcesContent":["import { useEffect, useState, createContext } from \"react\";\n\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\n\nconst CountContext = (props) => {\n    const [count, setCount] = useState({});\n    const Context = createContext(count);\n\n    useEffect(() => {\n        const getCounts = async () => {\n            const resClientCount = await axios({\n                method: \"GET\",\n                url: `${globalVars.serverURL}/clients/count`,\n                responseType: \"json\"\n              });\n              const clientData = await resClientCount.data;\n            \n              const resFieldsData = await axios({\n                method: \"GET\",\n                url: `${globalVars.serverURL}/fields/count`,\n                responseType: \"json\"\n              });\n              const fieldData = await resFieldsData.data;\n            \n              const resEmailsCount = await axios({\n                method: \"GET\",\n                url: `${globalVars.serverURL}/emails/count`,\n                responseType: \"json\"\n              })\n              const emailsData = await resEmailsCount.data;\n\n              setCount({\n                  clientData,\n                  fieldData,\n                  emailsData\n              })\n        } \n        getCounts();\n    }, [])\n\n    return (\n        <Context.Provider value={count}>\n            {props.children}\n        </Context.Provider>\n    )\n}\n\nexport default CountContext;"]},"metadata":{},"sourceType":"module"}