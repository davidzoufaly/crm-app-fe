{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/client/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport Header from \"../../components/Header\";\nimport SingleClientData from \"../../components/singleClient/SingleClientData\";\nimport ButtonsSingle from \"../../components/singleClient/ButtonsSingle\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport UserContext from \"../../components/UserContext\";\nimport EmailForm from \"../../components/EmailForm\";\nimport languages from \"../../library/languages\";\nimport globalVars from \"../../library/globalVariables\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nconst Client = ({\n  clientData,\n  fieldsData\n}) => {\n  const {\n    0: client,\n    1: setClient\n  } = useState(clientData);\n  const {\n    0: name,\n    1: setName\n  } = useState(`${clientData[\"First name\"]} ${clientData[\"Last name\"]}`);\n  const user = useContext(UserContext);\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n  const {\n    0: isEmailCreated,\n    1: setIsEmailCreated\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    document.title = `${name} ${globalVars.titleSubText}`;\n    setInitialized(true);\n  }, [name]);\n  useEffect(() => {\n    user.checkUser();\n  }, []);\n\n  const onSave = async e => {\n    e.preventDefault();\n    setName(`${client[\"First name\"]} ${client[\"Last name\"]}`);\n    saveToDb();\n  };\n\n  const saveToDb = async () => {\n    await axios({\n      method: \"put\",\n      url: `${globalVars.serverURL}/clients/${router.query.key}/${router.query.id}`,\n      data: client,\n      responseType: \"json\"\n    });\n  };\n\n  const onDelete = async e => {\n    e.preventDefault();\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/clients/${router.query.key}/${router.query.id}`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    (await data.msg) === \"Success\" ? router.push(`/clients/${router.query.key}`) : alert(languages.en.somethingWentWrong);\n  };\n\n  const onInputChange = e => {\n    setClient(_objectSpread({}, client, {\n      [\"Last modified\"]: moment().format(\"llll\"),\n      [e.target.name]: e.target.type === \"number\" ? _parseInt(e.target.value) : e.target.value\n    }));\n  };\n\n  const toggleIsEmailCreated = () => {\n    setIsEmailCreated(isEmailCreated ? false : true);\n  };\n\n  return !user.user.signedIn && !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h3\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, name), __jsx(Box, {\n    mb: \"2rem\",\n    width: \"500px\",\n    maxWidth: \"100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(SingleClientData, {\n    fieldsData: fieldsData,\n    client: client,\n    onInputChange: onInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))), __jsx(EmailForm, {\n    to: [client[\"Email\"]],\n    isEmailCreated: isEmailCreated,\n    toggleIsEmailCreated: toggleIsEmailCreated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(ButtonsSingle, {\n    onSave: onSave,\n    toggleIsEmailCreated: toggleIsEmailCreated,\n    onDelete: onDelete,\n    isEmailCreated: isEmailCreated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n};\n\nClient.getInitialProps = async context => {\n  const resClient = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/clients/${context.query.key}/${context.query.id}`,\n    responseType: \"json\"\n  });\n  const clientData = await resClient.data;\n  const resFields = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/fields`,\n    params: {\n      key: context.query.key\n    },\n    responseType: \"json\"\n  });\n  const fieldsData = await resFields.data;\n  return {\n    clientData,\n    fieldsData\n  };\n};\n\nexport default Client;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/client/[id].tsx"],"names":["useRouter","useEffect","useState","useContext","moment","axios","Header","SingleClientData","ButtonsSingle","LoadingSpinner","UserContext","EmailForm","languages","globalVars","Typography","Box","Client","clientData","fieldsData","client","setClient","name","setName","user","initialized","setInitialized","isEmailCreated","setIsEmailCreated","router","document","title","titleSubText","checkUser","onSave","e","preventDefault","saveToDb","method","url","serverURL","query","key","id","data","responseType","onDelete","res","msg","push","alert","en","somethingWentWrong","onInputChange","format","target","type","value","toggleIsEmailCreated","signedIn","getInitialProps","context","resClient","resFields","params"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useEffect, useState, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport Header from \"../../components/Header\";\nimport SingleClientData from \"../../components/singleClient/SingleClientData\";\nimport ButtonsSingle from \"../../components/singleClient/ButtonsSingle\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport UserContext from \"../../components/UserContext\";\nimport EmailForm from \"../../components/EmailForm\";\nimport languages from \"../../library/languages\";\nimport globalVars from \"../../library/globalVariables\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nconst Client = ({ clientData, fieldsData }: any) => {\n  const [client, setClient] = useState(clientData);\n  const [name, setName] = useState(\n    `${clientData[\"First name\"]} ${clientData[\"Last name\"]}`\n  );\n\n  const user = useContext(UserContext);\n  const [initialized, setInitialized] = useState(false);\n  const [isEmailCreated, setIsEmailCreated] = useState(false);\n  const router = useRouter();\n\n  useEffect(() => {\n    document.title = `${name} ${globalVars.titleSubText}`;\n    setInitialized(true);\n  }, [name]);\n\n  useEffect(() => {\n    user.checkUser();\n  }, [])\n\n  const onSave = async e => {\n    e.preventDefault();\n    setName(`${client[\"First name\"]} ${client[\"Last name\"]}`);\n    saveToDb();\n  };\n\n  const saveToDb = async () => {\n    await axios({\n      method: \"put\",\n      url: `${globalVars.serverURL}/clients/${router.query.key}/${router.query.id}`,\n      data: client,\n      responseType: \"json\"\n    });\n  }\n\n  const onDelete = async e => {\n    e.preventDefault();\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/clients/${router.query.key}/${router.query.id}`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    (await data.msg) === \"Success\"\n      ? router.push(`/clients/${router.query.key}`)\n      : alert(languages.en.somethingWentWrong);\n  };\n\n  const onInputChange = e => {\n    setClient({\n      ...client, \n      [\"Last modified\"]: moment().format(\"llll\"),\n      [e.target.name]: e.target.type === \"number\" ? parseInt(e.target.value) : e.target.value\n    });\n  };\n\n  const toggleIsEmailCreated = () => {\n    setIsEmailCreated(isEmailCreated ? false : true);\n  };\n\n  return !user.user.signedIn && !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <Typography component=\"h1\" variant=\"h3\" gutterBottom>{name}</Typography>\n      <Box mb=\"2rem\" width=\"500px\" maxWidth=\"100\">\n      <form>\n        <SingleClientData\n          fieldsData={fieldsData}\n          client={client}\n          onInputChange={onInputChange}\n        />\n      </form>\n      </Box>\n        <EmailForm\n          to={[client[\"Email\"]]}\n          isEmailCreated={isEmailCreated}\n          toggleIsEmailCreated={toggleIsEmailCreated}\n        />\n        <ButtonsSingle\n          onSave={onSave}\n          toggleIsEmailCreated={toggleIsEmailCreated}\n          onDelete={onDelete}\n          isEmailCreated={isEmailCreated}\n        />\n    </div>\n  );\n};\n\nClient.getInitialProps = async (context: any) => {\n  const resClient = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/clients/${context.query.key}/${context.query.id}`,\n    responseType: \"json\"\n  });\n  const clientData = await resClient.data;\n\n  const resFields = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/fields`,\n    params: {key: context.query.key},\n    responseType: \"json\"\n  });\n  const fieldsData = await resFields.data;\n\n  return { clientData, fieldsData };\n};\n\nexport default Client;\n\n"]},"metadata":{},"sourceType":"module"}