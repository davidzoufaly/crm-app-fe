{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport DefaultFields from \"../components/DefaultFields\";\nimport CustomFields from \"../components/CustomFields\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Settings = ({\n  data\n}) => {\n  const router = useRouter();\n  const {\n    0: fields,\n    1: setField\n  } = useState(data);\n  const {\n    0: headingOne,\n    1: setHeadingOne\n  } = useState(\"\");\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n\n  const refreshList = async () => {\n    //get data from DB after change\n    const res = await axios({\n      method: \"get\",\n      url: `${globalVars.serverURL}/fields/`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    setField(data);\n  };\n\n  useEffect(() => {\n    //H1 from url\n    setHeadingOne(new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString()); //title from url\n\n    const title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title; //componendDidMount effect\n\n    setInitialized(true);\n  });\n\n  if (!initialized) {\n    return \"Loading...\";\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(Typography, {\n    variant: \"h3\",\n    component: \"h1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, headingOne), __jsx(DefaultFields, {\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(CustomFields, {\n    fields: fields,\n    refreshList: refreshList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nSettings.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return {\n    data\n  };\n};\n\nexport default Settings;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings.tsx"],"names":["Header","useRouter","stringMethods","globalVars","axios","useState","useEffect","DefaultFields","CustomFields","Typography","Settings","data","router","fields","setField","headingOne","setHeadingOne","initialized","setInitialized","refreshList","res","method","url","serverURL","responseType","pathname","removeSlash","firstCharUpperCase","getString","title","addStringToEnd","titleSubText","document","getInitialProps"],"mappings":"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","sourcesContent":["import Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport DefaultFields from \"../components/DefaultFields\";\nimport CustomFields from \"../components/CustomFields\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Settings = ({ data }: any) => {\n  const router = useRouter();\n  const [fields, setField] = useState(data);\n  const [headingOne, setHeadingOne] = useState(\"\");\n  const [initialized, setInitialized] = useState(false);\n\n  const refreshList = async () => {\n    //get data from DB after change\n    const res = await axios({\n      method: \"get\",\n      url: `${globalVars.serverURL}/fields/`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    setField(data);\n  }\n\n  useEffect(() => {\n    //H1 from url\n    setHeadingOne(\n      new stringMethods(router.pathname)\n        .removeSlash()\n        .firstCharUpperCase()\n        .getString()\n    );\n    //title from url\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n\n    document.title = title;\n\n    //componendDidMount effect\n    setInitialized(true);\n  });\n\n  if (!initialized) {\n    return \"Loading...\";\n  }\n\n  return (\n    <div>\n      <Header />\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom>{headingOne}</Typography>\n      <DefaultFields fields={fields}/>\n      <CustomFields fields={fields} refreshList={refreshList}/>\n    </div>\n  );\n};\n\nSettings.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return { data };\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}