{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormVisibleOrNot from \"./WebFormVisibleOrNot\";\nimport WebFormSubSelect from \"./WebFormSubSelect\";\nimport WebFormButtons from \"./WebFormButtons\";\nimport globalVars from \"../../../library/globalVariables\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => createStyles({\n  formWrapper: {\n    marginTop: theme.spacing(3),\n    borderRadius: theme.spacing(1),\n    boxShadow: theme.shadows[\"1\"],\n    padding: theme.spacing(3),\n    backgroundColor: theme.palette.grey[\"200\"],\n    width: \"50%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\"\n    }\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst WebForm = ({\n  fields\n}) => {\n  const initCounterValue = fields.map(e => e.order).sort((a, b) => b > a ? 1 : -1)[0];\n  const classes = useStyles({});\n  const user = useContext(UserContext);\n  const {\n    0: counter,\n    1: setCounter\n  } = useState(initCounterValue);\n  let initState;\n  const {\n    0: webFields,\n    1: setWebFields\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true,\n          order: counter\n        }) : field);\n\n      case \"addVisibleSelect\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true,\n          fieldFormVisible: true,\n          pause: false,\n          order: counter\n        }) : field);\n\n      case \"addNotVisibleValue\":\n        return state.map(field => field.pause ? _objectSpread({}, field, {\n          fieldFormVisible: false\n        }) : field);\n\n      case \"addHiddenSelect\":\n        return state.map(field => field.pause ? _objectSpread({}, field, {\n          fieldInForm: true,\n          pause: false,\n          order: counter,\n          fieldOptions: field.fieldOptions.map(option => option.value === action.payload.optionValue ? _objectSpread({}, option, {\n            preselected: true\n          }) : option)\n        }) : field);\n\n      case \"pauseSelect\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          pause: true\n        }) : field);\n\n      case \"remove\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: false,\n          fieldFormVisible: null,\n          fieldOptions: field.fieldOptions.map(option => option.preselected ? _objectSpread({}, option, {\n            preselected: null\n          }) : option)\n        }) : field);\n\n      default:\n        return state;\n    }\n  }, initState);\n  useEffect(() => {\n    initState = fields;\n  }, [fields]);\n\n  const addNotSelect = e => {\n    webFields.map(field => {\n      if (field.fieldName === e.target.value) {\n        if (field.fieldType !== \"select\") {\n          setWebFields({\n            type: \"add\",\n            payload: {\n              fieldName: e.target.value\n            }\n          });\n          setCounter(prevCount => prevCount + 1);\n        } else {\n          setWebFields({\n            type: \"pauseSelect\",\n            payload: {\n              fieldName: e.target.value\n            }\n          });\n        }\n      }\n    });\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: {\n        fieldName: e.currentTarget.id\n      }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: {\n        optionValue: e.target.value\n      }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: {\n        fieldName: e.currentTarget.id\n      }\n    });\n  };\n\n  const showOptionsOnClick = () => {\n    setWebFields({\n      type: \"addNotVisibleValue\"\n    });\n  };\n\n  const saveFormAuto = async () => {\n    await axios({\n      method: \"PUT\",\n      url: `${globalVars.serverURL}/fields`,\n      params: {\n        key: user.user.userkey\n      },\n      data: webFields,\n      responseType: \"json\"\n    });\n  };\n\n  useEffect(() => {\n    //save fields (form) on change\n    webFields !== fields ? saveFormAuto() : null;\n  }, [webFields]);\n  return __jsx(Box, {\n    className: classes.formWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(WebFormSelect, {\n    webFields: webFields,\n    addNotSelect: addNotSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), __jsx(WebFormVisibleOrNot, {\n    webFields: webFields,\n    addVisibleSelect: addVisibleSelect,\n    showOptionsOnClick: showOptionsOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }), __jsx(WebFormSubSelect, {\n    webFields: webFields,\n    addHiddenSelect: addHiddenSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), __jsx(WebFormList, {\n    webFields: webFields,\n    removeFromList: removeFromList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), __jsx(WebFormButtons, {\n    webFields: webFields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })));\n};\n\nexport default WebForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx"],"names":["useReducer","useState","useEffect","useContext","axios","UserContext","WebFormSelect","WebFormList","WebFormVisibleOrNot","WebFormSubSelect","WebFormButtons","globalVars","createStyles","makeStyles","Box","useStyles","theme","formWrapper","marginTop","spacing","borderRadius","boxShadow","shadows","padding","backgroundColor","palette","grey","width","breakpoints","down","textField","WebForm","fields","initCounterValue","map","e","order","sort","a","b","classes","user","counter","setCounter","initState","webFields","setWebFields","state","action","type","field","fieldName","payload","fieldInForm","fieldFormVisible","pause","fieldOptions","option","value","optionValue","preselected","addNotSelect","target","fieldType","prevCount","addVisibleSelect","currentTarget","id","addHiddenSelect","removeFromList","showOptionsOnClick","saveFormAuto","method","url","serverURL","params","key","userkey","data","responseType"],"mappings":"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","sourcesContent":["import { useReducer, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormVisibleOrNot from \"./WebFormVisibleOrNot\";\nimport WebFormSubSelect from \"./WebFormSubSelect\";\nimport WebFormButtons from \"./WebFormButtons\";\nimport globalVars from \"../../../library/globalVariables\"\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formWrapper: {\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      boxShadow: theme.shadows[\"1\"],\n      padding: theme.spacing(3),\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\",\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\"\n      }\n    },\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  })\n);\n\nconst WebForm = ({ fields }) => {\n  \n  const initCounterValue = fields.map(e => e.order).sort((a,b) => b > a ? 1 : -1)[0];\n  const classes = useStyles({});\n  const user = useContext(UserContext);\n\n  const [counter, setCounter] = useState(initCounterValue);\n  let initState;\n  const [webFields, setWebFields] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true, order: counter }\n            : field\n        );\n\n      case \"addVisibleSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? {\n                ...field,\n                fieldInForm: true,\n                fieldFormVisible: true,\n                pause: false,\n                order: counter\n              }\n            : field\n        );\n\n      case \"addNotVisibleValue\":\n        return state.map(field =>\n          field.pause\n            ? {\n                ...field,\n                fieldFormVisible: false\n              }\n            : field\n        );\n\n      case \"addHiddenSelect\":\n        return state.map(field =>\n          field.pause\n            ? {\n                ...field,\n                fieldInForm: true,\n                pause: false,\n                order: counter,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.value === action.payload.optionValue\n                    ? { ...option, preselected: true }\n                    : option\n                )\n              }\n            : field\n        );\n\n      case \"pauseSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, pause: true }\n            : field\n        );\n\n      case \"remove\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? {\n                ...field,\n                fieldInForm: false,\n                fieldFormVisible: null,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.preselected ? { ...option, preselected: null } : option\n                )\n              }\n            : field\n        );\n      default:\n        return state;\n    }\n  }, initState);\n\n  useEffect(() => {\n    initState = fields\n  },[fields])\n\n  const addNotSelect = e => {\n    webFields.map(field => {\n      if (field.fieldName === e.target.value) {\n        if (field.fieldType !== \"select\") {\n          setWebFields({\n            type: \"add\",\n            payload: { fieldName: e.target.value }\n          });\n          setCounter(prevCount => prevCount + 1);\n        } else {\n          setWebFields({\n            type: \"pauseSelect\",\n            payload: { fieldName: e.target.value }\n          });\n        }\n      }\n    });\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: { fieldName: e.currentTarget.id }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: { optionValue: e.target.value }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: { fieldName: e.currentTarget.id }\n    });\n  };\n\n  const showOptionsOnClick = () => {\n    setWebFields({\n      type: \"addNotVisibleValue\"\n    });\n  };\n\n  const saveFormAuto = async () => {\n    await axios({\n          method: \"PUT\",\n          url: `${globalVars.serverURL}/fields`,\n          params: {key: user.user.userkey},\n          data: webFields,\n          responseType: \"json\"\n      })\n  }\n\n  useEffect(() => {\n    //save fields (form) on change\n    webFields !== fields\n    ? saveFormAuto()\n    : null\n}, [webFields])\n\n\n  return (\n    <Box className={classes.formWrapper}>\n    <form>\n      <WebFormSelect webFields={webFields} addNotSelect={addNotSelect} />\n      <WebFormVisibleOrNot\n        webFields={webFields}\n        addVisibleSelect={addVisibleSelect}\n        showOptionsOnClick={showOptionsOnClick}\n      />\n      <WebFormSubSelect\n        webFields={webFields}\n        addHiddenSelect={addHiddenSelect}\n      />\n      <WebFormList webFields={webFields} removeFromList={removeFromList} />\n      <WebFormButtons webFields={webFields}/>\n    </form>\n    </Box>\n  );\n};\n\nexport default WebForm;\n"]},"metadata":{},"sourceType":"module"}