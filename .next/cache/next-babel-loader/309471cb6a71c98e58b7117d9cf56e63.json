{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormVisibleOrNot.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport languages from \"../../../library/languages\";\n\nconst WebFormVisibleOrNot = ({\n  webFields,\n  addVisibleSelect,\n  showOptionsOnClick\n}) => {\n  const VisibleOrNot = webFields.map(({\n    fieldName,\n    fieldFormVisible,\n    _id,\n    pause\n  }) => fieldFormVisible === null ? pause ? __jsx(\"div\", {\n    key: _id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, languages.en.shouldBe, \" \", __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, fieldName), \" \", languages.en.visibleInForm, \"?\"), __jsx(\"button\", {\n    id: fieldName,\n    onClick: addVisibleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, languages.en.yes), __jsx(\"button\", {\n    onClick: showOptionsOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, languages.en.no)) : null : null);\n  return __jsx(React.Fragment, null, VisibleOrNot);\n};\n\nexport default WebFormVisibleOrNot;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormVisibleOrNot.tsx"],"names":["languages","WebFormVisibleOrNot","webFields","addVisibleSelect","showOptionsOnClick","VisibleOrNot","map","fieldName","fieldFormVisible","_id","pause","en","shouldBe","visibleInForm","yes","no"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,gBAAb;AAA+BC,EAAAA;AAA/B,CAAD,KAA+D;AAEzF,QAAMC,YAAY,GAAGH,SAAS,CAACI,GAAV,CAAc,CAAC;AAACC,IAAAA,SAAD;AAAYC,IAAAA,gBAAZ;AAA8BC,IAAAA,GAA9B;AAAmCC,IAAAA;AAAnC,GAAD,KACjCF,gBAAgB,KAAK,IAArB,GACEE,KAAK,GACH;AAAK,IAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,SAAS,CAACW,EAAV,CAAaC,QADhB,OAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASL,SAAT,CAD1B,OACwDP,SAAS,CAACW,EAAV,CAAaE,aADrE,MADF,EAIE;AAAQ,IAAA,EAAE,EAAEN,SAAZ;AAAuB,IAAA,OAAO,EAAEJ,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SAAS,CAACW,EAAV,CAAaG,GADhB,CAJF,EAOE;AAAQ,IAAA,OAAO,EAAEV,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCJ,SAAS,CAACW,EAAV,CAAaI,EAAnD,CAPF,CADG,GAUD,IAXN,GAYI,IAbe,CAArB;AAgBA,SACE,4BACCV,YADD,CADF;AAKD,CAvBD;;AAyBA,eAAeJ,mBAAf","sourcesContent":["import languages from \"../../../library/languages\"\n\nconst WebFormVisibleOrNot = ({ webFields, addVisibleSelect, showOptionsOnClick } : any) => {\n\n  const VisibleOrNot = webFields.map(({fieldName, fieldFormVisible, _id, pause}) =>\n    fieldFormVisible === null ? (\n      pause ? (\n        <div key={_id}>\n          <p>\n            {languages.en.shouldBe} <strong>{fieldName}</strong> {languages.en.visibleInForm}?\n          </p>\n          <button id={fieldName} onClick={addVisibleSelect}>\n            {languages.en.yes}\n          </button>\n          <button onClick={showOptionsOnClick}>{languages.en.no}</button>\n        </div>\n      ) : null\n    ) : null\n  );\n\n  return (\n    <>\n    {VisibleOrNot}\n    </>\n  );\n};\n\nexport default WebFormVisibleOrNot;\n"]},"metadata":{},"sourceType":"module"}