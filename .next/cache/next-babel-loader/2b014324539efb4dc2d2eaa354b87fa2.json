{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/RegisterForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\n\nconst RegisterForm = () => {\n  const {\n    0: regUser,\n    1: setRegUser\n  } = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const userContext = useContext(UserContext);\n\n  const onChange = e => {\n    e.target.name === \"username\" ? setRegUser(_objectSpread({}, regUser, {\n      username: e.target.value\n    })) : setRegUser(_objectSpread({}, regUser, {\n      password: e.target.value\n    }));\n  };\n\n  const onRegister = async () => {\n    const userRes = await axios({\n      method: \"POST\",\n      data: regUser,\n      url: `${globalVars.serverURL}/users`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n\n    if (userData.msg === \"Success\") {\n      userContext.setUser(regUser.username);\n    } else {\n      alert(\"Incorrect username or password\");\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Register\"), __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    onChange: onChange,\n    type: \"text\",\n    value: regUser.username,\n    text: \"username\",\n    title: new stringMethods(languages.en.username).firstCharUpperCase().getString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: regUser.password,\n    text: \"password\",\n    title: languages.en.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: regUser.password,\n    text: \"password\",\n    title: new stringMethods(languages.en.repeatPassword).firstCharUpperCase().getString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(LoginButton, {\n    onClick: onRegister,\n    text: languages.en.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/RegisterForm.tsx"],"names":["useState","useContext","axios","UserContext","TextInput","LoginButton","globalVars","languages","stringMethods","RegisterForm","regUser","setRegUser","username","password","userContext","onChange","e","target","name","value","onRegister","userRes","method","data","url","serverURL","responseType","userData","msg","setUser","alert","en","firstCharUpperCase","getString","repeatPassword","register"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\n\nconst RegisterForm = () => {\n    const [regUser, setRegUser] = useState({username : \"\", password : \"\" });\n    const userContext = useContext(UserContext);\n\n    const onChange = (e) =>Â {\n        e.target.name === \"username\"\n            ? setRegUser({...regUser, username: e.target.value})\n            : setRegUser({...regUser, password: e.target.value})\n    }\n\n    const onRegister = async() => {\n        const userRes = await axios({\n            method: \"POST\",\n            data: regUser,\n            url: `${globalVars.serverURL}/users`,\n            responseType: \"json\"\n        })\n        const userData = await userRes.data;\n        if(userData.msg === \"Success\") {\n            userContext.setUser(regUser.username);\n        } else {\n            alert(\"Incorrect username or password\")\n        }\n    }\n\n    return (\n        <>  \n            <h2>Register</h2>\n            <form>\n                <TextInput onChange={onChange} type=\"text\" value={regUser.username} text=\"username\" title={new stringMethods(languages.en.username).firstCharUpperCase().getString()} />\n                <TextInput onChange={onChange} type=\"password\" value={regUser.password} text=\"password\" title={languages.en.password} />\n                <TextInput onChange={onChange} type=\"password\" value={regUser.password} text=\"password\" title={new stringMethods(languages.en.repeatPassword).firstCharUpperCase().getString()}/>\n                <LoginButton onClick={onRegister} text={languages.en.register} />\n            </form>\n        </>\n    )\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}