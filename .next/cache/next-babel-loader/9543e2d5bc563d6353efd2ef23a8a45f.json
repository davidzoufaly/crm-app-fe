{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormButtons.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport globalVars from \"../../../library/globalVariables\";\nimport languages from \"../../../library/languages\";\nimport { useContext, useRef } from \"react\";\nimport { Button, Box, Typography } from \"@material-ui/core\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst WebFormButtons = ({\n  webFields\n}) => {\n  const user = useContext(UserContext);\n  const showTip = useRef(null);\n\n  const onDownload = async () => {\n    const res = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/webform/`,\n      params: {\n        key: user.user.userkey\n      },\n      data: webFields,\n      responseType: \"blob\"\n    });\n    const url = await window.URL.createObjectURL(new Blob([res.data]));\n    const link = await document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"crm-form.js\");\n    document.body.appendChild(link);\n    link.click();\n    showTip.current.style.color = \"red\";\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: onDownload,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: __jsx(GetAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, languages.en.donwloadForm)), __jsx(Typography, {\n    ref: showTip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, languages.en.webFormTip));\n};\n\nexport default WebFormButtons;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormButtons.tsx"],"names":["axios","UserContext","globalVars","languages","useContext","useRef","Button","Box","Typography","GetAppIcon","WebFormButtons","webFields","user","showTip","onDownload","res","method","url","serverURL","params","key","userkey","data","responseType","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","current","style","color","en","donwloadForm","webFormTip"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,OAAnC;AACA,SAAQC,MAAR,EAAgBC,GAAhB,EAAqBC,UAArB,QAAsC,mBAAtC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAE7C,QAAMC,IAAI,GAAGR,UAAU,CAACH,WAAD,CAAvB;AACA,QAAMY,OAAO,GAAGR,MAAM,CAAC,IAAD,CAAtB;;AAEA,QAAMS,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAMf,KAAK,CAAC;AACtBgB,MAAAA,MAAM,EAAE,KADc;AAEtBC,MAAAA,GAAG,EAAG,GAAEf,UAAU,CAACgB,SAAU,WAFP;AAGtBC,MAAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAER,IAAI,CAACA,IAAL,CAAUS;AAAhB,OAHc;AAItBC,MAAAA,IAAI,EAAEX,SAJgB;AAKtBY,MAAAA,YAAY,EAAE;AALQ,KAAD,CAAvB;AAOA,UAAMN,GAAG,GAAG,MAAMO,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAACZ,GAAG,CAACO,IAAL,CAAT,CAA3B,CAAlB;AACA,UAAMM,IAAI,GAAG,MAAMC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAnB;AACAF,IAAAA,IAAI,CAACG,IAAL,GAAYd,GAAZ;AACAW,IAAAA,IAAI,CAACI,YAAL,CAAkB,UAAlB,EAA8B,aAA9B;AACAH,IAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B;AACAA,IAAAA,IAAI,CAACO,KAAL;AAEAtB,IAAAA,OAAO,CAACuB,OAAR,CAAgBC,KAAhB,CAAsBC,KAAtB,GAA8B,KAA9B;AACD,GAhBD;;AAkBA,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,cAAc,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAExB,UAAjB;AAA6B,IAAA,OAAO,EAAC,WAArC;AAAiD,IAAA,KAAK,EAAC,SAAvD;AAAiE,IAAA,SAAS,EAAE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4FX,SAAS,CAACoC,EAAV,CAAaC,YAAzG,CADF,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,GAAG,EAAE3B,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BV,SAAS,CAACoC,EAAV,CAAaE,UAAxC,CAJF,CADF;AAQD,CA/BD;;AAiCA,eAAe/B,cAAf","sourcesContent":["import axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport globalVars from \"../../../library/globalVariables\";\nimport languages from \"../../../library/languages\";\nimport { useContext, useRef } from \"react\";\nimport {Button, Box, Typography} from \"@material-ui/core\"\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst WebFormButtons = ({ webFields }: any) => {\n\n  const user = useContext(UserContext);\n  const showTip = useRef(null);\n\n  const onDownload = async () => {\n    const res = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/webform/`,\n      params: {key: user.user.userkey},\n      data: webFields,\n      responseType: \"blob\"\n    });\n    const url = await window.URL.createObjectURL(new Blob([res.data]));\n    const link = await document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"crm-form.js\");\n    document.body.appendChild(link);\n    link.click();\n\n    showTip.current.style.color = \"red\"\n  };\n\n  return (\n    <>\n      <Box display=\"flex\" justifyContent=\"flex-end\">\n        <Button onClick={onDownload} variant=\"contained\" color=\"primary\" startIcon={<GetAppIcon/>}>{languages.en.donwloadForm}</Button>\n      </Box>\n      <Typography ref={showTip}>{languages.en.webFormTip}</Typography>\n    </>\n  );\n};\n\nexport default WebFormButtons;\n"]},"metadata":{},"sourceType":"module"}