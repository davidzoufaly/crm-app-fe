{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../components/UserContext\";\nimport DefaultFields from \"../components/settings/DefaultFields\";\nimport CustomFields from \"../components/settings/customFields/CustomFields\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport EmailSettings from \"../components/settings/EmailSettings\";\nimport WebForm from \"../components/settings/webform/WebForm\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport Typography from \"@material-ui/core/Typography\";\n\nvar Settings = function Settings(_ref) {\n  var dataFields = _ref.dataFields,\n      dataEmailSettings = _ref.dataEmailSettings;\n  var router = useRouter();\n\n  var _useState = useState(dataFields),\n      fields = _useState[0],\n      setField = _useState[1];\n\n  var _useState2 = useState(false),\n      initialized = _useState2[0],\n      setInitialized = _useState2[1];\n\n  var user = useContext(UserContext);\n\n  var refreshList =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios({\n                method: \"get\",\n                url: \"\".concat(globalVars.serverURL, \"/fields/\"),\n                responseType: \"json\"\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.data;\n\n            case 5:\n              data = _context.sent;\n              setField(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function refreshList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    //title from url\n    var title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title; //componendDidMount effect\n\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n  var h1 = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString();\n  return !user.user.signedIn && !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(Typography, {\n    variant: \"h3\",\n    component: \"h1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, h1), __jsx(DefaultFields, {\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(CustomFields, {\n    fields: fields,\n    refreshList: refreshList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(EmailSettings, {\n    data: (username, pass),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(WebForm, {\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nSettings.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(context) {\n    var resFields, dataFields, resEmailSettings, dataEmailSettings;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios({\n              method: \"GET\",\n              params: {\n                key: context.query.Api_KEY\n              },\n              url: \"\".concat(globalVars.serverURL, \"/fields\"),\n              responseType: \"json\"\n            });\n\n          case 2:\n            resFields = _context2.sent;\n            _context2.next = 5;\n            return resFields.data;\n\n          case 5:\n            dataFields = _context2.sent;\n            _context2.next = 8;\n            return axios({\n              method: \"GET\",\n              params: {\n                key: context.query.Api_KEY\n              },\n              url: \"\".concat(globalVars.serverURL, \"/emails/email-settings\"),\n              responseType: \"json\"\n            });\n\n          case 8:\n            resEmailSettings = _context2.sent;\n            _context2.next = 11;\n            return resEmailSettings.data;\n\n          case 11:\n            dataEmailSettings = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              dataFields: dataFields,\n              dataEmailSettings: dataEmailSettings\n            });\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Settings;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings.tsx"],"names":["Header","useRouter","useState","useEffect","useContext","axios","UserContext","DefaultFields","CustomFields","LoadingSpinner","EmailSettings","WebForm","globalVars","stringMethods","Typography","Settings","dataFields","dataEmailSettings","router","fields","setField","initialized","setInitialized","user","refreshList","method","url","serverURL","responseType","res","data","title","pathname","removeSlash","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","checkUser","h1","signedIn","username","pass","getInitialProps","context","params","key","query","Api_KEY","resFields","resEmailSettings"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,YAAP,MAAyB,kDAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA4C;AAAA,MAAzCC,UAAyC,QAAzCA,UAAyC;AAAA,MAA7BC,iBAA6B,QAA7BA,iBAA6B;AAC3D,MAAMC,MAAM,GAAGjB,SAAS,EAAxB;;AAD2D,kBAEhCC,QAAQ,CAACc,UAAD,CAFwB;AAAA,MAEpDG,MAFoD;AAAA,MAE5CC,QAF4C;;AAAA,mBAGrBlB,QAAQ,CAAC,KAAD,CAHa;AAAA,MAGpDmB,WAHoD;AAAA,MAGvCC,cAHuC;;AAI3D,MAAMC,IAAI,GAAGnB,UAAU,CAACE,WAAD,CAAvB;;AAEA,MAAMkB,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEAnB,KAAK,CAAC;AACtBoB,gBAAAA,MAAM,EAAE,KADc;AAEtBC,gBAAAA,GAAG,YAAKd,UAAU,CAACe,SAAhB,aAFmB;AAGtBC,gBAAAA,YAAY,EAAE;AAHQ,eAAD,CAFL;;AAAA;AAEZC,cAAAA,GAFY;AAAA;AAAA,qBAOCA,GAAG,CAACC,IAPL;;AAAA;AAOZA,cAAAA,IAPY;AAQlBV,cAAAA,QAAQ,CAACU,IAAD,CAAR;;AARkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXN,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAWArB,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAM4B,KAAK,GAAG,IAAIlB,aAAJ,CAAkBK,MAAM,CAACc,QAAzB,EACXC,WADW,GAEXC,kBAFW,GAGXC,cAHW,CAGIvB,UAAU,CAACwB,YAHf,EAIXC,SAJW,EAAd;AAKAC,IAAAA,QAAQ,CAACP,KAAT,GAAiBA,KAAjB,CAPc,CAQd;;AACAT,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAC,IAAAA,IAAI,CAACgB,SAAL;AACD,GAXQ,EAWN,CAACrB,MAAD,CAXM,CAAT;AAaA,MAAMsB,EAAE,GAAG,IAAI3B,aAAJ,CAAkBK,MAAM,CAACc,QAAzB,EACRC,WADQ,GAERC,kBAFQ,GAGRG,SAHQ,EAAX;AAKA,SAAO,CAACd,IAAI,CAACA,IAAL,CAAUkB,QAAX,IAAuB,CAACpB,WAAxB,GACL,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGmB,EADH,CAFF,EAKE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAErB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,MAAtB;AAA8B,IAAA,WAAW,EAAEK,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,MAAC,aAAD;AAAe,IAAA,IAAI,GAAEkB,QAAQ,EAAEC,IAAZ,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,MAAC,OAAD;AAAS,IAAA,MAAM,EAAExB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAHF;AAcD,CAjDD;;AAmDAJ,QAAQ,CAAC6B,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA2B,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDxC,KAAK,CAAC;AAC5BoB,cAAAA,MAAM,EAAE,KADoB;AAE5BqB,cAAAA,MAAM,EAAE;AAACC,gBAAAA,GAAG,EAAEF,OAAO,CAACG,KAAR,CAAcC;AAApB,eAFoB;AAG5BvB,cAAAA,GAAG,YAAKd,UAAU,CAACe,SAAhB,YAHyB;AAI5BC,cAAAA,YAAY,EAAE;AAJc,aAAD,CADJ;;AAAA;AACnBsB,YAAAA,SADmB;AAAA;AAAA,mBAOAA,SAAS,CAACpB,IAPV;;AAAA;AAOnBd,YAAAA,UAPmB;AAAA;AAAA,mBASMX,KAAK,CAAC;AACnCoB,cAAAA,MAAM,EAAE,KAD2B;AAEnCqB,cAAAA,MAAM,EAAE;AAACC,gBAAAA,GAAG,EAAEF,OAAO,CAACG,KAAR,CAAcC;AAApB,eAF2B;AAGnCvB,cAAAA,GAAG,YAAKd,UAAU,CAACe,SAAhB,2BAHgC;AAInCC,cAAAA,YAAY,EAAE;AAJqB,aAAD,CATX;;AAAA;AASnBuB,YAAAA,gBATmB;AAAA;AAAA,mBAgBOA,gBAAgB,CAACrB,IAhBxB;;AAAA;AAgBnBb,YAAAA,iBAhBmB;AAAA,8CAkBlB;AAAED,cAAAA,UAAU,EAAVA,UAAF;AAAcC,cAAAA,iBAAiB,EAAjBA;AAAd,aAlBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAqBA,eAAeF,QAAf","sourcesContent":["import Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../components/UserContext\";\nimport DefaultFields from \"../components/settings/DefaultFields\";\nimport CustomFields from \"../components/settings/customFields/CustomFields\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport EmailSettings from \"../components/settings/EmailSettings\";\nimport WebForm from \"../components/settings/webform/WebForm\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Settings = ({ dataFields, dataEmailSettings }: any) => {\n  const router = useRouter();\n  const [fields, setField] = useState(dataFields);\n  const [initialized, setInitialized] = useState(false);\n  const user = useContext(UserContext);\n\n  const refreshList = async () => {\n    //get data from DB after change\n    const res = await axios({\n      method: \"get\",\n      url: `${globalVars.serverURL}/fields/`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    setField(data);\n  };\n\n  useEffect(() => {\n    //title from url\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    //componendDidMount effect\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  return !user.user.signedIn && !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n        {h1}\n      </Typography>\n      <DefaultFields fields={fields} />\n      <CustomFields fields={fields} refreshList={refreshList} />\n      <EmailSettings data={username, pass} />\n      <WebForm fields={fields} />\n    </div>\n  );\n};\n\nSettings.getInitialProps = async (context : any) => {\n  const resFields = await axios({\n    method: \"GET\",\n    params: {key: context.query.Api_KEY},\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const dataFields = await resFields.data;\n\n  const resEmailSettings = await axios({\n    method: \"GET\",\n    params: {key: context.query.Api_KEY},\n    url: `${globalVars.serverURL}/emails/email-settings`,\n    responseType: \"json\"\n  });\n\n  const dataEmailSettings = await resEmailSettings.data;\n\n  return { dataFields, dataEmailSettings };\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}