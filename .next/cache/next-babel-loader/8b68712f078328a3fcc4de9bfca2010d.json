{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport ShowRecordsNumber from \"../components/ShowRecordsNumber\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nconst Dashboard = ({\n  clientData,\n  fieldData\n}) => {\n  const router = useRouter();\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n  useEffect(() => {\n    const title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n  }, []);\n  const h1 = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString();\n  return !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, h1), __jsx(ShowRecordsNumber, {\n    data: clientData.data,\n    string: \"clients\",\n    link: \"/clients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), __jsx(ShowRecordsNumber, {\n    data: fieldData.data,\n    string: \"fields\",\n    link: \"/settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nDashboard.getInitialProps = async () => {\n  const resClientCount = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/count`,\n    responseType: \"json\"\n  });\n  const clientData = await resClientCount.data;\n  const resFieldsData = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields/count`,\n    responseType: \"json\"\n  });\n  const fieldData = await resFieldsData.data;\n  return {\n    clientData,\n    fieldData\n  };\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx"],"names":["Header","axios","useEffect","useState","useRouter","ShowRecordsNumber","stringMethods","globalVars","LoadingSpinner","Dashboard","clientData","fieldData","router","initialized","setInitialized","title","pathname","removeSlash","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","h1","data","getInitialProps","resClientCount","method","url","serverURL","responseType","resFieldsData"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAoC;AACpD,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAA,OAACS,WAAD;AAAA,OAAcC;AAAd,MAAgCX,QAAQ,CAAC,KAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,KAAK,GAAG,IAAIT,aAAJ,CAAkBM,MAAM,CAACI,QAAzB,EACXC,WADW,GAEXC,kBAFW,GAGXC,cAHW,CAGIZ,UAAU,CAACa,YAHf,EAIXC,SAJW,EAAd;AAKAC,IAAAA,QAAQ,CAACP,KAAT,GAAiBA,KAAjB;AACAD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GARQ,EAQN,EARM,CAAT;AAUA,QAAMS,EAAE,GAAG,IAAIjB,aAAJ,CAAkBM,MAAM,CAACI,QAAzB,EACRC,WADQ,GAERC,kBAFQ,GAGRG,SAHQ,EAAX;AAKA,SAAO,CAACR,WAAD,GACL,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKU,EAAL,CAFF,EAGE,MAAC,iBAAD;AACE,IAAA,IAAI,EAAEb,UAAU,CAACc,IADnB;AAEE,IAAA,MAAM,EAAE,SAFV;AAGE,IAAA,IAAI,EAAE,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAQE,MAAC,iBAAD;AACE,IAAA,IAAI,EAAEb,SAAS,CAACa,IADlB;AAEE,IAAA,MAAM,EAAE,QAFV;AAGE,IAAA,IAAI,EAAE,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAHF;AAkBD,CArCD;;AAuCAf,SAAS,CAACgB,eAAV,GAA4B,YAAY;AACtC,QAAMC,cAAc,GAAG,MAAMzB,KAAK,CAAC;AACjC0B,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,GAAG,EAAG,GAAErB,UAAU,CAACsB,SAAU,gBAFI;AAGjCC,IAAAA,YAAY,EAAE;AAHmB,GAAD,CAAlC;AAKA,QAAMpB,UAAU,GAAG,MAAMgB,cAAc,CAACF,IAAxC;AAEA,QAAMO,aAAa,GAAG,MAAM9B,KAAK,CAAC;AAChC0B,IAAAA,MAAM,EAAE,KADwB;AAEhCC,IAAAA,GAAG,EAAG,GAAErB,UAAU,CAACsB,SAAU,eAFG;AAGhCC,IAAAA,YAAY,EAAE;AAHkB,GAAD,CAAjC;AAKA,QAAMnB,SAAS,GAAG,MAAMoB,aAAa,CAACP,IAAtC;AACA,SAAO;AAAEd,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAP;AACD,CAfD;;AAiBA,eAAeF,SAAf","sourcesContent":["import Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport ShowRecordsNumber from \"../components/ShowRecordsNumber\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nconst Dashboard = ({ clientData, fieldData }: any) => {\n  const router = useRouter();\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n  }, []);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  return !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <h1>{h1}</h1>\n      <ShowRecordsNumber\n        data={clientData.data}\n        string={\"clients\"}\n        link={\"/clients\"}\n      />\n      <ShowRecordsNumber\n        data={fieldData.data}\n        string={\"fields\"}\n        link={\"/settings\"}\n      />\n    </div>\n  );\n};\n\nDashboard.getInitialProps = async () => {\n  const resClientCount = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/count`,\n    responseType: \"json\"\n  });\n  const clientData = await resClientCount.data;\n\n  const resFieldsData = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields/count`,\n    responseType: \"json\"\n  });\n  const fieldData = await resFieldsData.data;\n  return { clientData, fieldData };\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}