{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport stringMethods from \"../library/stringMethods\";\n\nconst CustomClientFields = ({\n  fields\n}) => {\n  const customFields = fields.filter(({\n    fieldPermanent\n  }) => !fieldPermanent).map(({\n    fieldName,\n    _id,\n    fieldType,\n    fieldOptions\n  }) => {\n    const customFieldNameFormated = new stringMethods(fieldName).camelStringToText().firstCharUpperCase().getString();\n    const customFieldTypeFormated = new stringMethods(fieldType).camelStringToText().getString();\n\n    const optionsMap = () => {\n      return fieldOptions.map(e => __jsx(\"li\", {\n        key: e,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, e));\n    };\n\n    return __jsx(\"div\", {\n      key: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, customFieldNameFormated), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"(\", customFieldTypeFormated, \")\"), fieldType === \"select\" ? __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, optionsMap()) : null);\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Custom Client Fields\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, customFields));\n};\n\nexport default CustomClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx"],"names":["stringMethods","CustomClientFields","fields","customFields","filter","fieldPermanent","map","fieldName","_id","fieldType","fieldOptions","customFieldNameFormated","camelStringToText","firstCharUpperCase","getString","customFieldTypeFormated","optionsMap","e"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,0BAA1B;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAC9C,QAAMC,YAAY,GAAGD,MAAM,CACxBE,MADkB,CACX,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAA6B,CAACA,cADnB,EAElBC,GAFkB,CAEd,CAAC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,GAAb;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA;AAA7B,GAAD,KAAsD;AACzD,UAAMC,uBAAuB,GAAG,IAAIX,aAAJ,CAAkBO,SAAlB,EAC7BK,iBAD6B,GAE7BC,kBAF6B,GAG7BC,SAH6B,EAAhC;AAKA,UAAMC,uBAAuB,GAAG,IAAIf,aAAJ,CAAkBS,SAAlB,EAC7BG,iBAD6B,GAE7BE,SAF6B,EAAhC;;AAIA,UAAME,UAAU,GAAG,MAAM;AACvB,aAAON,YAAY,CAACJ,GAAb,CAAkBW,CAAD,IAAiB;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaA,CAAb,CAAlC,CAAP;AACD,KAFD;;AAIA,WACE;AAAK,MAAA,GAAG,EAAET,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIG,uBAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKI,uBAAL,MAFF,EAGGN,SAAS,KAAK,QAAd,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKO,UAAU,EAAf,CADD,GAEC,IALJ,CADF;AASD,GAzBkB,CAArB;AA2BA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,YAAN,CAFF,CADF;AAMD,CAlCD;;AAoCA,eAAeF,kBAAf","sourcesContent":["import stringMethods from \"../library/stringMethods\";\n\nconst CustomClientFields = ({ fields }: any) => {\n  const customFields = fields\n    .filter(({ fieldPermanent }: any) => !fieldPermanent)\n    .map(({ fieldName, _id, fieldType, fieldOptions }: any) => {\n      const customFieldNameFormated = new stringMethods(fieldName)\n        .camelStringToText()\n        .firstCharUpperCase()\n        .getString();\n\n      const customFieldTypeFormated = new stringMethods(fieldType)\n        .camelStringToText()\n        .getString();\n\n      const optionsMap = () => {\n        return fieldOptions.map((e : string ) => <li key={e}>{e}</li>)\n      }\n        \n      return (\n        <div key={_id}>\n          <p>{customFieldNameFormated}</p>\n          <p>({customFieldTypeFormated})</p>\n          {fieldType === \"select\"\n          ? <ul>{optionsMap()}</ul>\n          : null}\n        </div>\n      );\n    });\n\n  return (\n    <div>\n      <h2>Custom Client Fields</h2>\n      <div>{customFields}</div>\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"]},"metadata":{},"sourceType":"module"}