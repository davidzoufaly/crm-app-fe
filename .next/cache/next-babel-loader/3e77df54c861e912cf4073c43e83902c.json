{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\"; //TODO: SORTOVÁNÍ\n//TODO: TABULKA DYNAMICKÉ ZÁHLAVÍ\n//TODO: PŘIDAT NOVÉHO KLIENTA\n\nconst ClientsList = props => {\n  return props.clients.map(e => __jsx(\"tr\", {\n    key: e._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, e.name), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, e.age), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, e.address), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/clients/[id]\",\n    as: `/clients/${e._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Go to client\")))));\n};\n\nconst Clients = props => {\n  const router = useRouter();\n  const {\n    0: clients,\n    1: setClientList\n  } = useState([]);\n  useEffect(() => {\n    setClientList(props.data);\n  });\n  useEffect(() => {\n    const title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(\"| CRM-APP\");\n    document.title = title.text;\n  }, [router]);\n\n  const reverseOrder = () => {\n    setClientList(clients.reverse());\n  };\n\n  if (clients.length === 0) {\n    return \"Loading\";\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"All clients\"), __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: reverseOrder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Name\")), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Age\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Address\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(ClientsList, {\n    clients: clients,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))));\n};\n\nClients.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: \"http://localhost:8080/api/clients\",\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return {\n    data\n  };\n};\n\nexport default Clients;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients.tsx"],"names":["useState","useEffect","useRouter","Link","axios","Header","ClientsList","props","clients","map","e","_id","name","age","address","Clients","router","setClientList","data","title","stringMethods","pathname","removeSlash","firstCharUpperCase","addStringToEnd","document","text","reverseOrder","reverse","length","getInitialProps","res","method","url","responseType"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAGA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAgB;AAClC,SAAOA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkBC,CAAC,IACxB;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACE,IAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,CAAC,CAACG,GAAP,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,CAAC,CAACI,OAAP,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAA2B,IAAA,EAAE,EAAG,YAAWJ,CAAC,CAACC,GAAI,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CAJF,CADK,CAAP;AAYD,CAbD;;AAeA,MAAMI,OAAO,GAAIR,KAAD,IAAgB;AAC9B,QAAMS,MAAM,GAAGd,SAAS,EAAxB;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUS;AAAV,MAA2BjB,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa,CAACV,KAAK,CAACW,IAAP,CAAb;AACD,GAFQ,CAAT;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,KAAK,GAAG,IAAIC,aAAJ,CAAkBJ,MAAM,CAACK,QAAzB,EACXC,WADW,GAEXC,kBAFW,GAGXC,cAHW,CAGI,WAHJ,CAAd;AAIAC,IAAAA,QAAQ,CAACN,KAAT,GAAiBA,KAAK,CAACO,IAAvB;AACD,GANQ,EAMN,CAACV,MAAD,CANM,CAAT;;AAQA,QAAMW,YAAY,GAAG,MAAM;AACzBV,IAAAA,aAAa,CAACT,OAAO,CAACoB,OAAR,EAAD,CAAb;AACD,GAFD;;AAIA,MAAIpB,OAAO,CAACqB,MAAR,KAAmB,CAAvB,EAA0B;AACxB,WAAO,SAAP;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAQ,IAAA,OAAO,EAAEF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEnB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CAHF,CADF;AAkBD,CAzCD;;AA2CAO,OAAO,CAACe,eAAR,GAA0B,YAAY;AACpC,QAAMC,GAAG,GAAG,MAAM3B,KAAK,CAAC;AACtB4B,IAAAA,MAAM,EAAE,KADc;AAEtBC,IAAAA,GAAG,EAAE,mCAFiB;AAGtBC,IAAAA,YAAY,EAAE;AAHQ,GAAD,CAAvB;AAKA,QAAMhB,IAAI,GAAG,MAAMa,GAAG,CAACb,IAAvB;AACA,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAVD;;AAYA,eAAeH,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\n\n\n//TODO: SORTOVÁNÍ\n//TODO: TABULKA DYNAMICKÉ ZÁHLAVÍ\n//TODO: PŘIDAT NOVÉHO KLIENTA\n\nconst ClientsList = (props: any) => {\n  return props.clients.map(e => (\n    <tr key={e._id}>\n      <td>{e.name}</td>\n      <td>{e.age}</td>\n      <td>{e.address}</td>\n      <td>\n        <Link href=\"/clients/[id]\" as={`/clients/${e._id}`}>\n          <a>Go to client</a>\n        </Link>\n      </td>\n    </tr>\n  ));\n};\n\nconst Clients = (props: any) => {\n  const router = useRouter();\n  const [clients, setClientList] = useState([]);\n\n  useEffect(() => {\n    setClientList(props.data);\n  });\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(\"| CRM-APP\");\n    document.title = title.text;\n  }, [router]);\n\n  const reverseOrder = () => {\n    setClientList(clients.reverse());\n  }\n\n  if (clients.length === 0) {\n    return \"Loading\";\n  }\n  return (\n    <div>\n      <Header />\n      <h1>All clients</h1>\n      <table>\n        <thead>\n          <tr>\n            <th><button onClick={reverseOrder}>Name</button></th>\n            <th>Age</th>\n            <th>Address</th>\n          </tr>\n        </thead>\n        <tbody>\n          <ClientsList clients={clients} />\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nClients.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: \"http://localhost:8080/api/clients\",\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return {\n    data\n  };\n};\n\nexport default Clients;\n"]},"metadata":{},"sourceType":"module"}