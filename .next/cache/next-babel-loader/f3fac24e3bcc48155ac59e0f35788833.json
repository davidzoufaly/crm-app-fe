{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer, useEffect } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\n\nconst WebForm = ({\n  fields\n}) => {\n  const {\n    0: webFields,\n    1: setWebFields\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true\n        }) : field);\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addedToForm = e => {\n    setWebFields({\n      type: \"add\",\n      payload: {\n        fieldName: e.target.value\n      }\n    });\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n  };\n\n  useEffect(() => {\n    console.log(webFields);\n  }, [webFields]);\n  return __jsx(React.Fragment, null, __jsx(WebFormSelect, {\n    webFields: webFields,\n    addedToForm: addedToForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(WebFormList, {\n    webFields: webFields,\n    removeFromList: removeFromList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default WebForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx"],"names":["useReducer","useEffect","WebFormSelect","WebFormList","WebForm","fields","webFields","setWebFields","state","action","type","map","field","fieldName","payload","fieldInForm","addedToForm","e","target","value","removeFromList","id","console","log"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAE9B,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,UAAU,CAAC,CAACQ,KAAD,EAAQC,MAAR,KAAmB;AAC9D,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,KAAL;AACE,eAAOF,KAAK,CAACG,GAAN,CAAUC,KAAK,IACpBA,KAAK,CAACC,SAAN,KAAoBJ,MAAM,CAACK,OAAP,CAAeD,SAAnC,qBACSD,KADT;AACgBG,UAAAA,WAAW,EAAE;AAD7B,aAEIH,KAHC,CAAP;;AAKF;AACE,eAAOJ,KAAP;AARJ;AAUD,GAX2C,EAWzCH,MAXyC,CAA5C;;AAaA,QAAMW,WAAW,GAAGC,CAAC,IAAI;AACvBV,IAAAA,YAAY,CAAC;AACXG,MAAAA,IAAI,EAAE,KADK;AAEXI,MAAAA,OAAO,EAAE;AAAED,QAAAA,SAAS,EAAEI,CAAC,CAACC,MAAF,CAASC;AAAtB;AAFE,KAAD,CAAZ;AAID,GALD;;AAOA,QAAMC,cAAc,GAAGH,CAAC,IAAI;AACxBV,IAAAA,YAAY,CAAC;AACTG,MAAAA,IAAI,EAAE,QADG;AAETI,MAAAA,OAAO,EAAE;AAACD,QAAAA,SAAS,EAAEI,CAAC,CAACC,MAAF,CAASG;AAArB;AAFA,KAAD,CAAZ;AAIH,GALD;;AAOApB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIA,SACE,4BACE,MAAC,aAAD;AAAe,IAAA,SAAS,EAAEA,SAA1B;AAAqC,IAAA,WAAW,EAAEU,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEV,SAAxB;AAAmC,IAAA,cAAc,EAAEc,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAvCD;;AAyCA,eAAehB,OAAf","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\n\nconst WebForm = ({ fields }) => {\n  \n  const [webFields, setWebFields] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true }\n            : field\n        );\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addedToForm = e => {\n    setWebFields({\n      type: \"add\",\n      payload: { fieldName: e.target.value }\n    });\n  };\n\n  const removeFromList = e => {\n      setWebFields({\n          type: \"remove\",\n          payload: {fieldName: e.target.id}\n      })\n  }\n\n  useEffect(() => {\n    console.log(webFields);\n  }, [webFields]);\n\n  return (\n    <>\n      <WebFormSelect webFields={webFields} addedToForm={addedToForm} />\n      <WebFormList webFields={webFields} removeFromList={removeFromList} />\n    </>\n  );\n};\n\nexport default WebForm;\n"]},"metadata":{},"sourceType":"module"}