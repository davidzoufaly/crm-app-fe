{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/client/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport Header from \"../../components/Header\";\nimport SingleClientData from \"../../components/singleClient/SingleClientData\";\nimport ButtonsSingle from \"../../components/singleClient/ButtonsSingle\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport UserContext from \"../../components/UserContext\";\nimport EmailForm from \"../../components/EmailForm\";\nimport languages from \"../../library/languages\";\nimport globalVars from \"../../library/globalVariables\";\nimport { Typography, Box } from \"@material-ui/core\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    formWrapper: _defineProperty({\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      padding: theme.spacing(3),\n      boxShadow: theme.shadows[\"1\"],\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\"\n    }, theme.breakpoints.down(\"sm\"), {\n      width: \"100%\"\n    }),\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  });\n});\n\nvar Client = function Client(_ref) {\n  var clientData = _ref.clientData,\n      fieldsData = _ref.fieldsData;\n  var classes = useStyles({});\n\n  var _useState = useState(clientData),\n      client = _useState[0],\n      setClient = _useState[1];\n\n  var _useState2 = useState(\"\".concat(clientData[\"First name\"], \" \").concat(clientData[\"Last name\"])),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var user = useContext(UserContext);\n\n  var _useState3 = useState(false),\n      initialized = _useState3[0],\n      setInitialized = _useState3[1];\n\n  var _useState4 = useState(false),\n      isEmailCreated = _useState4[0],\n      setIsEmailCreated = _useState4[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    document.title = \"\".concat(name, \" \").concat(globalVars.titleSubText);\n    setInitialized(true);\n  }, [name]);\n  useEffect(function () {\n    user.checkUser();\n  }, []);\n\n  var onSave =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setName(\"\".concat(client[\"First name\"], \" \").concat(client[\"Last name\"]));\n              saveToDb();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSave(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var saveToDb =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios({\n                method: \"put\",\n                url: \"\".concat(globalVars.serverURL, \"/clients/\").concat(router.query.key, \"/\").concat(router.query.id),\n                data: client,\n                responseType: \"json\"\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function saveToDb() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onDelete =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(e) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              _context3.next = 3;\n              return axios({\n                method: \"delete\",\n                url: \"\".concat(globalVars.serverURL, \"/clients/\").concat(router.query.key, \"/\").concat(router.query.id),\n                responseType: \"json\"\n              });\n\n            case 3:\n              res = _context3.sent;\n              _context3.next = 6;\n              return res.data;\n\n            case 6:\n              data = _context3.sent;\n              _context3.next = 9;\n              return data.msg;\n\n            case 9:\n              _context3.t0 = _context3.sent;\n\n              if (!(_context3.t0 === \"Success\")) {\n                _context3.next = 14;\n                break;\n              }\n\n              router.push(\"/clients/\".concat(router.query.key));\n              _context3.next = 15;\n              break;\n\n            case 14:\n              alert(languages.en.somethingWentWrong);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onDelete(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onInputChange = function onInputChange(e) {\n    var _objectSpread2;\n\n    setClient(_objectSpread({}, client, (_objectSpread2 = {}, _defineProperty(_objectSpread2, \"Last modified\", moment().format(\"llll\")), _defineProperty(_objectSpread2, e.target.name, e.target.type === \"number\" ? _parseInt(e.target.value) : e.target.value), _objectSpread2)));\n  };\n\n  var toggleIsEmailCreated = function toggleIsEmailCreated() {\n    setIsEmailCreated(isEmailCreated ? false : true);\n  };\n\n  return !user.user.signedIn && !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h3\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, name), __jsx(Box, {\n    mb: \"1rem\",\n    maxWidth: \"100\",\n    className: \"boxWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(SingleClientData, {\n    fieldsData: fieldsData,\n    client: client,\n    onInputChange: onInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))), __jsx(EmailForm, {\n    to: [client[\"Email\"]],\n    isEmailCreated: isEmailCreated,\n    toggleIsEmailCreated: toggleIsEmailCreated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), __jsx(ButtonsSingle, {\n    onSave: onSave,\n    toggleIsEmailCreated: toggleIsEmailCreated,\n    onDelete: onDelete,\n    isEmailCreated: isEmailCreated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }));\n};\n\nClient.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(context) {\n    var resClient, clientData, resFields, fieldsData;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return axios({\n              method: \"GET\",\n              url: \"\".concat(globalVars.serverURL, \"/clients/\").concat(context.query.key, \"/\").concat(context.query.id),\n              responseType: \"json\"\n            });\n\n          case 2:\n            resClient = _context4.sent;\n            _context4.next = 5;\n            return resClient.data;\n\n          case 5:\n            clientData = _context4.sent;\n            _context4.next = 8;\n            return axios({\n              method: \"GET\",\n              url: \"\".concat(globalVars.serverURL, \"/fields\"),\n              params: {\n                key: context.query.key\n              },\n              responseType: \"json\"\n            });\n\n          case 8:\n            resFields = _context4.sent;\n            _context4.next = 11;\n            return resFields.data;\n\n          case 11:\n            fieldsData = _context4.sent;\n            return _context4.abrupt(\"return\", {\n              clientData: clientData,\n              fieldsData: fieldsData\n            });\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexport default Client;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/client/[id].tsx"],"names":["useRouter","useEffect","useState","useContext","moment","axios","Header","SingleClientData","ButtonsSingle","LoadingSpinner","UserContext","EmailForm","languages","globalVars","Typography","Box","useStyles","makeStyles","theme","createStyles","formWrapper","marginTop","spacing","borderRadius","padding","boxShadow","shadows","backgroundColor","palette","grey","width","breakpoints","down","textField","Client","clientData","fieldsData","classes","client","setClient","name","setName","user","initialized","setInitialized","isEmailCreated","setIsEmailCreated","router","document","title","titleSubText","checkUser","onSave","e","preventDefault","saveToDb","method","url","serverURL","query","key","id","data","responseType","onDelete","res","msg","push","alert","en","somethingWentWrong","onInputChange","format","target","type","value","toggleIsEmailCreated","signedIn","getInitialProps","context","resClient","params","resFields"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useEffect, useState, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport Header from \"../../components/Header\";\nimport SingleClientData from \"../../components/singleClient/SingleClientData\";\nimport ButtonsSingle from \"../../components/singleClient/ButtonsSingle\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport UserContext from \"../../components/UserContext\";\nimport EmailForm from \"../../components/EmailForm\";\nimport languages from \"../../library/languages\";\nimport globalVars from \"../../library/globalVariables\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formWrapper: {\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      padding: theme.spacing(3),\n      boxShadow: theme.shadows[\"1\"],\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\",\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\"\n      }\n    },\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  })\n);\n\nconst Client = ({ clientData, fieldsData }: any) => {\n  const classes = useStyles({});\n  const [client, setClient] = useState(clientData);\n  const [name, setName] = useState(\n    `${clientData[\"First name\"]} ${clientData[\"Last name\"]}`\n  );\n\n  const user = useContext(UserContext);\n  const [initialized, setInitialized] = useState(false);\n  const [isEmailCreated, setIsEmailCreated] = useState(false);\n  const router = useRouter();\n\n  useEffect(() => {\n    document.title = `${name} ${globalVars.titleSubText}`;\n    setInitialized(true);\n  }, [name]);\n\n  useEffect(() => {\n    user.checkUser();\n  }, [])\n\n  const onSave = async e => {\n    e.preventDefault();\n    setName(`${client[\"First name\"]} ${client[\"Last name\"]}`);\n    saveToDb();\n  };\n\n  const saveToDb = async () => {\n    await axios({\n      method: \"put\",\n      url: `${globalVars.serverURL}/clients/${router.query.key}/${router.query.id}`,\n      data: client,\n      responseType: \"json\"\n    });\n  }\n\n  const onDelete = async e => {\n    e.preventDefault();\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/clients/${router.query.key}/${router.query.id}`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    (await data.msg) === \"Success\"\n      ? router.push(`/clients/${router.query.key}`)\n      : alert(languages.en.somethingWentWrong);\n  };\n\n  const onInputChange = e => {\n    setClient({\n      ...client, \n      [\"Last modified\"]: moment().format(\"llll\"),\n      [e.target.name]: e.target.type === \"number\" ? parseInt(e.target.value) : e.target.value\n    });\n  };\n\n  const toggleIsEmailCreated = () => {\n    setIsEmailCreated(isEmailCreated ? false : true);\n  };\n\n  return !user.user.signedIn && !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <Typography component=\"h1\" variant=\"h3\" gutterBottom>{name}</Typography>\n      <Box mb=\"1rem\" maxWidth=\"100\" className=\"boxWrapper\">\n      <form>\n        <SingleClientData\n          fieldsData={fieldsData}\n          client={client}\n          onInputChange={onInputChange}\n        />\n      </form>\n      </Box>\n        <EmailForm\n          to={[client[\"Email\"]]}\n          isEmailCreated={isEmailCreated}\n          toggleIsEmailCreated={toggleIsEmailCreated}\n        />\n        <ButtonsSingle\n          onSave={onSave}\n          toggleIsEmailCreated={toggleIsEmailCreated}\n          onDelete={onDelete}\n          isEmailCreated={isEmailCreated}\n        />\n    </div>\n  );\n};\n\nClient.getInitialProps = async (context: any) => {\n  const resClient = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/clients/${context.query.key}/${context.query.id}`,\n    responseType: \"json\"\n  });\n  const clientData = await resClient.data;\n\n  const resFields = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/fields`,\n    params: {key: context.query.key},\n    responseType: \"json\"\n  });\n  const fieldsData = await resFields.data;\n\n  return { clientData, fieldsData };\n};\n\nexport default Client;\n\n"]},"metadata":{},"sourceType":"module"}