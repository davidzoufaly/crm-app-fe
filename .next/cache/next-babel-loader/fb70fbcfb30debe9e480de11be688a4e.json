{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport Button from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nvar LoginForm = function LoginForm() {\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var userContext = useContext(UserContext);\n\n  var onChange = function onChange(e) {\n    e.target.name === \"username\" ? setUser(_objectSpread({}, user, {\n      username: e.target.value\n    })) : setUser(_objectSpread({}, user, {\n      password: e.target.value\n    }));\n  };\n\n  var onLogin =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var userRes, userData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios({\n                method: \"POST\",\n                data: user,\n                url: \"\".concat(globalVars.serverURL, \"/users/authenticate-user\"),\n                responseType: \"json\"\n              });\n\n            case 2:\n              userRes = _context.sent;\n              _context.next = 5;\n              return userRes.data;\n\n            case 5:\n              userData = _context.sent;\n\n              if (userData.msg === \"Success\") {\n                userContext.setUser(userData.key);\n              } else {\n                alert(languages.en.somethingWentWrong);\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    gutterBottom: true\n  }, new stringMethods(languages.en.login).firstCharUpperCase().getString()), __jsx(\"form\", null, __jsx(TextInput, {\n    onChange: onChange,\n    type: \"text\",\n    value: user.username,\n    text: \"username\",\n    title: new stringMethods(languages.en.username).firstCharUpperCase().getString()\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: user.password,\n    text: \"password\",\n    title: languages.en.password\n  }), __jsx(Box, {\n    mt: \"2rem\",\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  }, __jsx(Button, {\n    onClick: onLogin,\n    text: languages.en.login,\n    variant: \"contained\"\n  }))));\n};\n\nexport default LoginForm;","map":null,"metadata":{},"sourceType":"module"}