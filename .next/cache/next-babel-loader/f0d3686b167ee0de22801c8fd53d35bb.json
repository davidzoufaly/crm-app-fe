{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/Header.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport EmailIcon from '@material-ui/icons/Email';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { Grid, Button, Toolbar, AppBar, Box, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    menuButton: {\n      marginRight: theme.spacing(2),\n      color: \"white\"\n    },\n    title: {\n      flexGrow: 1\n    },\n    toolBar: {\n      padding: 0\n    },\n    mobilMenuButton: _defineProperty({\n      color: \"white\",\n      display: \"none\"\n    }, theme.breakpoints.down(\"sm\"), {\n      display: \"block\"\n    }),\n    menuGrid: _defineProperty({\n      flexDirection: \"row\"\n    }, theme.breakpoints.down(\"sm\"), {\n      flexDireciton: \"column\"\n    })\n  });\n});\n\nvar Header = function Header() {\n  var classes = useStyles({});\n  var user = useContext(UserContext);\n\n  var _useState = useState(false),\n      mobilMenu = _useState[0],\n      setMobilMenu = _useState[1];\n\n  var toggleMenu = function toggleMenu() {\n    console.log(mobilMenu);\n    setMobilMenu(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  return __jsx(AppBar, {\n    position: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    className: classes.toolBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Box, {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: toggleMenu,\n    className: classes.mobilMenuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, !mobilMenu ? __jsx(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }) : __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), __jsx(Box, {\n    component: \"nav\",\n    display: mobilMenu ? \"block\" : \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/dashboard/[key]\",\n    as: \"/dashboard/\".concat(user.user.userkey),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, languages.en.dashboard))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/clients/[key]\",\n    as: \"/clients/\".concat(user.user.userkey),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(PeopleAltIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, languages.en.clients))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/emails/[key]\",\n    as: \"/emails/\".concat(user.user.userkey),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(EmailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, languages.en.emails))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/settings/[key]\",\n    as: \"/settings/\".concat(user.user.userkey),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, languages.en.settings)))))), __jsx(Button, {\n    className: classes.menuButton,\n    onClick: function onClick() {\n      return user.logoutUser();\n    },\n    startIcon: __jsx(ExitToAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, languages.en.logout))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/Header.tsx"],"names":["useContext","useState","Link","languages","UserContext","createStyles","makeStyles","Container","DashboardIcon","PeopleAltIcon","EmailIcon","SettingsIcon","ExitToAppIcon","Grid","Button","Toolbar","AppBar","Box","IconButton","MenuIcon","CloseIcon","useStyles","theme","menuButton","marginRight","spacing","color","title","flexGrow","toolBar","padding","mobilMenuButton","display","breakpoints","down","menuGrid","flexDirection","flexDireciton","Header","classes","user","mobilMenu","setMobilMenu","toggleMenu","console","log","prevState","userkey","en","dashboard","clients","emails","settings","logoutUser","logout"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport EmailIcon from '@material-ui/icons/Email';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { Grid, Button, Toolbar, AppBar, Box, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    menuButton: {\n      marginRight: theme.spacing(2),\n      color: \"white\"\n    },\n    title: {\n      flexGrow: 1\n    },\n    toolBar: {\n      padding: 0,\n    },\n    mobilMenuButton: {\n      color: \"white\",\n      display: \"none\", [theme.breakpoints.down(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    menuGrid: {\n      flexDirection: \"row\", [theme.breakpoints.down(\"sm\")] : {\n        flexDireciton: \"column\"\n      }\n    }\n  })\n);\n\nconst Header = () => {\n  const classes = useStyles({})\n  const user = useContext(UserContext);\n  const [mobilMenu, setMobilMenu] = useState(false)\n\n  const toggleMenu = () => {\n    console.log(mobilMenu);\n      setMobilMenu(prevState => !prevState)\n  }\n\n  return (\n    <AppBar position=\"fixed\">\n      <Container maxWidth=\"lg\">\n        <Toolbar className={classes.toolBar}>\n          <Box display=\"flex\" width=\"100%\" justifyContent=\"space-between\">\n            <IconButton onClick={toggleMenu} className={classes.mobilMenuButton}>\n                {!mobilMenu ? <MenuIcon/> : <CloseIcon/>}\n            </IconButton>\n            <Box component=\"nav\" display={mobilMenu ? \"block\" : \"none\"}>\n              <Grid container direction={\"column\"}>\n                <Grid item>\n              <Link\n                href=\"/dashboard/[key]\"\n                as={`/dashboard/${user.user.userkey}`}\n              >\n                <Button startIcon={<DashboardIcon />} className={classes.menuButton}>\n                  {languages.en.dashboard}\n                </Button>\n              </Link>\n              </Grid>\n              <Grid item>\n              <Link href=\"/clients/[key]\" as={`/clients/${user.user.userkey}`}>\n                <Button startIcon={<PeopleAltIcon />} className={classes.menuButton}>\n                  {languages.en.clients}\n                </Button>\n              </Link>\n              </Grid>\n              <Grid item>\n              <Link href=\"/emails/[key]\" as={`/emails/${user.user.userkey}`}>\n                <Button startIcon={<EmailIcon />} className={classes.menuButton}>\n                  {languages.en.emails}\n                </Button>\n              </Link>\n              </Grid>\n              <Grid item>\n              <Link\n                href=\"/settings/[key]\"\n                as={`/settings/${user.user.userkey}`}\n              >\n                <Button startIcon={<SettingsIcon />} className={classes.menuButton}>\n                  {languages.en.settings}\n                </Button>\n              </Link>\n              </Grid>\n              </Grid>\n            </Box>\n          </Box>\n          <Button\n            className={classes.menuButton}\n            onClick={() => user.logoutUser()}\n            startIcon={<ExitToAppIcon/>}\n          >\n            {languages.en.logout}\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}