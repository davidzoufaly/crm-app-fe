{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n\nconst webFormReducer = (state, action) => {\n  switch (action.type) {\n    case \"add\":\n      return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n        fieldInForm: true,\n        order: action.payload.counter\n      }) : field);\n\n    case \"addVisibleSelect\":\n      return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n        fieldInForm: true,\n        fieldFormVisible: true,\n        pause: false,\n        order: action.payload.counter\n      }) : field);\n\n    case \"addNotVisibleValue\":\n      return state.map(field => field.pause ? _objectSpread({}, field, {\n        fieldFormVisible: false\n      }) : field);\n\n    case \"addHiddenSelect\":\n      return state.map(field => field.pause ? _objectSpread({}, field, {\n        fieldInForm: true,\n        pause: false,\n        order: action.payload.counter,\n        fieldOptions: field.fieldOptions.map(option => option.value === action.payload.optionValue ? _objectSpread({}, option, {\n          preselected: true\n        }) : option)\n      }) : field);\n\n    case \"pauseSelect\":\n      return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n        pause: true\n      }) : field);\n\n    case \"remove\":\n      return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n        fieldInForm: false,\n        fieldFormVisible: null,\n        fieldOptions: field.fieldOptions.map(option => option.preselected ? _objectSpread({}, option, {\n          preselected: null\n        }) : option)\n      }) : field);\n\n    default:\n      throw new Error();\n  }\n};\n\nexport default webFormReducer;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/reducers/webFormReducer.tsx"],"names":["webFormReducer","state","action","type","map","field","fieldName","payload","fieldInForm","order","counter","fieldFormVisible","pause","fieldOptions","option","value","optionValue","preselected","Error"],"mappings":";;AAAA,MAAMA,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAOF,KAAK,CAACG,GAAN,CAAUC,KAAK,IACpBA,KAAK,CAACC,SAAN,KAAoBJ,MAAM,CAACK,OAAP,CAAeD,SAAnC,qBACSD,KADT;AACgBG,QAAAA,WAAW,EAAE,IAD7B;AACmCC,QAAAA,KAAK,EAAEP,MAAM,CAACK,OAAP,CAAeG;AADzD,WAEIL,KAHC,CAAP;;AAKF,SAAK,kBAAL;AACE,aAAOJ,KAAK,CAACG,GAAN,CAAUC,KAAK,IACpBA,KAAK,CAACC,SAAN,KAAoBJ,MAAM,CAACK,OAAP,CAAeD,SAAnC,qBAESD,KAFT;AAGMG,QAAAA,WAAW,EAAE,IAHnB;AAIMG,QAAAA,gBAAgB,EAAE,IAJxB;AAKMC,QAAAA,KAAK,EAAE,KALb;AAMMH,QAAAA,KAAK,EAAEP,MAAM,CAACK,OAAP,CAAeG;AAN5B,WAQIL,KATC,CAAP;;AAWF,SAAK,oBAAL;AACE,aAAOJ,KAAK,CAACG,GAAN,CAAUC,KAAK,IACpBA,KAAK,CAACO,KAAN,qBAESP,KAFT;AAGMM,QAAAA,gBAAgB,EAAE;AAHxB,WAKIN,KANC,CAAP;;AAQF,SAAK,iBAAL;AACE,aAAOJ,KAAK,CAACG,GAAN,CAAUC,KAAK,IACpBA,KAAK,CAACO,KAAN,qBAESP,KAFT;AAGMG,QAAAA,WAAW,EAAE,IAHnB;AAIMI,QAAAA,KAAK,EAAE,KAJb;AAKMH,QAAAA,KAAK,EAAEP,MAAM,CAACK,OAAP,CAAeG,OAL5B;AAMMG,QAAAA,YAAY,EAAER,KAAK,CAACQ,YAAN,CAAmBT,GAAnB,CAAuBU,MAAM,IACzCA,MAAM,CAACC,KAAP,KAAiBb,MAAM,CAACK,OAAP,CAAeS,WAAhC,qBACSF,MADT;AACiBG,UAAAA,WAAW,EAAE;AAD9B,aAEIH,MAHQ;AANpB,WAYIT,KAbC,CAAP;;AAeF,SAAK,aAAL;AACE,aAAOJ,KAAK,CAACG,GAAN,CAAUC,KAAK,IACpBA,KAAK,CAACC,SAAN,KAAoBJ,MAAM,CAACK,OAAP,CAAeD,SAAnC,qBACSD,KADT;AACgBO,QAAAA,KAAK,EAAE;AADvB,WAEIP,KAHC,CAAP;;AAMF,SAAK,QAAL;AACE,aAAOJ,KAAK,CAACG,GAAN,CAAUC,KAAK,IACpBA,KAAK,CAACC,SAAN,KAAoBJ,MAAM,CAACK,OAAP,CAAeD,SAAnC,qBAESD,KAFT;AAGMG,QAAAA,WAAW,EAAE,KAHnB;AAIMG,QAAAA,gBAAgB,EAAE,IAJxB;AAKME,QAAAA,YAAY,EAAER,KAAK,CAACQ,YAAN,CAAmBT,GAAnB,CAAuBU,MAAM,IACzCA,MAAM,CAACG,WAAP,qBAA0BH,MAA1B;AAAkCG,UAAAA,WAAW,EAAE;AAA/C,aAAwDH,MAD5C;AALpB,WASIT,KAVC,CAAP;;AAYF;AACE,YAAM,IAAIa,KAAJ,EAAN;AAjEJ;AAmED,CApEH;;AAsEE,eAAelB,cAAf","sourcesContent":["const webFormReducer = (state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true, order: action.payload.counter }\n            : field\n        );\n      case \"addVisibleSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? {\n                ...field,\n                fieldInForm: true,\n                fieldFormVisible: true,\n                pause: false,\n                order: action.payload.counter\n              }\n            : field\n        );\n      case \"addNotVisibleValue\":\n        return state.map(field =>\n          field.pause\n            ? {\n                ...field,\n                fieldFormVisible: false\n              }\n            : field\n        );\n      case \"addHiddenSelect\":\n        return state.map(field =>\n          field.pause\n            ? {\n                ...field,\n                fieldInForm: true,\n                pause: false,\n                order: action.payload.counter,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.value === action.payload.optionValue\n                    ? { ...option, preselected: true }\n                    : option\n                )\n              }\n            : field\n        );\n      case \"pauseSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, pause: true }\n            : field\n        );\n  \n      case \"remove\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? {\n                ...field,\n                fieldInForm: false,\n                fieldFormVisible: null,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.preselected ? { ...option, preselected: null } : option\n                )\n              }\n            : field\n        );\n      default:\n        throw new Error();\n    }\n  };\n\n  export default webFormReducer;"]},"metadata":{},"sourceType":"module"}