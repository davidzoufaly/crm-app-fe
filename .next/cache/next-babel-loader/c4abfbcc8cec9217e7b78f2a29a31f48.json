{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/EmailSettings.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport { useState, useRef, useContext } from \"react\";\nimport UserContext from \"../UserContext\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nvar EmailSettings = function EmailSettings(_ref) {\n  var username = _ref.username,\n      pass = _ref.pass;\n\n  var _useState = useState({\n    username: username,\n    pass: pass\n  }),\n      emailSettings = _useState[0],\n      setEmailSettings = _useState[1];\n\n  var _useState2 = useState(false),\n      isPassShown = _useState2[0],\n      setIsPassShown = _useState2[1];\n\n  var passEl = useRef(null);\n  var user = useContext(UserContext);\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return axios({\n                method: \"post\",\n                url: \"\".concat(globalVars.serverURL, \"/emails\"),\n                params: {\n                  key: user.user.userkey\n                },\n                data: {\n                  username: username,\n                  pass: pass\n                },\n                responseType: \"json\"\n              });\n\n            case 3:\n              res = _context.sent;\n              data = res.data;\n\n              if (data === \"Success\") {\n                alert(languages.en.emailSettingsUpdatedSuccess);\n              } else {\n                alert(languages.en.somethingWentWrong);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var togglePass = function togglePass(e) {\n    e.preventDefault();\n\n    if (!isPassShown) {\n      passEl.current.type = \"text\";\n      setIsPassShown(true);\n    } else {\n      passEl.current.type = \"password\";\n      setIsPassShown(false);\n    }\n  };\n\n  var onChange = function onChange(e) {\n    setEmailSettings(_objectSpread({}, emailSettings, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, languages.en.emailAccount), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"acc-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, languages.en.email), __jsx(\"input\", {\n    id: \"acc-name\",\n    type: \"text\",\n    name: \"username\",\n    autoComplete: \"email\",\n    value: username,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"acc-pass\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, languages.en.password), __jsx(\"input\", {\n    id: \"acc-pass\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    name: \"pass\",\n    ref: passEl,\n    value: pass,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: togglePass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, isPassShown ? languages.en.hidePassword : languages.en.showPassword), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, languages.en.save)));\n};\n\nexport default EmailSettings;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/EmailSettings.tsx"],"names":["axios","useState","useRef","useContext","UserContext","globalVars","languages","Button","Typography","EmailSettings","username","pass","emailSettings","setEmailSettings","isPassShown","setIsPassShown","passEl","user","onSubmit","e","preventDefault","method","url","serverURL","params","key","userkey","data","responseType","res","alert","en","emailSettingsUpdatedSuccess","somethingWentWrong","togglePass","current","type","onChange","target","name","value","emailAccount","email","password","hidePassword","showPassword","save"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState, useRef, useContext, useEffect } from \"react\";\nimport UserContext from \"../UserContext\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst EmailSettings = ({username, pass}: any) => {\n  const [emailSettings, setEmailSettings] = useState({username, pass});\n  const [isPassShown, setIsPassShown] = useState(false);\n  const passEl = useRef(null);\n  const user = useContext(UserContext);\n\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    const res = await axios({\n      method: \"post\",\n      url: `${globalVars.serverURL}/emails`,\n      params: {key: user.user.userkey},\n      data: { username, pass },\n      responseType: \"json\"\n    });\n    const data = res.data;\n    if (data === \"Success\") {\n      alert(languages.en.emailSettingsUpdatedSuccess);\n    } else {\n      alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  const togglePass = e => {\n    e.preventDefault();\n    if(!isPassShown) {\n      passEl.current.type = \"text\";\n      setIsPassShown(true);\n    } else {\n      passEl.current.type = \"password\";\n      setIsPassShown(false);\n    }\n  };\n\n  const onChange = e => {\n    setEmailSettings({ ...emailSettings, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        {languages.en.emailAccount}\n      </Typography>\n      <form onSubmit={onSubmit}>\n        <label htmlFor=\"acc-name\">{languages.en.email}</label>\n        <input\n          id=\"acc-name\"\n          type=\"text\"\n          name=\"username\"\n          autoComplete=\"email\"\n          value={username}\n          onChange={onChange}\n        />\n        <label htmlFor=\"acc-pass\">{languages.en.password}</label>\n        <input\n          id=\"acc-pass\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          name=\"pass\"\n          ref={passEl}\n          value={pass}\n          onChange={onChange}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={togglePass}\n        >\n          {isPassShown ? languages.en.hidePassword : languages.en.showPassword}\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          {languages.en.save}\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default EmailSettings;\n"]},"metadata":{},"sourceType":"module"}