{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/clientTable/TableBody.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport uniqid from \"uniqid\"; //TODO Filtrují se i polé které neexistujou na straně body\n\nvar TableBody = function TableBody(_ref) {\n  var clients = _ref.clients,\n      reverse = _ref.reverse,\n      sort = _ref.sort,\n      fields = _ref.fields;\n  reverse ? clients.sort(function (a, b) {\n    return b[sort] - a[sort];\n  }) : clients.sort(function (a, b) {\n    return a[sort] - b[sort];\n  });\n\n  if (reverse) {\n    fields.some(function (e) {\n      return e.fieldName === sort && e.fieldType === \"number\";\n    });\n  }\n\n  var fieldNames = [];\n  fields.forEach(function (e) {\n    return fieldNames.push(e.fieldName, e.fieldType);\n  });\n  var tableClients = clients.map(function (e) {\n    var tableItem = function tableItem() {\n      var items = [];\n\n      for (var key in e) {\n        //show only existing fields clients data\n        e[key] !== e._id && fieldNames.includes(key) ? items.push(__jsx(\"td\", {\n          key: uniqid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, e[key])) : null;\n      }\n\n      return items;\n    };\n\n    return __jsx(\"tr\", {\n      key: e._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: e._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), tableItem(), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/clients/[id]\",\n      as: \"/clients/\".concat(e._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Go to client\"))));\n  });\n  return tableClients;\n};\n\nexport default TableBody;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/clientTable/TableBody.tsx"],"names":["Link","uniqid","TableBody","clients","reverse","sort","fields","a","b","some","e","fieldName","fieldType","fieldNames","forEach","push","tableClients","map","tableItem","items","key","_id","includes"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AASA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA+C;AAAA,MAA5CC,OAA4C,QAA5CA,OAA4C;AAAA,MAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAC/DF,EAAAA,OAAO,GACHD,OAAO,CAACE,IAAR,CAAa,UAACE,CAAD,EAASC,CAAT;AAAA,WAAqBA,CAAC,CAACH,IAAD,CAAD,GAAUE,CAAC,CAACF,IAAD,CAAhC;AAAA,GAAb,CADG,GAEHF,OAAO,CAACE,IAAR,CAAa,UAACE,CAAD,EAASC,CAAT;AAAA,WAAqBD,CAAC,CAACF,IAAD,CAAD,GAAUG,CAAC,CAACH,IAAD,CAAhC;AAAA,GAAb,CAFJ;;AAIA,MAAID,OAAJ,EAAa;AACXE,IAAAA,MAAM,CAACG,IAAP,CAAY,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,SAAF,KAAgBN,IAAhB,IAAwBK,CAAC,CAACE,SAAF,KAAgB,QAA5C;AAAA,KAAb;AAED;;AAED,MAAMC,UAAU,GAAG,EAAnB;AACAP,EAAAA,MAAM,CAACQ,OAAP,CAAe,UAACJ,CAAD;AAAA,WAAaG,UAAU,CAACE,IAAX,CAAgBL,CAAC,CAACC,SAAlB,EAA6BD,CAAC,CAACE,SAA/B,CAAb;AAAA,GAAf;AAEA,MAAMI,YAAY,GAAGb,OAAO,CAACc,GAAR,CAAY,UAACP,CAAD,EAAY;AAC3C,QAAMQ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,GAAT,IAAgBV,CAAhB,EAAmB;AACjB;AACAA,QAAAA,CAAC,CAACU,GAAD,CAAD,KAAWV,CAAC,CAACW,GAAb,IAAoBR,UAAU,CAACS,QAAX,CAAoBF,GAApB,CAApB,GAA+CD,KAAK,CAACJ,IAAN,CAAW;AAAI,UAAA,GAAG,EAAEd,MAAM,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBS,CAAC,CAACU,GAAD,CAArB,CAAX,CAA/C,GAA8F,IAA9F;AACD;;AACD,aAAOD,KAAP;AACD,KAPD;;AASA,WACE;AAAI,MAAA,GAAG,EAAET,CAAC,CAACW,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAEX,CAAC,CAACW,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADF,EAEGH,SAAS,EAFZ,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAA2B,MAAA,EAAE,qBAAcR,CAAC,CAACW,GAAhB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CAHF,CADF;AAWD,GArBoB,CAArB;AAsBA,SAAOL,YAAP;AACD,CApCD;;AAsCA,eAAed,SAAf","sourcesContent":["import Link from \"next/link\";\nimport uniqid from \"uniqid\";\n\n//TODO Filtrují se i polé které neexistujou na straně body\n\ninterface IProps {\n  clients: any;\n  reverse: boolean;\n  sort: string;\n  fields: any;\n}\n\nconst TableBody = ({ clients, reverse, sort, fields}: IProps) => {\n  reverse\n    ? clients.sort((a: any, b: any) => (b[sort] - a[sort]))\n    : clients.sort((a: any, b: any) => (a[sort] - b[sort]));\n\n  if (reverse) {\n    fields.some(e => e.fieldName === sort && e.fieldType === \"number\");\n    \n  }\n  \n  const fieldNames = [];\n  fields.forEach((e : any) => fieldNames.push(e.fieldName, e.fieldType));\n\n  const tableClients = clients.map((e: any) => {\n    const tableItem = () => {\n      let items = [];\n      for (let key in e) {\n        //show only existing fields clients data\n        e[key] !== e._id && fieldNames.includes(key) ? items.push(<td key={uniqid()}>{e[key]}</td>) : null;\n      }\n      return items;\n    };\n\n    return (\n      <tr key={e._id}>\n        <td><input type=\"checkbox\" id={e._id}/></td>\n        {tableItem()}\n        <td>\n          <Link href=\"/clients/[id]\" as={`/clients/${e._id}`}>\n            <a>Go to client</a>\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n  return tableClients;\n};\n\nexport default TableBody;\n"]},"metadata":{},"sourceType":"module"}