{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({\n  fields,\n  refreshList\n}) => {\n  const {\n    0: editedField,\n    1: setEditedField\n  } = useState({\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false,\n    fieldOptions: []\n  });\n\n  const saveEditedField = async () => {\n    const res = await axios({\n      method: \"post\",\n      url: `${globalVars.serverURL}/fields/`,\n      data: editedField,\n      responseType: \"json\"\n    });\n    const data = await res.data; // data.msg === \"Success\" ? changeDisplayComponent() : null;\n\n    console.log(data);\n    refreshList();\n  };\n\n  const deleteField = async event => {\n    const id = event.target.id;\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const onNameChange = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldName: event.target.value\n    }));\n    console.log(editedField);\n  };\n\n  const onSelectChange = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    }));\n  };\n\n  const handleOptionSpawn = () => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: [...editedField.fieldOptions, {\n        id: uniqid(),\n        value: \"\"\n      }]\n    }));\n  };\n\n  const onOptionChange = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(e => event.target.id === e.id ? e.value = event.target.value : e)\n    }));\n  };\n\n  const onOptionDelete = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(e => event.target.id !== e.id ? e : null)\n    }));\n  };\n\n  const setupEditedField = obj => {\n    setEditedField(obj);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Custom Client Fields\"), __jsx(CustomFieldsList, {\n    deleteField: deleteField,\n    fields: fields,\n    setupEditedField: setupEditedField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(AddOrEditField, {\n    editedField: editedField,\n    refreshList: refreshList,\n    saveEditedField: saveEditedField,\n    onNameChange: onNameChange,\n    onSelectChange: onSelectChange,\n    handleOptionSpawn: handleOptionSpawn,\n    onOptionChange: onOptionChange,\n    onOptionDelete: onOptionDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }));\n};\n\nexport default CustomClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx"],"names":["useState","AddOrEditField","axios","globalVars","uniqid","CustomFieldsList","CustomClientFields","fields","refreshList","editedField","setEditedField","fieldName","fieldType","fieldPermanent","fieldOptions","saveEditedField","res","method","url","serverURL","data","responseType","console","log","deleteField","event","id","target","resData","msg","onNameChange","value","onSelectChange","options","selectedIndex","handleOptionSpawn","onOptionChange","filter","e","onOptionDelete","setupEditedField","obj"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({ fields, refreshList }: any) => {\n\n  const [editedField, setEditedField] = useState<any>({\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false,\n    fieldOptions : []\n  });\n\n  const saveEditedField = async () => {\n    const res = await axios({\n      method: \"post\",\n      url: `${globalVars.serverURL}/fields/`,\n      data: editedField,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    // data.msg === \"Success\" ? changeDisplayComponent() : null;\n    console.log(data);\n    refreshList();\n  };\n\n  const deleteField = async (event: any) => {\n    const id = event.target.id;\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const onNameChange = (event: any) => {\n    setEditedField({ ...editedField, fieldName: event.target.value });\n    console.log(editedField);\n  };\n\n  const onSelectChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    });\n  };\n\n  const handleOptionSpawn = () => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: [...editedField.fieldOptions, { id: uniqid(), value: \"\" }]\n    });\n  };\n\n  const onOptionChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id === e.id ? (e.value = event.target.value) : e\n      )\n    });\n  };\n\n  const onOptionDelete = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id !== e.id ? e : null\n      )\n    });\n  };\n\n  const setupEditedField = (obj ? : any) => {\n    setEditedField(obj);\n  }\n\n  return (\n    <div>\n      <h2>Custom Client Fields</h2>\n      <CustomFieldsList deleteField={deleteField} fields={fields} setupEditedField={setupEditedField} />\n      <AddOrEditField\n        editedField={editedField}\n        refreshList={refreshList}\n        saveEditedField={saveEditedField}\n        onNameChange={onNameChange}\n        onSelectChange={onSelectChange}\n        handleOptionSpawn={handleOptionSpawn}\n        onOptionChange={onOptionChange}\n        onOptionDelete={onOptionDelete}\n      />\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"]},"metadata":{},"sourceType":"module"}