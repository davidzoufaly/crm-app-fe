{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport ShowRecordsNumber from \"../components/ShowRecordsNumber\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport languages from \"../library/languages\";\n\nvar Dashboard = function Dashboard(_ref) {\n  var clientData = _ref.clientData,\n      fieldData = _ref.fieldData,\n      emailsData = _ref.emailsData,\n      Context = _ref.Context;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      initialized = _useState[0],\n      setInitialized = _useState[1];\n\n  var context = useContext(Context);\n  useEffect(function () {\n    var title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n  }, [router]);\n  var h1 = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString();\n  return !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, h1), __jsx(ShowRecordsNumber, {\n    data: context.clientData,\n    string: languages.en.clientsSaved,\n    buttonString: languages.en.clients,\n    link: \"/clients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(ShowRecordsNumber, {\n    data: fieldData,\n    string: languages.en.fieldsSaved,\n    buttonString: languages.en.customClientFields,\n    link: \"/settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(ShowRecordsNumber, {\n    data: emailsData,\n    string: languages.en.emailsSent,\n    buttonString: languages.en.emails,\n    link: \"/emails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nDashboard.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var resClientCount, clientData, resFieldsData, fieldData, resEmailsCount, emailsData;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios({\n            method: \"GET\",\n            url: \"\".concat(globalVars.serverURL, \"/clients/count\"),\n            responseType: \"json\"\n          });\n\n        case 2:\n          resClientCount = _context.sent;\n          _context.next = 5;\n          return resClientCount.data;\n\n        case 5:\n          clientData = _context.sent;\n          _context.next = 8;\n          return axios({\n            method: \"GET\",\n            url: \"\".concat(globalVars.serverURL, \"/fields/count\"),\n            responseType: \"json\"\n          });\n\n        case 8:\n          resFieldsData = _context.sent;\n          _context.next = 11;\n          return resFieldsData.data;\n\n        case 11:\n          fieldData = _context.sent;\n          _context.next = 14;\n          return axios({\n            method: \"GET\",\n            url: \"\".concat(globalVars.serverURL, \"/emails/count\"),\n            responseType: \"json\"\n          });\n\n        case 14:\n          resEmailsCount = _context.sent;\n          _context.next = 17;\n          return resEmailsCount.data;\n\n        case 17:\n          emailsData = _context.sent;\n          return _context.abrupt(\"return\", {\n            clientData: clientData,\n            fieldData: fieldData,\n            emailsData: emailsData\n          });\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Dashboard;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx"],"names":["Header","axios","useEffect","useState","useContext","useRouter","ShowRecordsNumber","LoadingSpinner","globalVars","stringMethods","languages","Dashboard","clientData","fieldData","emailsData","Context","router","initialized","setInitialized","context","title","pathname","removeSlash","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","h1","en","clientsSaved","clients","fieldsSaved","customClientFields","emailsSent","emails","getInitialProps","method","url","serverURL","responseType","resClientCount","data","resFieldsData","resEmailsCount"],"mappings":"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","sourcesContent":["import Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport ShowRecordsNumber from \"../components/ShowRecordsNumber\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport languages from \"../library/languages\";\n\nconst Dashboard = ({ clientData, fieldData, emailsData, Context }: any) => {\n  const router = useRouter();\n  const [initialized, setInitialized] = useState(false);\n  const context = useContext(Context);\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  return !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <h1>{h1}</h1>\n      <ShowRecordsNumber\n        data={context.clientData}\n        string={languages.en.clientsSaved}\n        buttonString={languages.en.clients}\n        link={\"/clients\"}\n      />\n      <ShowRecordsNumber\n        data={fieldData}\n        string={languages.en.fieldsSaved}\n        buttonString={languages.en.customClientFields}\n        link={\"/settings\"}\n      />\n      <ShowRecordsNumber\n        data={emailsData}\n        string={languages.en.emailsSent}\n        buttonString={languages.en.emails}\n        link={\"/emails\"}\n      />\n    </div>\n  );\n};\n\nDashboard.getInitialProps = async () => {\n  const resClientCount = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/clients/count`,\n    responseType: \"json\"\n  });\n  const clientData = await resClientCount.data;\n\n  const resFieldsData = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/fields/count`,\n    responseType: \"json\"\n  });\n  const fieldData = await resFieldsData.data;\n\n  const resEmailsCount = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/emails/count`,\n    responseType: \"json\"\n  })\n  const emailsData = await resEmailsCount.data;\n\n\n  return { clientData, fieldData, emailsData };\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}