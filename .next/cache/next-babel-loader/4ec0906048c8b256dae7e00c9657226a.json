{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport globalVars from \"../../library/globalVariables\";\nimport { MenuItem, Select, InputLabel, FormControl, TextField, Grid } from \"@material-ui/core\";\n\nconst ClientForm = ({\n  fields,\n  onChange,\n  newClient\n}) => {\n  const inputs = fields.map(e => {\n    if (e.fieldName !== globalVars.permanentFields.dateAdded && e.fieldName !== globalVars.permanentFields.lastModified) {\n      if (e.fieldType === \"text\") {\n        return __jsx(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          key: e.fieldName\n        }, __jsx(TextField, {\n          type: \"text\",\n          key: e.fieldName,\n          label: e.fieldName,\n          id: e.fieldName,\n          autoFocus: e.fieldName === globalVars.permanentFields.fistName,\n          name: e.fieldName,\n          margin: \"normal\",\n          fullWidth: true,\n          onChange: onChange,\n          defaultValue: newClient[e.fieldName]\n        }));\n      } else if (e.fieldType === \"number\") {\n        return __jsx(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          key: e.fieldName\n        }, __jsx(TextField, {\n          id: e.fieldName,\n          key: e.fieldName,\n          label: e.fieldName,\n          margin: \"normal\",\n          fullWidth: true,\n          type: \"number\",\n          name: e.fieldName,\n          onChange: onChange,\n          defaultValue: newClient[e.fieldName]\n        }));\n      } else if (e.fieldType === \"select\") {\n        return __jsx(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          key: e.fieldName\n        }, __jsx(FormControl, {\n          margin: \"normal\",\n          fullWidth: true\n        }, __jsx(InputLabel, {\n          htmlFor: e.fieldName\n        }, e.fieldName), __jsx(Select, {\n          name: e.fieldName,\n          id: e.fieldName,\n          onChange: onChange,\n          value: newClient[e.fieldName] || \"\"\n        }, __jsx(MenuItem, {\n          value: \"\",\n          key: globalVars.blankOption\n        }, globalVars.blankOption), e.fieldOptions.map(e => {\n          return __jsx(MenuItem, {\n            value: e.value,\n            key: e.id\n          }, e.value);\n        }))));\n      }\n    }\n  });\n  return __jsx(Grid, {\n    container: true,\n    spacing: 3\n  }, inputs);\n};\n\nexport default ClientForm;","map":null,"metadata":{},"sourceType":"module"}