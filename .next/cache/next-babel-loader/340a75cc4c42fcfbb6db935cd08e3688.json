{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport UsernameInput from \"./UsernameInput\";\nimport PasswordInput from \"./PasswordInput\";\nimport LoginButton from \"./LoginButton\";\nimport globalVars from \"../../library/globalVariables\";\n\nconst LoginForm = () => {\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const userContext = useContext(UserContext);\n\n  const onChange = e => {\n    e.target.name === \"username\" ? setUser(_objectSpread({}, user, {\n      username: e.target.value\n    })) : setUser(_objectSpread({}, user, {\n      password: e.target.value\n    }));\n  };\n\n  const onLogin = async () => {\n    const userRes = await axios({\n      method: \"POST\",\n      url: `${globalVars.serverURL}/users`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n\n    if (userData.msg === \"Success\") {\n      userContext.setUser(user.username);\n    } else {\n      alert(\"incorrect username or password\");\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: () => userContext.setUser(user.username),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(UsernameInput, {\n    onChange: onChange,\n    username: user.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(PasswordInput, {\n    onChange: onChange,\n    password: user.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(LoginButton, {\n    onLogin: onLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx"],"names":["useState","useContext","axios","UserContext","UsernameInput","PasswordInput","LoginButton","globalVars","LoginForm","user","setUser","username","password","userContext","onChange","e","target","name","value","onLogin","userRes","method","url","serverURL","responseType","userData","data","msg","alert"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC;AAACW,IAAAA,QAAQ,EAAG,EAAZ;AAAgBC,IAAAA,QAAQ,EAAG;AAA3B,GAAD,CAAhC;AACA,QAAMC,WAAW,GAAGZ,UAAU,CAACE,WAAD,CAA9B;;AAGA,QAAMW,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,UAAlB,GACMP,OAAO,mBAAKD,IAAL;AAAWE,MAAAA,QAAQ,EAAEI,CAAC,CAACC,MAAF,CAASE;AAA9B,OADb,GAEMR,OAAO,mBAAKD,IAAL;AAAWG,MAAAA,QAAQ,EAAEG,CAAC,CAACC,MAAF,CAASE;AAA9B,OAFb;AAGH,GAJD;;AAMA,QAAMC,OAAO,GAAG,YAAW;AACvB,UAAMC,OAAO,GAAG,MAAMlB,KAAK,CAAC;AACxBmB,MAAAA,MAAM,EAAE,MADgB;AAExBC,MAAAA,GAAG,EAAG,GAAEf,UAAU,CAACgB,SAAU,QAFL;AAGxBC,MAAAA,YAAY,EAAE;AAHU,KAAD,CAA3B;AAKA,UAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,IAA/B;;AAEA,QAAGD,QAAQ,CAACE,GAAT,KAAiB,SAApB,EAA+B;AAC3Bd,MAAAA,WAAW,CAACH,OAAZ,CAAoBD,IAAI,CAACE,QAAzB;AACH,KAFD,MAEO;AACHiB,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;AACJ,GAbD;;AAeA,SACI,4BACI;AAAM,IAAA,QAAQ,EAAE,MAAMf,WAAW,CAACH,OAAZ,CAAoBD,IAAI,CAACE,QAAzB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEG,QAAzB;AAAmC,IAAA,QAAQ,EAAEL,IAAI,CAACE,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEG,QAAzB;AAAmC,IAAA,QAAQ,EAAEL,IAAI,CAACG,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEO,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ;AASH,CAnCD;;AAqCA,eAAeX,SAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport UsernameInput from \"./UsernameInput\";\nimport PasswordInput from \"./PasswordInput\";\nimport LoginButton from \"./LoginButton\";\nimport globalVars from \"../../library/globalVariables\";\n\nconst LoginForm = () => {\n    const [user, setUser] = useState({username : \"\", password : \"\" });\n    const userContext = useContext(UserContext);\n\n\n    const onChange = (e) =>Â {\n        e.target.name === \"username\"\n            ? setUser({...user, username: e.target.value})\n            : setUser({...user, password: e.target.value})\n    }\n\n    const onLogin = async() => {\n        const userRes = await axios({\n            method: \"POST\",\n            url: `${globalVars.serverURL}/users`,\n            responseType: \"json\"\n        })\n        const userData = await userRes.data;\n\n        if(userData.msg === \"Success\") {\n            userContext.setUser(user.username);\n        } else {\n            alert(\"incorrect username or password\")\n        }\n    }\n\n    return (\n        <>  \n            <form onSubmit={() => userContext.setUser(user.username)}>\n                <UsernameInput onChange={onChange} username={user.username}/>\n                <PasswordInput onChange={onChange} password={user.password}/>\n                <LoginButton onLogin={onLogin} />\n            </form>\n        </>\n    )\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}