{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/clientTable/TableBody.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport uniqid from \"uniqid\"; //TODO Filtrují se i polé které neexistujou na straně body\n\nconst TableBody = ({\n  clients,\n  reverse,\n  sort,\n  fields\n}) => {\n  reverse ? clients.sort((a, b) => b[sort] - a[sort]) : clients.sort((a, b) => a[sort] - b[sort]);\n  const fieldNames = [];\n  fields.forEach(e => fieldNames.push(e.fieldName));\n  const tableClients = clients.map(e => {\n    const tableItem = () => {\n      let items = [];\n\n      for (let key in e) {\n        //show only existing fields clients data\n        e[key] !== e._id && fieldNames.includes(key) ? items.push(__jsx(\"td\", {\n          key: uniqid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, e[key])) : null;\n      }\n\n      return items;\n    };\n\n    return __jsx(\"tr\", {\n      key: e._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: e._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), tableItem(), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/clients/[id]\",\n      as: `/clients/${e._id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Go to client\"))));\n  });\n  return tableClients;\n};\n\nexport default TableBody;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/clientTable/TableBody.tsx"],"names":["Link","uniqid","TableBody","clients","reverse","sort","fields","a","b","fieldNames","forEach","e","push","fieldName","tableClients","map","tableItem","items","key","_id","includes"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AASA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA,IAApB;AAA0BC,EAAAA;AAA1B,CAAD,KAA+C;AAC/DF,EAAAA,OAAO,GACHD,OAAO,CAACE,IAAR,CAAa,CAACE,CAAD,EAASC,CAAT,KAAqBA,CAAC,CAACH,IAAD,CAAD,GAAUE,CAAC,CAACF,IAAD,CAA7C,CADG,GAEHF,OAAO,CAACE,IAAR,CAAa,CAACE,CAAD,EAASC,CAAT,KAAqBD,CAAC,CAACF,IAAD,CAAD,GAAUG,CAAC,CAACH,IAAD,CAA7C,CAFJ;AAIA,QAAMI,UAAU,GAAG,EAAnB;AACAH,EAAAA,MAAM,CAACI,OAAP,CAAgBC,CAAD,IAAaF,UAAU,CAACG,IAAX,CAAgBD,CAAC,CAACE,SAAlB,CAA5B;AAEA,QAAMC,YAAY,GAAGX,OAAO,CAACY,GAAR,CAAaJ,CAAD,IAAY;AAC3C,UAAMK,SAAS,GAAG,MAAM;AACtB,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,GAAT,IAAgBP,CAAhB,EAAmB;AACjB;AACAA,QAAAA,CAAC,CAACO,GAAD,CAAD,KAAWP,CAAC,CAACQ,GAAb,IAAoBV,UAAU,CAACW,QAAX,CAAoBF,GAApB,CAApB,GAA+CD,KAAK,CAACL,IAAN,CAAW;AAAI,UAAA,GAAG,EAAEX,MAAM,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBU,CAAC,CAACO,GAAD,CAArB,CAAX,CAA/C,GAA8F,IAA9F;AACD;;AACD,aAAOD,KAAP;AACD,KAPD;;AASA,WACE;AAAI,MAAA,GAAG,EAAEN,CAAC,CAACQ,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAER,CAAC,CAACQ,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADF,EAEGH,SAAS,EAFZ,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAA2B,MAAA,EAAE,EAAG,YAAWL,CAAC,CAACQ,GAAI,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CAHF,CADF;AAWD,GArBoB,CAArB;AAsBA,SAAOL,YAAP;AACD,CA/BD;;AAiCA,eAAeZ,SAAf","sourcesContent":["import Link from \"next/link\";\nimport uniqid from \"uniqid\";\n\n//TODO Filtrují se i polé které neexistujou na straně body\n\ninterface IProps {\n  clients: any;\n  reverse: boolean;\n  sort: string;\n  fields: any;\n}\n\nconst TableBody = ({ clients, reverse, sort, fields}: IProps) => {\n  reverse\n    ? clients.sort((a: any, b: any) => (b[sort] - a[sort]))\n    : clients.sort((a: any, b: any) => (a[sort] - b[sort]));\n  \n  const fieldNames = [];\n  fields.forEach((e : any) => fieldNames.push(e.fieldName));\n\n  const tableClients = clients.map((e: any) => {\n    const tableItem = () => {\n      let items = [];\n      for (let key in e) {\n        //show only existing fields clients data\n        e[key] !== e._id && fieldNames.includes(key) ? items.push(<td key={uniqid()}>{e[key]}</td>) : null;\n      }\n      return items;\n    };\n\n    return (\n      <tr key={e._id}>\n        <td><input type=\"checkbox\" id={e._id}/></td>\n        {tableItem()}\n        <td>\n          <Link href=\"/clients/[id]\" as={`/clients/${e._id}`}>\n            <a>Go to client</a>\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n  return tableClients;\n};\n\nexport default TableBody;\n"]},"metadata":{},"sourceType":"module"}