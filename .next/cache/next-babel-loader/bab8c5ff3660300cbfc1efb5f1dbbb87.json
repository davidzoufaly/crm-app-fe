{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/ClientList.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\n\nconst ClientsList = ({\n  clients,\n  reverse\n}) => {\n  function compare(a, b, type) {\n    let comparison = 0;\n\n    if (a.type > b.type) {\n      comparison = 1;\n    } else if (genreA < genreB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n  reverse ? clients.sort((a, b) => b < a ? 1 : -1) : clients.sort((a, b) => b > a ? 1 : -1); // clients.sort((a : any, b : any) => b > a ? 1 : -1)\n\n  const tableClients = clients.map(e => __jsx(\"tr\", {\n    key: e._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, e.dateAdded), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, e.name), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, e.age), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, e.address), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/clients/[id]\",\n    as: `/clients/${e._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Go to client\")))));\n  return tableClients;\n};\n\nexport default ClientsList;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/ClientList.tsx"],"names":["Link","ClientsList","clients","reverse","compare","a","b","type","comparison","genreA","genreB","sort","tableClients","map","e","_id","dateAdded","name","age","address"],"mappings":";;;AACA,OAAOA,IAAP,MAAiB,WAAjB;;AAQA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAiC;AAEjD,WAASC,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuBC,IAAvB,EAA6B;AACzB,QAAIC,UAAU,GAAG,CAAjB;;AACA,QAAIH,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACnBC,MAAAA,UAAU,GAAG,CAAb;AACD,KAFD,MAEO,IAAIC,MAAM,GAAGC,MAAb,EAAqB;AAC1BF,MAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AACD,WAAOA,UAAP;AACD;;AAGHL,EAAAA,OAAO,GAAGD,OAAO,CAACS,IAAR,CAAa,CAACN,CAAD,EAAUC,CAAV,KAAsBA,CAAC,GAAGD,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAhD,CAAH,GAAwDH,OAAO,CAACS,IAAR,CAAa,CAACN,CAAD,EAAUC,CAAV,KAAsBA,CAAC,GAAGD,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAhD,CAA/D,CAbiD,CAcjD;;AAEA,QAAMO,YAAY,GAAGV,OAAO,CAACW,GAAR,CAAaC,CAAD,IAC/B;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACE,SAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,CAAC,CAACG,IAAP,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,CAAC,CAACI,GAAP,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,CAAC,CAACK,OAAP,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAA2B,IAAA,EAAE,EAAG,YAAWL,CAAC,CAACC,GAAI,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CALF,CADmB,CAArB;AAaA,SAAOH,YAAP;AACD,CA9BH;;AAgCE,eAAeX,WAAf","sourcesContent":["\nimport Link from 'next/link';\n\ninterface IProps {\n    clients: any,\n    reverse: boolean\n    sort: string\n  }\n\nconst ClientsList = ({clients, reverse} : IProps) => {\n\n    function compare(a, b, type) {\n        let comparison = 0;\n        if (a.type > b.type) {\n          comparison = 1;\n        } else if (genreA < genreB) {\n          comparison = -1;\n        }\n        return comparison;\n      }\n      \n\n    reverse ? clients.sort((a : any, b : any) => b < a ? 1 : -1) : clients.sort((a : any, b : any) => b > a ? 1 : -1);\n    // clients.sort((a : any, b : any) => b > a ? 1 : -1)\n\n    const tableClients = clients.map((e:any) => (\n      <tr key={e._id}>\n        <td>{e.dateAdded}</td>\n        <td>{e.name}</td>\n        <td>{e.age}</td>\n        <td>{e.address}</td>\n        <td>\n          <Link href=\"/clients/[id]\" as={`/clients/${e._id}`}>\n            <a>Go to client</a>\n          </Link>\n        </td>\n      </tr>\n    ));\n    return tableClients;\n  };\n\n  export default ClientsList;"]},"metadata":{},"sourceType":"module"}