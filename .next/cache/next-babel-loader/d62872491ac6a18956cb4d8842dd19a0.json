{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/emails.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport globalVars from \"../library/globalVariables\";\nimport axios from \"axios\";\nimport generateUniqueId from \"generate-unique-id\";\nimport stringMethods from \"../library/stringMethods\";\nimport { useEffect, useState } from \"react\";\nimport LoadingSpinner from \"../components/loadingSpinner\";\nimport { useRouter } from \"next/router\";\n\nvar Emails = function Emails(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(false),\n      initialized = _useState[0],\n      setInitialized = _useState[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    var title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n  });\n  var tableBody = data.map(function (email) {\n    return __jsx(\"tr\", {\n      key: generateUniqueId(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, email.date), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, email.to), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, email.subject), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, email.message));\n  });\n  var h1 = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString();\n  return !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }) : __jsx(React.Fragment, null, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, h1), __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Date and time\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"To\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Subject\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Message\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, tableBody)));\n};\n\nEmails.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios({\n            method: \"get\",\n            url: \"\".concat(globalVars.serverURL, \"/emails\"),\n            responseType: \"json\"\n          });\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.data;\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Emails;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/emails.tsx"],"names":["Header","globalVars","axios","generateUniqueId","stringMethods","useEffect","useState","LoadingSpinner","useRouter","Emails","data","initialized","setInitialized","router","title","pathname","removeSlash","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","tableBody","map","email","date","to","subject","message","h1","getInitialProps","method","url","serverURL","responseType","res"],"mappings":"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","sourcesContent":["import Header from \"../components/Header\";\nimport globalVars from \"../library/globalVariables\";\nimport axios from \"axios\";\nimport generateUniqueId from \"generate-unique-id\";\nimport stringMethods from \"../library/stringMethods\";\nimport {useEffect, useState} from \"react\";\nimport LoadingSpinner from \"../components/loadingSpinner\";\nimport {useRouter} from \"next/router\"\n\nconst Emails = ({ data }) => {\n    const [initialized, setInitialized] = useState(false)\n    const router = useRouter();\n\n    useEffect(() => {\n        const title = new stringMethods(router.pathname)\n          .removeSlash()\n          .firstCharUpperCase()\n          .addStringToEnd(globalVars.titleSubText)\n          .getString();\n        document.title = title;\n        setInitialized(true);\n      });\n\n  const tableBody = data.map(email => (\n    <tr key={generateUniqueId()}>\n      <td>{email.date}</td>\n      <td>{email.to}</td>\n      <td>{email.subject}</td>\n      <td>{email.message}</td>\n    </tr>\n  ));\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  return !initialized ? <LoadingSpinner/> : (\n    <>\n      <Header />\n      <h1>{h1}</h1>\n      <table>\n        <thead>\n          <tr>\n            <td>Date and time</td>\n            <td>To</td>\n            <td>Subject</td>\n            <td>Message</td>\n          </tr>\n        </thead>\n        <tbody>{tableBody}</tbody>\n      </table>\n    </>\n  );\n};\n\nEmails.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/emails`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return { data };\n};\n\nexport default Emails;\n"]},"metadata":{},"sourceType":"module"}