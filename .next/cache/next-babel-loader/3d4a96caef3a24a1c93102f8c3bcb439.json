{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport stringMethods from \"../library/stringMethods\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Grid from \"@material-ui/core/Grid\";\n\nvar CustomFields = function CustomFields(_ref) {\n  var fields = _ref.fields,\n      changeDisplayComponent = _ref.changeDisplayComponent,\n      deleteField = _ref.deleteField;\n  var useStyles = makeStyles({\n    card: {\n      textAlign: \"center\",\n      height: \"100%\",\n      minWidth: \"300px\"\n    },\n    list: {\n      listStyleType: \"disc\"\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  });\n  var classes = useStyles({});\n\n  var getSeparateFields = function getSeparateFields() {\n    fields.filter(function (_ref2) {\n      var fieldPermanent = _ref2.fieldPermanent;\n      return !fieldPermanent;\n    }).map(function (_ref3) {\n      var fieldName = _ref3.fieldName,\n          _id = _ref3._id,\n          fieldType = _ref3.fieldType,\n          fieldOptions = _ref3.fieldOptions;\n      var customFieldNameFormated = new stringMethods(fieldName.toLowerCase()).firstCharUpperCase().getString();\n\n      var optionsMap = function optionsMap() {\n        return fieldOptions.map(function (e) {\n          var optionFormatedKey = new stringMethods(e.value).textToCamelString().replaceStringDiacritics().getString();\n          return __jsx(ListItem, {\n            key: optionFormatedKey,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, __jsx(ListItemText, {\n            primary: e.value.toLowerCase(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }));\n        });\n      };\n\n      return __jsx(Grid, {\n        item: true,\n        key: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, customFieldNameFormated), __jsx(Typography, {\n        className: classes.pos,\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"(\", fieldType.toLowerCase(), \")\"), fieldType === \"select\" ? __jsx(List, {\n        className: classes.list,\n        dense: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, optionsMap()) : null, __jsx(\"button\", {\n        onClick: changeDisplayComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Edit field\"), __jsx(\"button\", {\n        onClick: deleteField,\n        id: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Delete field\"))));\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, getSeparateFields());\n};\n\nexport default CustomFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomFields.tsx"],"names":["stringMethods","makeStyles","Card","CardContent","Typography","ListItemText","List","ListItem","Grid","CustomFields","fields","changeDisplayComponent","deleteField","useStyles","card","textAlign","height","minWidth","list","listStyleType","title","fontSize","pos","marginBottom","classes","getSeparateFields","filter","fieldPermanent","map","fieldName","_id","fieldType","fieldOptions","customFieldNameFormated","toLowerCase","firstCharUpperCase","getString","optionsMap","e","optionFormatedKey","value","textToCamelString","replaceStringDiacritics"],"mappings":"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","sourcesContent":["import stringMethods from \"../library/stringMethods\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst CustomFields = ({ fields, changeDisplayComponent, deleteField }: any) => {\n  const useStyles = makeStyles({\n    card: {\n      textAlign: \"center\",\n      height: \"100%\",\n      minWidth: \"300px\"\n    },\n    list: {\n      listStyleType: \"disc\"\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  });\n\n  const classes = useStyles({});\n\n  const getSeparateFields = () => {\n    fields\n      .filter(({ fieldPermanent }: any) => !fieldPermanent)\n      .map(({ fieldName, _id, fieldType, fieldOptions }: any) => {\n        const customFieldNameFormated = new stringMethods(\n          fieldName.toLowerCase()\n        )\n          .firstCharUpperCase()\n          .getString();\n\n        const optionsMap = () => {\n          return fieldOptions.map((e: any) => {\n            const optionFormatedKey = new stringMethods(e.value)\n              .textToCamelString()\n              .replaceStringDiacritics()\n              .getString();\n\n            return (\n              <ListItem key={optionFormatedKey}>\n                <ListItemText primary={e.value.toLowerCase()} />\n              </ListItem>\n            );\n          });\n        };\n\n        return (\n          <Grid item key={_id}>\n            <Card className={classes.card}>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h3\">\n                  {customFieldNameFormated}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                  ({fieldType.toLowerCase()})\n                </Typography>\n                {fieldType === \"select\" ? (\n                  <List className={classes.list} dense={true}>\n                    {optionsMap()}\n                  </List>\n                ) : null}\n                <button onClick={changeDisplayComponent}>Edit field</button>\n                <button onClick={deleteField} id={_id}>\n                  Delete field\n                </button>\n              </CardContent>\n            </Card>\n          </Grid>\n        );\n      });\n  };\n\n  return (\n    <div>{getSeparateFields()}</div>\n  );\n};\n\nexport default CustomFields;\n"]},"metadata":{},"sourceType":"module"}