{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/AddOrEditField.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport SelectFieldOptions from \"../components/SelectFieldOptions\";\n\nconst AddOrEditField = ({\n  editedField,\n  onOptionChange,\n  onOptionDelete,\n  saveEditedField,\n  displayComponent,\n  fieldMethods\n}) => {\n  return displayComponent ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"field-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Field name\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"field-name\",\n    defaultValue: editedField.fieldName,\n    onChange: fieldMethods.onNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"field-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Field type\"), __jsx(\"select\", {\n    id: \"field-type\",\n    onChange: fieldMethods.onSelectChange,\n    defaultValue: editedField.fieldType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Text\"), __jsx(\"option\", {\n    value: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Select\"), __jsx(\"option\", {\n    value: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Number\")), __jsx(SelectFieldOptions, {\n    options: editedField.fieldOptions,\n    onOptionChange: onOptionChange,\n    onOptionDelete: onOptionDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), editedField.fieldType === \"select\" ? __jsx(\"button\", {\n    onClick: fieldMethods.handleOptionSpawn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"New\") : null, __jsx(\"button\", {\n    onClick: saveEditedField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Save\"), __jsx(\"button\", {\n    onClick: fieldMethods.changeDisplayComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Cancel\")) : __jsx(\"button\", {\n    onClick: fieldMethods.changeDisplayComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Add new field\");\n};\n\nexport default AddOrEditField;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/AddOrEditField.tsx"],"names":["SelectFieldOptions","AddOrEditField","editedField","onOptionChange","onOptionDelete","saveEditedField","displayComponent","fieldMethods","fieldName","onNameChange","onSelectChange","fieldType","fieldOptions","handleOptionSpawn","changeDisplayComponent"],"mappings":";;;AAAA,OAAOA,kBAAP,MAA+B,kCAA/B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,cAAf;AAA+BC,EAAAA,cAA/B;AAA+CC,EAAAA,eAA/C;AAAgEC,EAAAA,gBAAhE;AAAkFC,EAAAA;AAAlF,CAAD,KAA2G;AAEhI,SAAOD,gBAAgB,GACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,YAFL;AAGE,IAAA,YAAY,EAAEJ,WAAW,CAACM,SAH5B;AAIE,IAAA,QAAQ,EAAED,YAAY,CAACE,YAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,EASE;AAAQ,IAAA,EAAE,EAAC,YAAX;AAAwB,IAAA,QAAQ,EAAEF,YAAY,CAACG,cAA/C;AAA+D,IAAA,YAAY,EAAER,WAAW,CAACS,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CATF,EAcE,MAAC,kBAAD;AACE,IAAA,OAAO,EAAET,WAAW,CAACU,YADvB;AAEE,IAAA,cAAc,EAAET,cAFlB;AAGE,IAAA,cAAc,EAAEC,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAmBGF,WAAW,CAACS,SAAZ,KAA0B,QAA1B,GACC;AAAQ,IAAA,OAAO,EAAEJ,YAAY,CAACM,iBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,GAEG,IArBN,EAsBE;AAAQ,IAAA,OAAO,EAAER,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,EAuBE;AAAQ,IAAA,OAAO,EAAEE,YAAY,CAACO,sBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF,CADqB,GA0BlB;AAAQ,IAAA,OAAO,EAAEP,YAAY,CAACO,sBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA1BL;AA2BD,CA7BD;;AA+BA,eAAeb,cAAf","sourcesContent":["import SelectFieldOptions from \"../components/SelectFieldOptions\";\n\nconst AddOrEditField = ({ editedField, onOptionChange, onOptionDelete, saveEditedField, displayComponent, fieldMethods }: any) => {\n\n  return displayComponent ? (\n    <div>\n      <label htmlFor=\"field-name\">Field name</label>\n      <input\n        type=\"text\"\n        id=\"field-name\"\n        defaultValue={editedField.fieldName}\n        onChange={fieldMethods.onNameChange}\n      />\n      <label htmlFor=\"field-type\">Field type</label>\n      <select id=\"field-type\" onChange={fieldMethods.onSelectChange} defaultValue={editedField.fieldType}> \n        <option value=\"text\">Text</option>\n        <option value=\"select\">Select</option>\n        <option value=\"number\">Number</option>\n      </select>\n      <SelectFieldOptions\n        options={editedField.fieldOptions}\n        onOptionChange={onOptionChange}\n        onOptionDelete={onOptionDelete}\n      />\n      {editedField.fieldType === \"select\" ? (\n        <button onClick={fieldMethods.handleOptionSpawn}>New</button>\n      ) : null}\n      <button onClick={saveEditedField}>Save</button>\n      <button onClick={fieldMethods.changeDisplayComponent}>Cancel</button>\n    </div>\n  ) : (<button onClick={fieldMethods.changeDisplayComponent}>Add new field</button>);\n};\n\nexport default AddOrEditField;\n"]},"metadata":{},"sourceType":"module"}