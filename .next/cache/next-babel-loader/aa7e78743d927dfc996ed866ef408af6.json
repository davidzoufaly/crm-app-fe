{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer, useEffect } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormOptionSelect from \"./WebFormOptionSelect\";\nimport WebFormOptions from \"./WebFormOptions\";\n\nconst WebForm = ({\n  fields\n}) => {\n  //   const [optionSelect, setOptionSelect] = useState(null);\n  const {\n    0: webFields,\n    1: setWebFields\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true\n        }) : field);\n\n      case \"remove\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: false\n        }) : field);\n\n      case \"addVisibleSelect\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true,\n          fieldFormVisible: true,\n          pause: false\n        }) : field);\n      //   case \"pauseSelect\": \n      //      return state.map(field => field.fieldName === action.payload.fieldName ? {...field, pause: true} : field)\n\n      case \"unpauseSelect\":\n        return state.map(field => field.pause ? _objectSpread({}, field, {\n          pause: false\n        }) : field);\n\n      case \"addHiddenSelect\":\n        return state.map(field => field.fieldName === optionSelect[0].fieldName ? _objectSpread({}, field, {\n          fieldInForm: true,\n          fieldFormVisible: false,\n          pause: false,\n          fieldOptions: field.fieldOptions.map(option => option.value === action.payload ? _objectSpread({}, option, {\n            preselected: true\n          }) : option)\n        }) : field);\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field => field.fieldName === e.target.value ? field.fieldType !== \"select\" ? setWebFields({\n      type: \"add\",\n      payload: {\n        fieldName: e.target.value\n      }\n    }) : setWebFields({\n      type: \"pauseSelect\",\n      payload: {\n        fieldName: e.target.value\n      }\n    }) : null);\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: {\n        optionValue: e.target.value\n      }\n    });\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n  };\n\n  useEffect(() => {\n    console.log(webFields);\n  }, [webFields]);\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Select field:\"), __jsx(WebFormSelect, {\n    webFields: webFields,\n    addNotSelect: addNotSelect // optionSelect={optionSelect}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), __jsx(WebFormOptionSelect, {\n    optionSelect: optionSelect,\n    webFields: webFields,\n    addVisibleSelect: addVisibleSelect,\n    WebFormOptions: __jsx(WebFormOptions // optionSelect={optionSelect}\n    , {\n      addHiddenSelect: addHiddenSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Selected fields:\"), __jsx(WebFormList, {\n    webFields: webFields,\n    removeFromList: removeFromList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }));\n};\n\nexport default WebForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx"],"names":["useReducer","useEffect","WebFormSelect","WebFormList","WebFormOptionSelect","WebFormOptions","WebForm","fields","webFields","setWebFields","state","action","type","map","field","fieldName","payload","fieldInForm","fieldFormVisible","pause","optionSelect","fieldOptions","option","value","preselected","addNotSelect","e","target","fieldType","addVisibleSelect","id","addHiddenSelect","optionValue","removeFromList","console","log"],"mappings":"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","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormOptionSelect from \"./WebFormOptionSelect\";\nimport WebFormOptions from \"./WebFormOptions\";\n\nconst WebForm = ({ fields }) => {\n//   const [optionSelect, setOptionSelect] = useState(null);\n  const [webFields, setWebFields] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true }\n            : field\n        );\n      case \"remove\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: false }\n            : field\n        );\n      case \"addVisibleSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true, fieldFormVisible: true, pause: false }\n            : field\n        );\n\n    //   case \"pauseSelect\": \n    //      return state.map(field => field.fieldName === action.payload.fieldName ? {...field, pause: true} : field)\n\n      case \"unpauseSelect\":\n          return state.map(field => field.pause ? {...field, pause: false} : field)\n\n      case \"addHiddenSelect\":\n        return state.map(field =>\n          field.fieldName === optionSelect[0].fieldName\n            ? {\n                ...field,\n                fieldInForm: true,\n                fieldFormVisible: false,\n                pause: false,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.value === action.payload\n                    ? { ...option, preselected: true }\n                    : option\n                )\n              }\n            : field\n        );\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field =>\n      field.fieldName === e.target.value\n        ? field.fieldType !== \"select\"\n          ? setWebFields({\n              type: \"add\",\n              payload: { fieldName: e.target.value }\n            })\n          : setWebFields({\n              type: \"pauseSelect\",\n              payload: { fieldName: e.target.value }\n            })\n        : null\n    );\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: { fieldName: e.target.id }\n    });\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: { optionValue: e.target.value }\n    });\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: { fieldName: e.target.id }\n    });\n  };\n\n  useEffect(() => {\n    console.log(webFields);\n  }, [webFields]);\n\n  return (\n    <>\n      <h3>Select field:</h3>\n      <WebFormSelect\n        webFields={webFields}\n        addNotSelect={addNotSelect}\n        // optionSelect={optionSelect}\n      />\n      <WebFormOptionSelect\n        optionSelect={optionSelect}\n        webFields={webFields}\n        addVisibleSelect={addVisibleSelect}\n        WebFormOptions={\n          <WebFormOptions\n            // optionSelect={optionSelect}\n            addHiddenSelect={addHiddenSelect}\n          />\n        }\n      />\n      <h3>Selected fields:</h3>\n      <WebFormList webFields={webFields} removeFromList={removeFromList} />\n    </>\n  );\n};\n\nexport default WebForm;\n"]},"metadata":{},"sourceType":"module"}