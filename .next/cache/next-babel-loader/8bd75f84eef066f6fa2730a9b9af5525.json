{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/CreateClient.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useReducer, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../../library/globalVariables\";\nimport generateUniqueId from \"generate-unique-id\";\nimport moment from \"moment\";\n\nvar CreateClient = function CreateClient(_ref) {\n  var fields = _ref.fields,\n      isClientAdded = _ref.isClientAdded,\n      toggleIsClientAdded = _ref.toggleIsClientAdded,\n      addNewClientToState = _ref.addNewClientToState;\n  var initialNewClientState = fields.map(function (e) {\n    return e.fieldName;\n  }).reduce(function (o, key) {\n    return _Object$assign(o, _defineProperty({}, key, \"\"));\n  }, {});\n\n  var _useState = useState(false),\n      submitting = _useState[0],\n      setSubmitting = _useState[1];\n\n  var _useReducer = useReducer(function (state, action) {\n    switch (action.type) {\n      case \"onTextChange\":\n        return _objectSpread({}, state, _defineProperty({}, action.payload.fieldName, action.payload.fieldType === \"number\" ? _parseInt(action.payload.value) : action.payload.value));\n\n      case \"addId\":\n        return _objectSpread({}, state, {\n          _id: generateUniqueId({\n            length: 24,\n            useNumbers: true,\n            useLetters: false,\n            includeSymbols: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n          })\n        });\n\n      case \"addDate\":\n        return _objectSpread({}, state, {\n          dateAdded: moment().format(\"llll\")\n        });\n\n      case \"clear\":\n        return {\n          initialNewClientState: initialNewClientState\n        };\n\n      default:\n        return state;\n    }\n  }, initialNewClientState),\n      newClient = _useReducer[0],\n      setNewClient = _useReducer[1];\n\n  var onChange = function onChange(fieldType, event) {\n    setNewClient({\n      type: \"onTextChange\",\n      payload: {\n        fieldName: event.target.name,\n        value: event.target.value,\n        fieldType: fieldType\n      }\n    });\n  };\n\n  useEffect(function () {\n    var ff =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var clientRes, clientData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios({\n                  method: \"post\",\n                  data: newClient,\n                  url: \"\".concat(globalVars.serverURL, \"/clients\"),\n                  responseType: \"json\"\n                });\n\n              case 2:\n                clientRes = _context.sent;\n                _context.next = 5;\n                return clientRes.data;\n\n              case 5:\n                clientData = _context.sent;\n\n                if (clientData.msg === \"Success\") {\n                  addNewClientToState(newClient);\n                  setNewClient({\n                    type: \"clear\"\n                  });\n                  toggleIsClientAdded();\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function ff() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (submitting) {\n      ff();\n      setSubmitting(false);\n    }\n  }, []);\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(e) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              setNewClient({\n                type: \"addDate\"\n              });\n              setNewClient({\n                type: \"addId\"\n              });\n              setSubmitting(true);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onCancel = function onCancel() {\n    setNewClient({\n      type: \"clear\"\n    });\n    toggleIsClientAdded();\n  };\n\n  return isClientAdded ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Add new client\"), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(ClientForm, {\n    fields: fields,\n    onChange: onChange,\n    newClient: newClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Save\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Cancel\"))) : null;\n};\n\nexport default CreateClient;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/CreateClient.tsx"],"names":["Button","Typography","ClientForm","useReducer","useEffect","useState","axios","globalVars","generateUniqueId","moment","CreateClient","fields","isClientAdded","toggleIsClientAdded","addNewClientToState","initialNewClientState","map","e","fieldName","reduce","o","key","submitting","setSubmitting","state","action","type","payload","fieldType","value","_id","length","useNumbers","useLetters","includeSymbols","dateAdded","format","newClient","setNewClient","onChange","event","target","name","ff","method","data","url","serverURL","responseType","clientRes","clientData","msg","onSubmit","preventDefault","onCancel"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useReducer, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../../library/globalVariables\";\nimport generateUniqueId from \"generate-unique-id\";\nimport moment from \"moment\";\n\nconst CreateClient = ({\n  fields,\n  isClientAdded,\n  toggleIsClientAdded,\n  addNewClientToState,\n}: any) => {\n  const initialNewClientState = fields\n    .map((e: any) => e.fieldName)\n    .reduce((o, key) => Object.assign(o, { [key]: \"\" }), {});\n\n  const [submitting, setSubmitting] = useState(false);\n  const [newClient, setNewClient] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"onTextChange\":\n        return {\n          ...state,\n          [action.payload.fieldName]:\n            action.payload.fieldType === \"number\"\n              ? parseInt(action.payload.value)\n              : action.payload.value\n        };\n      case \"addId\":\n        return {\n          ...state,\n          _id: generateUniqueId({\n            length: 24,\n            useNumbers: true,\n            useLetters: false,\n            includeSymbols: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n          })\n        };\n      case \"addDate\":\n        return {\n          ...state,\n           dateAdded: moment().format(\"llll\")\n        }\n      case \"clear\":\n        return {\n          initialNewClientState  \n        };\n\n      default:\n        return state;\n    }\n  }, initialNewClientState);\n\n  const onChange = (fieldType, event) => {\n    setNewClient({\n      type: \"onTextChange\",\n      payload: { fieldName : event.target.name, value: event.target.value, fieldType }\n    });\n\n  };\n\n  useEffect(() => {\n    const ff = async () => {\n      const clientRes = await axios({\n        method: \"post\",\n        data: newClient,\n        url: `${globalVars.serverURL}/clients`,\n        responseType: \"json\"\n      });\n      const clientData = await clientRes.data;\n      if (clientData.msg === \"Success\") {\n        addNewClientToState(newClient);\n        setNewClient({\n          type: \"clear\"\n        });\n        toggleIsClientAdded();\n      }\n    }\n    if (submitting) {\n      ff();\n      setSubmitting(false);\n    }\n  }, [])\n\n  const onSubmit = async e => {\n      e.preventDefault();\n      setNewClient({type: \"addDate\"});\n      setNewClient({ type: \"addId\" });\n      setSubmitting(true);\n  };\n\n  const onCancel = () => {\n    setNewClient({\n      type: \"clear\"\n    });\n    toggleIsClientAdded();\n  };\n\n  return isClientAdded ? (\n    <div>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        Add new client\n      </Typography>\n      <form onSubmit={onSubmit}>\n        <ClientForm fields={fields} onChange={onChange} newClient={newClient} />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Save\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\n          Cancel\n        </Button>\n      </form>\n    </div>\n  ) : null;\n};\n\nexport default CreateClient;\n"]},"metadata":{},"sourceType":"module"}