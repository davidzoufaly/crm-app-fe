{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/customFields/CustomFieldsSection.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport CustomFields from \"./CustomFields\";\nimport languages from \"../../../library/languages\";\nimport { Checkbox, Typography, FormControlLabel, Box } from \"@material-ui/core\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\n\nconst CustomFieldsSection = ({\n  toggleSection,\n  addField,\n  removeField,\n  sections,\n  fields\n}) => __jsx(Box, {\n  my: \"2rem\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, __jsx(FormControlLabel, {\n  control: __jsx(Checkbox, {\n    onChange: toggleSection,\n    name: \"customFields\",\n    id: \"custom-fields\" // toggle visibility of section\n    ,\n    checked: sections.customFields !== undefined ? sections.customFields : true,\n    icon: __jsx(KeyboardArrowRightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }),\n    checkedIcon: __jsx(KeyboardArrowDownIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }),\n  label: __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, languages.en.customClientFields),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}), sections.customFields || sections.customFields === undefined ? __jsx(CustomFields, {\n  fields: fields,\n  addField: addField,\n  removeField: removeField,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}) : null);\n\nexport default CustomFieldsSection;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/customFields/CustomFieldsSection.tsx"],"names":["CustomFields","languages","Checkbox","Typography","FormControlLabel","Box","KeyboardArrowRightIcon","KeyboardArrowDownIcon","CustomFieldsSection","toggleSection","addField","removeField","sections","fields","customFields","undefined","en","customClientFields"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,gBAA/B,EAAiDC,GAAjD,QAA4D,mBAA5D;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAC3BC,EAAAA,aAD2B;AAE3BC,EAAAA,QAF2B;AAG3BC,EAAAA,WAH2B;AAI3BC,EAAAA,QAJ2B;AAK3BC,EAAAA;AAL2B,CAAD,KAO1B,MAAC,GAAD;AAAK,EAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,gBAAD;AACE,EAAA,OAAO,EACL,MAAC,QAAD;AACE,IAAA,QAAQ,EAAEJ,aADZ;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,EAAE,EAAC,eAHL,CAIE;AAJF;AAKE,IAAA,OAAO,EAAEG,QAAQ,CAACE,YAAT,KAA0BC,SAA1B,GAAsCH,QAAQ,CAACE,YAA/C,GAA8D,IALzE;AAME,IAAA,IAAI,EAAE,MAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR;AAOE,IAAA,WAAW,EAAE,MAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAYE,EAAA,KAAK,EACH,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,SAAS,CAACe,EAAV,CAAaC,kBADhB,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAmBGL,QAAQ,CAACE,YAAT,IAAyBF,QAAQ,CAACE,YAAT,KAA0BC,SAAnD,GACC,MAAC,YAAD;AAAc,EAAA,MAAM,EAAEF,MAAtB;AAA8B,EAAA,QAAQ,EAAEH,QAAxC;AAAkD,EAAA,WAAW,EAAEC,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,GAEG,IArBN,CAPF;;AAgCA,eAAeH,mBAAf","sourcesContent":["import CustomFields from \"./CustomFields\";\nimport languages from \"../../../library/languages\";\nimport { Checkbox, Typography, FormControlLabel, Box } from \"@material-ui/core\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\n\nconst CustomFieldsSection = ({\n  toggleSection,\n  addField,\n  removeField,\n  sections,\n  fields\n}: any) => (\n  <Box my=\"2rem\">\n    <FormControlLabel\n      control={\n        <Checkbox\n          onChange={toggleSection}\n          name=\"customFields\"\n          id=\"custom-fields\"\n          // toggle visibility of section\n          checked={sections.customFields !== undefined ? sections.customFields : true}\n          icon={<KeyboardArrowRightIcon />}\n          checkedIcon={<KeyboardArrowDownIcon />}\n        />\n      }\n      label={\n        <Typography variant=\"h4\" component=\"h2\">\n          {languages.en.customClientFields}\n        </Typography>\n      }\n    />\n    {sections.customFields || sections.customFields === undefined ? (\n      <CustomFields fields={fields} addField={addField} removeField={removeField}/>\n    ) : null}\n  </Box>\n);\n\nexport default CustomFieldsSection;\n"]},"metadata":{},"sourceType":"module"}