{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/ClientList.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport uniqid from \"uniqid\";\n\nvar ClientsList = function ClientsList(_ref) {\n  var clients = _ref.clients,\n      reverse = _ref.reverse,\n      sort = _ref.sort,\n      fields = _ref.fields;\n  reverse ? clients.sort(function (a, b) {\n    return b[sort] > a[sort] ? 1 : -1;\n  }) : clients.sort(function (a, b) {\n    return b[sort] > a[sort] ? -1 : 1;\n  });\n  var tableClients = clients.map(function (e) {\n    var tableItem = function tableItem() {\n      var items = [];\n\n      for (var key in e) {\n        e[key] !== e._id && e[key] ? items.push(__jsx(\"td\", {\n          key: uniqid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, e[key])) : null;\n      }\n\n      return items;\n    };\n\n    return __jsx(\"tr\", {\n      key: e._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, tableItem(), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/clients/[id]\",\n      as: \"/clients/\".concat(e._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Go to client\"))));\n  });\n  return tableClients;\n};\n\nexport default ClientsList;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/ClientList.tsx"],"names":["Link","uniqid","ClientsList","clients","reverse","sort","fields","a","b","tableClients","map","e","tableItem","items","key","_id","push"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgD;AAAA,MAA7CC,OAA6C,QAA7CA,OAA6C;AAAA,MAApCC,OAAoC,QAApCA,OAAoC;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAClEF,EAAAA,OAAO,GACHD,OAAO,CAACE,IAAR,CAAa,UAACE,CAAD,EAASC,CAAT;AAAA,WAAqBA,CAAC,CAACH,IAAD,CAAD,GAAUE,CAAC,CAACF,IAAD,CAAX,GAAoB,CAApB,GAAwB,CAAC,CAA9C;AAAA,GAAb,CADG,GAEHF,OAAO,CAACE,IAAR,CAAa,UAACE,CAAD,EAASC,CAAT;AAAA,WAAqBA,CAAC,CAACH,IAAD,CAAD,GAAUE,CAAC,CAACF,IAAD,CAAX,GAAoB,CAAC,CAArB,GAAyB,CAA9C;AAAA,GAAb,CAFJ;AAIA,MAAMI,YAAY,GAAGN,OAAO,CAACO,GAAR,CAAY,UAACC,CAAD,EAAY;AAC3C,QAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,GAAT,IAAgBH,CAAhB,EAAmB;AACjBA,QAAAA,CAAC,CAACG,GAAD,CAAD,KAAWH,CAAC,CAACI,GAAb,IAAoBJ,CAAC,CAACG,GAAD,CAArB,GAA6BD,KAAK,CAACG,IAAN,CAAW;AAAI,UAAA,GAAG,EAAEf,MAAM,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBU,CAAC,CAACG,GAAD,CAArB,CAAX,CAA7B,GAA4E,IAA5E;AACD;;AACD,aAAOD,KAAP;AACD,KAND;;AAQA,WACE;AAAI,MAAA,GAAG,EAAEF,CAAC,CAACI,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,SAAS,EADZ,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAA2B,MAAA,EAAE,qBAAcD,CAAC,CAACI,GAAhB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CAFF,CADF;AAUD,GAnBoB,CAArB;AAoBA,SAAON,YAAP;AACD,CA1BD;;AA4BA,eAAeP,WAAf","sourcesContent":["import Link from \"next/link\";\nimport uniqid from \"uniqid\";\n\ninterface IProps {\n  clients: any;\n  reverse: boolean;\n  sort: string;\n  fields: any;\n}\n\nconst ClientsList = ({ clients, reverse, sort, fields }: IProps) => {\n  reverse\n    ? clients.sort((a: any, b: any) => (b[sort] > a[sort] ? 1 : -1))\n    : clients.sort((a: any, b: any) => (b[sort] > a[sort] ? -1 : 1));\n\n  const tableClients = clients.map((e: any) => {\n    const tableItem = () => {\n      let items = [];\n      for (let key in e) {\n        e[key] !== e._id && e[key] ? items.push(<td key={uniqid()}>{e[key]}</td>) : null;\n      }\n      return items;\n    };\n\n    return (\n      <tr key={e._id}>\n        {tableItem()}\n        <td>\n          <Link href=\"/clients/[id]\" as={`/clients/${e._id}`}>\n            <a>Go to client</a>\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n  return tableClients;\n};\n\nexport default ClientsList;\n"]},"metadata":{},"sourceType":"module"}