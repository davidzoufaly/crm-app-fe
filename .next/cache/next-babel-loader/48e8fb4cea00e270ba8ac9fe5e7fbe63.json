{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\n\nconst LoginForm = () => {\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const userContext = useContext(UserContext);\n\n  const onChange = e => {\n    e.target.name === \"username\" ? setUser(_objectSpread({}, user, {\n      username: e.target.value\n    })) : setUser(_objectSpread({}, user, {\n      password: e.target.value\n    }));\n  };\n\n  const onLogin = async () => {\n    const userRes = await axios({\n      method: \"POST\",\n      data: user,\n      url: `${globalVars.serverURL}/users`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n\n    if (userData.msg === \"Success\") {\n      userContext.setUser(user.username);\n    } else {\n      alert(\"Incorrect username or password\");\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    onChange: onChange,\n    type: \"text\",\n    value: user.username,\n    text: \"username\",\n    title: languages.en.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: user.password,\n    text: \"password\",\n    title: languages.en.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(LoginButton, {\n    onClick: onLogin,\n    text: languages.en.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx"],"names":["useState","useContext","axios","UserContext","TextInput","LoginButton","globalVars","languages","LoginForm","user","setUser","username","password","userContext","onChange","e","target","name","value","onLogin","userRes","method","data","url","serverURL","responseType","userData","msg","alert","en","register"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,UAAxB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC;AAAEW,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAAD,CAAhC;AACA,QAAMC,WAAW,GAAGZ,UAAU,CAACE,WAAD,CAA9B;;AAEA,QAAMW,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,UAAlB,GACIP,OAAO,mBAAMD,IAAN;AAAYE,MAAAA,QAAQ,EAAEI,CAAC,CAACC,MAAF,CAASE;AAA/B,OADX,GAEIR,OAAO,mBAAMD,IAAN;AAAYG,MAAAA,QAAQ,EAAEG,CAAC,CAACC,MAAF,CAASE;AAA/B,OAFX;AAGD,GAJD;;AAMA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMC,OAAO,GAAG,MAAMlB,KAAK,CAAC;AAC1BmB,MAAAA,MAAM,EAAE,MADkB;AAE1BC,MAAAA,IAAI,EAAEb,IAFoB;AAG1Bc,MAAAA,GAAG,EAAG,GAAEjB,UAAU,CAACkB,SAAU,QAHH;AAI1BC,MAAAA,YAAY,EAAE;AAJY,KAAD,CAA3B;AAMA,UAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACE,IAA/B;;AACA,QAAII,QAAQ,CAACC,GAAT,KAAiB,SAArB,EAAgC;AAC9Bd,MAAAA,WAAW,CAACH,OAAZ,CAAoBD,IAAI,CAACE,QAAzB;AACD,KAFD,MAEO;AACLiB,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACD;AACF,GAbD;;AAeA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,QAAQ,EAAEd,QADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEL,IAAI,CAACE,QAHd;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,KAAK,EAAEJ,SAAS,CAACsB,EAAV,CAAalB,QALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,SAAD;AACE,IAAA,QAAQ,EAAEG,QADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEL,IAAI,CAACG,QAHd;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,KAAK,EAAEL,SAAS,CAACsB,EAAV,CAAajB,QALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEO,OAAtB;AAA+B,IAAA,IAAI,EAAEZ,SAAS,CAACsB,EAAV,CAAaC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CAFF,CADF;AAsBD,CA/CD;;AAiDA,eAAetB,SAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\n\nconst LoginForm = () => {\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\n  const userContext = useContext(UserContext);\n\n  const onChange = e => {\n    e.target.name === \"username\"\n      ? setUser({ ...user, username: e.target.value })\n      : setUser({ ...user, password: e.target.value });\n  };\n\n  const onLogin = async () => {\n    const userRes = await axios({\n      method: \"POST\",\n      data: user,\n      url: `${globalVars.serverURL}/users`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n    if (userData.msg === \"Success\") {\n      userContext.setUser(user.username);\n    } else {\n      alert(\"Incorrect username or password\");\n    }\n  };\n\n  return (\n    <>\n      <h2>Login</h2>\n      <form>\n        <TextInput\n          onChange={onChange}\n          type=\"text\"\n          value={user.username}\n          text=\"username\"\n          title={languages.en.username}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={user.password}\n          text=\"password\"\n          title={languages.en.password}\n        />\n        <LoginButton onClick={onLogin} text={languages.en.register} />\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}