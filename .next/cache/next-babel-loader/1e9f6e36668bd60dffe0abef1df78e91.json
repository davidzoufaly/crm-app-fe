{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport Button from \"./Button\";\nimport LoadingSpinner from \"../LoadingSpinner\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nvar LoginForm = function LoginForm() {\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var userContext = useContext(UserContext);\n\n  var _useState2 = useState(false),\n      logging = _useState2[0],\n      setLogging = _useState2[1];\n\n  var onChange = function onChange(e) {\n    e.target.name === \"username\" ? setUser(_objectSpread({}, user, {\n      username: e.target.value\n    })) : setUser(_objectSpread({}, user, {\n      password: e.target.value\n    }));\n  };\n\n  var onLogin =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLogging(true);\n              setTimeout(\n              /*#__PURE__*/\n              _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee() {\n                var userRes, userData;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return axios({\n                          method: \"POST\",\n                          data: user,\n                          url: \"\".concat(globalVars.serverURL, \"/users/authenticate-user\"),\n                          responseType: \"json\"\n                        });\n\n                      case 2:\n                        userRes = _context.sent;\n                        _context.next = 5;\n                        return userRes.data;\n\n                      case 5:\n                        userData = _context.sent;\n                        userData ? setLogging(false) : null;\n\n                        if (userData.msg === \"Success\") {\n                          userContext.setUser(userData.key);\n                        } else {\n                          alert(languages.en.somethingWentWrong);\n                        }\n\n                      case 8:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })), 5000);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, new stringMethods(languages.en.login).firstCharUpperCase().getString()), __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    onChange: onChange,\n    type: \"text\",\n    value: user.username,\n    text: \"username\",\n    title: new stringMethods(languages.en.username).firstCharUpperCase().getString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: user.password,\n    text: \"password\",\n    title: languages.en.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(Box, {\n    mt: \"2rem\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, logging ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }) : null, __jsx(Button, {\n    onClick: onLogin,\n    text: languages.en.login,\n    variant: \"contained\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx"],"names":["useState","useContext","axios","UserContext","TextInput","Button","LoadingSpinner","globalVars","languages","stringMethods","Typography","Box","LoginForm","username","password","user","setUser","userContext","logging","setLogging","onChange","e","target","name","value","onLogin","setTimeout","method","data","url","serverURL","responseType","userRes","userData","msg","key","alert","en","somethingWentWrong","login","firstCharUpperCase","getString"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport Button from \"./Button\";\nimport LoadingSpinner from \"../LoadingSpinner\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nconst LoginForm = () => {\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\n  const userContext = useContext(UserContext);\n  const [logging, setLogging] = useState(false);\n\n  const onChange = e => {\n    e.target.name === \"username\"\n      ? setUser({ ...user, username: e.target.value })\n      : setUser({ ...user, password: e.target.value });\n  };\n\n  const onLogin = async () => {\n    setLogging(true);\n    setTimeout(async() => {\n      const userRes = await axios({\n        method: \"POST\",\n        data: user,\n        url: `${globalVars.serverURL}/users/authenticate-user`,\n        responseType: \"json\"\n      });\n      const userData = await userRes.data;\n      userData ? setLogging(false) : null;\n      if (userData.msg === \"Success\") {\n        userContext.setUser(userData.key);\n      } else {\n        alert(languages.en.somethingWentWrong);\n      }\n    }, 5000)\n  };\n\n  return (\n    <>\n      <Typography component=\"h2\" variant=\"h4\" gutterBottom>\n        {new stringMethods(languages.en.login).firstCharUpperCase().getString()}\n      </Typography>\n      <form>\n        <TextInput\n          onChange={onChange}\n          type=\"text\"\n          value={user.username}\n          text=\"username\"\n          title={new stringMethods(languages.en.username)\n            .firstCharUpperCase()\n            .getString()}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={user.password}\n          text=\"password\"\n          title={languages.en.password}\n        />\n        <Box mt=\"2rem\" display=\"flex\" justifyContent=\"flex-end\">\n          {logging\n            ? <LoadingSpinner/>\n            : null}\n          <Button onClick={onLogin} text={languages.en.login} variant=\"contained\" disabled={true}/>\n        </Box>\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}