{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({\n  fields,\n  refreshList\n}) => {\n  const blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldOptions: []\n  };\n  useEffect(() => {\n    console.log(editedField);\n  });\n  const {\n    0: editedField,\n    1: setEditedField\n  } = useState(blankFieldObject);\n  const {\n    0: displayComponent,\n    1: setDisplayComponent\n  } = useState(false);\n  const fieldMethods = {\n    onNameChange(event) {\n      setEditedField(_objectSpread({}, editedField, {\n        fieldName: event.target.value\n      }));\n    },\n\n    onSelectChange(event) {\n      setEditedField(_objectSpread({}, editedField, {\n        fieldType: event.target.options[event.target.options.selectedIndex].value\n      }));\n    },\n\n    handleOptionSpawn() {\n      setEditedField(_objectSpread({}, editedField, {\n        fieldOptions: [...editedField.fieldOptions, {\n          id: uniqid(),\n          value: \"\"\n        }]\n      }));\n    },\n\n    changeDisplayComponent() {\n      displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n      setEditedField(blankFieldObject);\n    },\n\n    saveEditedField() {\n      const fieldIsUpdated = async () => {\n        const {\n          fieldName,\n          fieldType,\n          fieldOptions,\n          id\n        } = editedField;\n        const res = await axios({\n          method: \"put\",\n          url: `${globalVars.serverURL}/fields/${id}`,\n          data: {\n            fieldName,\n            fieldType,\n            fieldOptions\n          },\n          responseType: \"json\"\n        });\n        const data = await res.data;\n\n        if (data.msg === \"Success\") {\n          setDisplayComponent(false);\n          refreshList();\n        }\n      };\n\n      const fieldIsCreated = async () => {\n        const res = await axios({\n          method: \"post\",\n          url: `${globalVars.serverURL}/fields/`,\n          data: editedField,\n          responseType: \"json\"\n        });\n        const data = await res.data;\n\n        if (data.msg === \"Success\") {\n          refreshList();\n          setDisplayComponent(false);\n        }\n      };\n\n      !editedField.id ? fieldIsCreated() : fieldIsUpdated();\n    }\n\n  };\n\n  const deleteField = async event => {\n    const id = event.target.id;\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const onOptionChange = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(e => event.target.id === e.id ? e.value = event.target.value : e)\n    }));\n  };\n\n  const onOptionDelete = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(e => event.target.id !== e.id ? e : null)\n    }));\n  };\n\n  const setupEditedField = obj => {\n    setEditedField(obj);\n    setDisplayComponent(true);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Custom Client Fields\"), __jsx(CustomFieldsList, {\n    deleteField: deleteField,\n    fields: fields,\n    setupEditedField: setupEditedField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), __jsx(AddOrEditField, {\n    editedField: editedField,\n    displayComponent: displayComponent,\n    refreshList: refreshList,\n    fieldMethods: fieldMethods,\n    onOptionChange: onOptionChange,\n    onOptionDelete: onOptionDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n};\n\nexport default CustomClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx"],"names":["useState","useEffect","AddOrEditField","axios","globalVars","uniqid","CustomFieldsList","CustomClientFields","fields","refreshList","blankFieldObject","fieldName","fieldType","fieldOptions","console","log","editedField","setEditedField","displayComponent","setDisplayComponent","fieldMethods","onNameChange","event","target","value","onSelectChange","options","selectedIndex","handleOptionSpawn","id","changeDisplayComponent","saveEditedField","fieldIsUpdated","res","method","url","serverURL","data","responseType","msg","fieldIsCreated","deleteField","resData","onOptionChange","filter","e","onOptionDelete","setupEditedField","obj"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({ fields, refreshList }: any) => {\n  const blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldOptions: []\n  };\n\n  useEffect(() => {\n    console.log(editedField);\n  });\n\n  const [editedField, setEditedField] = useState<any>(blankFieldObject);\n  const [displayComponent, setDisplayComponent] = useState(false);\n\n  const fieldMethods = {\n    onNameChange(event: any) {\n      setEditedField({ ...editedField, fieldName: event.target.value });\n    },\n    onSelectChange(event: any) {\n      setEditedField({\n        ...editedField,\n        fieldType:\n          event.target.options[event.target.options.selectedIndex].value\n      });\n    },\n    handleOptionSpawn() {\n      setEditedField({\n        ...editedField,\n        fieldOptions: [...editedField.fieldOptions, { id: uniqid(), value: \"\" }]\n      });\n    },\n    changeDisplayComponent() {\n      displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n      setEditedField(blankFieldObject);\n    },\n    saveEditedField() {\n      const fieldIsUpdated = async () => {\n        const { fieldName, fieldType, fieldOptions, id } = editedField;\n        const res = await axios({\n          method: \"put\",\n          url: `${globalVars.serverURL}/fields/${id}`,\n          data: { fieldName, fieldType, fieldOptions },\n          responseType: \"json\"\n        });\n        const data = await res.data;\n        if (data.msg === \"Success\") {\n          setDisplayComponent(false);\n          refreshList();\n        }\n      };\n\n      const fieldIsCreated = async () => {\n        const res = await axios({\n          method: \"post\",\n          url: `${globalVars.serverURL}/fields/`,\n          data: editedField,\n          responseType: \"json\"\n        });\n        const data = await res.data;\n        if (data.msg === \"Success\") {\n          refreshList();\n          setDisplayComponent(false);\n        }\n      };\n      !editedField.id ? fieldIsCreated() : fieldIsUpdated();\n    }\n  };\n\n  const deleteField = async (event: any) => {\n    const id = event.target.id;\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const onOptionChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id === e.id ? (e.value = event.target.value) : e\n      )\n    });\n  };\n\n  const onOptionDelete = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id !== e.id ? e : null\n      )\n    });\n  };\n\n  const setupEditedField = (obj: any) => {\n    setEditedField(obj);\n    setDisplayComponent(true);\n  };\n\n  return (\n    <div>\n      <h2>Custom Client Fields</h2>\n      <CustomFieldsList\n        deleteField={deleteField}\n        fields={fields}\n        setupEditedField={setupEditedField}\n      />\n      <AddOrEditField\n        editedField={editedField}\n        displayComponent={displayComponent}\n        refreshList={refreshList}\n        fieldMethods={fieldMethods}\n        onOptionChange={onOptionChange}\n        onOptionDelete={onOptionDelete}\n      />\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"]},"metadata":{},"sourceType":"module"}