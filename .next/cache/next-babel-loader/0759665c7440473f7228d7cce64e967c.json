{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport Button from \"./Button\";\nimport LoadingSpinner from \"../LoadingSpinner\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nvar LoginForm = function LoginForm() {\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var userContext = useContext(UserContext);\n\n  var _useState2 = useState(false),\n      logging = _useState2[0],\n      setLogging = _useState2[1];\n\n  var onChange = function onChange(e) {\n    e.target.name === \"username\" ? setUser(_objectSpread({}, user, {\n      username: e.target.value\n    })) : setUser(_objectSpread({}, user, {\n      password: e.target.value\n    }));\n  };\n\n  var onLogin =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var userRes, userData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLogging(true);\n              _context.next = 3;\n              return axios({\n                method: \"POST\",\n                data: user,\n                url: \"\".concat(globalVars.serverURL, \"/users/authenticate-user\"),\n                responseType: \"json\"\n              });\n\n            case 3:\n              userRes = _context.sent;\n              _context.next = 6;\n              return userRes.data;\n\n            case 6:\n              userData = _context.sent;\n              setLogging(!!!userData);\n\n              if (userData.msg === \"Success\") {\n                userContext.setUser(userData.key);\n              } else {\n                alert(languages.en.somethingWentWrong);\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, new stringMethods(languages.en.login).firstCharUpperCase().getString()), __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    onChange: onChange,\n    type: \"text\",\n    value: user.username,\n    text: \"username\",\n    title: new stringMethods(languages.en.username).firstCharUpperCase().getString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: user.password,\n    text: \"password\",\n    title: languages.en.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(Box, {\n    mt: \"2rem\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, logging ? __jsx(LoadingSpinner, {\n    margin: \"r\",\n    level: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }) : null, __jsx(Button, {\n    onClick: onLogin,\n    text: languages.en.login,\n    variant: \"contained\",\n    disabled: logging,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx"],"names":["useState","useContext","axios","UserContext","TextInput","Button","LoadingSpinner","globalVars","languages","stringMethods","Typography","Box","LoginForm","username","password","user","setUser","userContext","logging","setLogging","onChange","e","target","name","value","onLogin","method","data","url","serverURL","responseType","userRes","userData","msg","key","alert","en","somethingWentWrong","login","firstCharUpperCase","getString"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport Button from \"./Button\";\nimport LoadingSpinner from \"../LoadingSpinner\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nconst LoginForm = () => {\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\n  const userContext = useContext(UserContext);\n  const [logging, setLogging] = useState(false);\n\n  const onChange = e => {\n    e.target.name === \"username\"\n      ? setUser({ ...user, username: e.target.value })\n      : setUser({ ...user, password: e.target.value });\n  };\n\n  const onLogin = async () => {\n    setLogging(true);\n    const userRes = await axios({\n      method: \"POST\",\n      data: user,\n      url: `${globalVars.serverURL}/users/authenticate-user`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n    setLogging(!!!userData)\n    if (userData.msg === \"Success\") {\n      userContext.setUser(userData.key);\n    } else {\n      alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  return (\n    <>\n      <Typography component=\"h2\" variant=\"h4\" gutterBottom>\n        {new stringMethods(languages.en.login).firstCharUpperCase().getString()}\n      </Typography>\n      <form>\n        <TextInput\n          onChange={onChange}\n          type=\"text\"\n          value={user.username}\n          text=\"username\"\n          title={new stringMethods(languages.en.username)\n            .firstCharUpperCase()\n            .getString()}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={user.password}\n          text=\"password\"\n          title={languages.en.password}\n        />\n        <Box mt=\"2rem\" display=\"flex\" justifyContent=\"flex-end\">\n          {logging ? <LoadingSpinner margin={\"r\"} level={1} /> : null}\n          <Button\n            onClick={onLogin}\n            text={languages.en.login}\n            variant={\"contained\"}\n            disabled={logging}\n          />\n        </Box>\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}