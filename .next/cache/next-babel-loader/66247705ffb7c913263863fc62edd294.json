{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard/[key].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../../components/Header\";\nimport ShowRecordsNumber from \"../../components/dashboard/ShowRecordsNumber\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport UserContext from \"../../components/UserContext\";\nimport CountContext from \"../../components/CountContext\";\nimport globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport languages from \"../../library/languages\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nvar Dashboard = function Dashboard(_ref) {\n  var lastCampaign = _ref.lastCampaign,\n      clientsLastWeek = _ref.clientsLastWeek,\n      clientCounter = _ref.clientCounter,\n      fieldCounter = _ref.fieldCounter,\n      emailsCounter = _ref.emailsCounter;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      initialized = _useState[0],\n      setInitialized = _useState[1];\n\n  var user = useContext(UserContext);\n  var counter = useContext(CountContext);\n  useEffect(function () {\n    var title = new stringMethods(router.pathname).removeSlash().removeSlashAndTextAfter().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n    counter.setCounters({\n      clientCounter: clientCounter,\n      fieldCounter: fieldCounter,\n      emailsCounter: emailsCounter\n    });\n  }, [router]);\n  var h1 = new stringMethods(router.pathname).removeSlash().removeSlashAndTextAfter().firstCharUpperCase().getString();\n  var campaignStr = lastCampaign.length > 0 ? \"\".concat(languages.en.last, \" \").concat(languages.en.sent, \" \").concat(lastCampaign[0].date, \" \").concat(languages.en.to.toLowerCase(), \" \").concat(lastCampaign[0].to.length, \" \").concat(lastCampaign[0].to.length > 1 ? languages.en.clients : languages.en.client) : \"\";\n  var lastWeekStr = \"\".concat(clientsLastWeek > 0 ? \"+\" : \"\", \" \").concat(clientsLastWeek, \" \").concat(languages.en.pastSevenDays);\n  return !initialized && !user.user.signedIn ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }) : __jsx(React.Fragment, null, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h3\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, h1), __jsx(Grid, {\n    container: true,\n    justify: \"space-around\",\n    alignItems: \"stretch\",\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(ShowRecordsNumber, {\n    data: clientCounter,\n    string: languages.en.clientsSaved,\n    buttonString: languages.en.clients,\n    subData: lastWeekStr,\n    link: \"/clients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(ShowRecordsNumber, {\n    data: fieldCounter.custom,\n    string: languages.en.customClientFields,\n    buttonString: languages.en.customClientFields,\n    subData: \"\".concat(fieldCounter.permanent + fieldCounter.custom, \" \").concat(languages.en.total),\n    link: \"/settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(ShowRecordsNumber, {\n    data: emailsCounter,\n    string: languages.en.emailsSent,\n    buttonString: languages.en.emails,\n    subData: campaignStr,\n    link: \"/emails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))));\n};\n\nDashboard.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var resLastCampaign, resLastWeekNumber, resClientCount, resFieldsData, resEmailsCount, lastCampaign, clientsLastWeek, clientCounter, fieldCounter, emailsCounter;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios(\"\".concat(globalVars.serverURL, \"/emails/last?key=\").concat(context.query.key));\n\n          case 2:\n            resLastCampaign = _context.sent;\n            _context.next = 5;\n            return axios(\"\".concat(globalVars.serverURL, \"/clients/last-week?key=\").concat(context.query.key));\n\n          case 5:\n            resLastWeekNumber = _context.sent;\n            _context.next = 8;\n            return axios(\"\".concat(globalVars.serverURL, \"/clients/count?key=\").concat(context.query.key));\n\n          case 8:\n            resClientCount = _context.sent;\n            _context.next = 11;\n            return axios(\"\".concat(globalVars.serverURL, \"/fields/count?key=\").concat(context.query.key));\n\n          case 11:\n            resFieldsData = _context.sent;\n            _context.next = 14;\n            return axios(\"\".concat(globalVars.serverURL, \"/emails/count?key=\").concat(context.query.key));\n\n          case 14:\n            resEmailsCount = _context.sent;\n            _context.next = 17;\n            return resLastCampaign.data;\n\n          case 17:\n            lastCampaign = _context.sent;\n            _context.next = 20;\n            return resLastWeekNumber.data;\n\n          case 20:\n            clientsLastWeek = _context.sent;\n            _context.next = 23;\n            return resClientCount.data;\n\n          case 23:\n            clientCounter = _context.sent;\n            _context.next = 26;\n            return resFieldsData.data;\n\n          case 26:\n            fieldCounter = _context.sent;\n            _context.next = 29;\n            return resEmailsCount.data;\n\n          case 29:\n            emailsCounter = _context.sent;\n            return _context.abrupt(\"return\", {\n              lastCampaign: lastCampaign,\n              clientsLastWeek: clientsLastWeek,\n              clientCounter: clientCounter,\n              fieldCounter: fieldCounter,\n              emailsCounter: emailsCounter\n            });\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard/[key].tsx"],"names":["useEffect","useState","useContext","useRouter","axios","Header","ShowRecordsNumber","LoadingSpinner","UserContext","CountContext","globalVars","stringMethods","languages","Typography","Grid","Dashboard","lastCampaign","clientsLastWeek","clientCounter","fieldCounter","emailsCounter","router","initialized","setInitialized","user","counter","title","pathname","removeSlash","removeSlashAndTextAfter","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","checkUser","setCounters","h1","campaignStr","length","en","last","sent","date","to","toLowerCase","clients","client","lastWeekStr","pastSevenDays","signedIn","clientsSaved","custom","customClientFields","permanent","total","emailsSent","emails","getInitialProps","context","serverURL","query","key","resLastCampaign","resLastWeekNumber","resClientCount","resFieldsData","resEmailsCount","data"],"mappings":"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","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../../components/Header\";\nimport ShowRecordsNumber from \"../../components/dashboard/ShowRecordsNumber\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport UserContext from \"../../components/UserContext\";\nimport CountContext from \"../../components/CountContext\";\nimport globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport languages from \"../../library/languages\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nconst Dashboard = ({\n  lastCampaign,\n  clientsLastWeek,\n  clientCounter,\n  fieldCounter,\n  emailsCounter\n}: any) => {\n  const router = useRouter();\n  const [initialized, setInitialized] = useState(false);\n  const user = useContext(UserContext);\n  const counter = useContext(CountContext);\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .removeSlashAndTextAfter()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n    counter.setCounters({ clientCounter, fieldCounter, emailsCounter });\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .removeSlashAndTextAfter()\n    .firstCharUpperCase()\n    .getString();\n\n  const campaignStr =\n    lastCampaign.length > 0\n      ? `${languages.en.last} ${languages.en.sent} ${\n          lastCampaign[0].date\n        } ${languages.en.to.toLowerCase()} ${lastCampaign[0].to.length} ${\n          lastCampaign[0].to.length > 1\n            ? languages.en.clients\n            : languages.en.client\n        }`\n      : \"\";\n\n  const lastWeekStr = `${clientsLastWeek > 0 ? \"+\" : \"\"} ${clientsLastWeek} ${\n    languages.en.pastSevenDays\n  }`;\n  return !initialized && !user.user.signedIn ? (\n    <LoadingSpinner />\n  ) : (\n    <>\n      <Header />\n      <Typography component=\"h1\" variant=\"h3\" gutterBottom>\n        {h1}\n      </Typography>\n      <Grid container justify=\"space-around\" alignItems=\"stretch\" spacing={4}>\n        <Grid item xs={12} md={4}>\n          <ShowRecordsNumber\n            data={clientCounter}\n            string={languages.en.clientsSaved}\n            buttonString={languages.en.clients}\n            subData={lastWeekStr}\n            link={\"/clients\"}\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <ShowRecordsNumber\n            data={fieldCounter.custom}\n            string={languages.en.customClientFields}\n            buttonString={languages.en.customClientFields}\n            subData={`${fieldCounter.permanent + fieldCounter.custom} ${\n              languages.en.total\n            }`}\n            link={\"/settings\"}\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <ShowRecordsNumber\n            data={emailsCounter}\n            string={languages.en.emailsSent}\n            buttonString={languages.en.emails}\n            subData={campaignStr}\n            link={\"/emails\"}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nDashboard.getInitialProps = async context => {\n  const resLastCampaign = await axios(\n    `${globalVars.serverURL}/emails/last?key=${context.query.key}`\n  );\n\n  const resLastWeekNumber = await axios(\n    `${globalVars.serverURL}/clients/last-week?key=${context.query.key}`\n  );\n\n  const resClientCount = await axios(\n    `${globalVars.serverURL}/clients/count?key=${context.query.key}`\n  );\n\n  const resFieldsData = await axios(\n    `${globalVars.serverURL}/fields/count?key=${context.query.key}`\n  );\n\n  const resEmailsCount = await axios(\n    `${globalVars.serverURL}/emails/count?key=${context.query.key}`\n  );\n\n  const lastCampaign = await resLastCampaign.data;\n  const clientsLastWeek = await resLastWeekNumber.data;\n  const clientCounter = await resClientCount.data;\n  const fieldCounter = await resFieldsData.data;\n  const emailsCounter = await resEmailsCount.data;\n\n  return {\n    lastCampaign,\n    clientsLastWeek,\n    clientCounter,\n    fieldCounter,\n    emailsCounter\n  };\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}