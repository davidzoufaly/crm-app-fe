{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/TableHead.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport uniqid from \"uniqid\";\nimport languages from \"../../library/languages\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport { Button, TableCell, Typography, Checkbox } from \"@material-ui/core\";\n\nconst TableHeader = ({\n  fields,\n  sortBy,\n  sort,\n  handleCheckAll,\n  allCheck\n}) => {\n  const tableHeadings = fields.sort((a, b) => +b.fieldPermanent > +a.fieldPermanent ? -1 : 1).map(e => {\n    return __jsx(TableCell, {\n      key: uniqid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: () => sortBy(e.fieldName),\n      startIcon: __jsx(KeyboardArrowDownIcon, {\n        color: sort.sortBy === e.fieldName ? \"secondary\" : \"primary\",\n        style: sort.reverse && sort.sortBy === e.fieldName ? {\n          transform: \"rotate(180deg)\"\n        } : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, e.fieldName));\n  });\n  return __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    key: uniqid(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    color: \"primary\",\n    checked: allCheck,\n    onChange: () => handleCheckAll(),\n    inputProps: {\n      \"aria-label\": \"primary checkbox\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), tableHeadings, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, languages.en.clientProfile))));\n};\n\nexport default TableHeader;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/TableHead.tsx"],"names":["uniqid","languages","TableHead","TableRow","KeyboardArrowDownIcon","Button","TableCell","Typography","Checkbox","TableHeader","fields","sortBy","sort","handleCheckAll","allCheck","tableHeadings","a","b","fieldPermanent","map","e","fieldName","reverse","transform","en","clientProfile"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAwCC,QAAxC,QAAwD,mBAAxD;;AAUA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,IAAlB;AAAwBC,EAAAA,cAAxB;AAAwCC,EAAAA;AAAxC,CAAD,KAAgE;AAClF,QAAMC,aAAa,GAAGL,MAAM,CAC3BE,IADqB,CAChB,CAACI,CAAD,EAAGC,CAAH,KAAS,CAACA,CAAC,CAACC,cAAH,GAAoB,CAACF,CAAC,CAACE,cAAvB,GAAwC,CAAC,CAAzC,GAA6C,CADtC,EAErBC,GAFqB,CAEhBC,CAAD,IAAY;AACf,WACI,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEpB,MAAM,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAMW,MAAM,CAACS,CAAC,CAACC,SAAH,CADvB;AAEE,MAAA,SAAS,EACP,MAAC,qBAAD;AACE,QAAA,KAAK,EAAET,IAAI,CAACD,MAAL,KAAgBS,CAAC,CAACC,SAAlB,GAA8B,WAA9B,GAA4C,SADrD;AAEE,QAAA,KAAK,EACHT,IAAI,CAACU,OAAL,IAAgBV,IAAI,CAACD,MAAL,KAAgBS,CAAC,CAACC,SAAlC,GACI;AAAEE,UAAAA,SAAS,EAAE;AAAb,SADJ,GAEI,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaGH,CAAC,CAACC,SAbL,CADF,CADJ;AAmBD,GAtBqB,CAAtB;AAwBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,GAAG,EAAErB,MAAM,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEc,QAFX;AAGE,IAAA,QAAQ,EAAE,MAAMD,cAAc,EAHhC;AAIE,IAAA,UAAU,EAAE;AACV,oBAAc;AADJ,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAWGE,aAXH,EAYE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8Bd,SAAS,CAACuB,EAAV,CAAaC,aAA3C,CADF,CAZF,CADF,CADF;AAoBD,CA7CD;;AA+CA,eAAehB,WAAf","sourcesContent":["import uniqid from \"uniqid\";\nimport languages from \"../../library/languages\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport { Button, TableCell, Typography, Checkbox } from \"@material-ui/core\";\n\ninterface IProps {\n  sortBy: any;\n  fields: any;\n  sort: any;\n  handleCheckAll: any;\n  allCheck: boolean;\n}\n\nconst TableHeader = ({ fields, sortBy, sort, handleCheckAll, allCheck }: IProps) => {\n  const tableHeadings = fields\n  .sort((a,b) => +b.fieldPermanent > +a.fieldPermanent ? -1 : 1)\n  .map((e: any) => {\n    return (\n        <TableCell key={uniqid()}>\n          <Button\n            onClick={() => sortBy(e.fieldName)}\n            startIcon={\n              <KeyboardArrowDownIcon\n                color={sort.sortBy === e.fieldName ? \"secondary\" : \"primary\"}\n                style={\n                  sort.reverse && sort.sortBy === e.fieldName\n                    ? { transform: \"rotate(180deg)\" }\n                    : null\n                }\n              />\n            }\n          >\n            {e.fieldName}\n          </Button>\n        </TableCell>\n    );\n  });\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell key={uniqid()}>\n          <Checkbox\n            color=\"primary\"\n            checked={allCheck}\n            onChange={() => handleCheckAll()}\n            inputProps={{\n              \"aria-label\": \"primary checkbox\"\n            }}\n          />\n        </TableCell>\n        {tableHeadings}\n        <TableCell>\n          <Typography variant=\"button\">{languages.en.clientProfile}</Typography>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default TableHeader;\n"]},"metadata":{},"sourceType":"module"}