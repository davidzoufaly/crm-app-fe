{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/Header.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Grid, Button, Toolbar, AppBar, Box, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nconst useStyles = makeStyles(theme => createStyles({\n  menuButton: {\n    color: theme.palette.grey[\"50\"],\n    padding: \"0.5rem 1.5rem\",\n    margin: theme.spacing(1)\n  },\n  active: {},\n  title: {\n    flexGrow: 1\n  },\n  toolBar: {\n    padding: 0\n  },\n  mobilMenuButton: {\n    color: theme.palette.grey[\"50\"],\n    display: \"none\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  menuGrid: {\n    flexDirection: \"row\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDireciton: \"column\"\n    }\n  },\n  navMobil: {\n    position: \"absolute\",\n    left: 0,\n    backgroundColor: \"black\",\n    display: \"block\",\n    width: \"100%\",\n    top: \"100%\",\n    zIndex: -1,\n    padding: \"2rem\"\n  },\n  navDesktop: {\n    position: \"relative\",\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"block\"\n    }\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles({});\n  const theme = useTheme();\n  const user = useContext(UserContext);\n  const matches = useMediaQuery(theme.breakpoints.down('sm'));\n  const {\n    0: mobilMenu,\n    1: setMobilMenu\n  } = useState(false);\n\n  const toggleMenu = () => {\n    setMobilMenu(prevState => !prevState);\n  };\n\n  useEffect(() => {\n    !matches ? setMobilMenu(false) : null;\n  }, [matches]);\n  return __jsx(AppBar, {\n    position: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    className: classes.toolBar,\n    style: {\n      position: \"relative\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(Box, {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: toggleMenu,\n    className: classes.mobilMenuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, !mobilMenu ? __jsx(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }) : __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), __jsx(Box, {\n    component: \"nav\",\n    className: mobilMenu ? classes.navMobil : classes.navDesktop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    direction: mobilMenu ? \"column\" : \"row\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/dashboard/[key]\",\n    as: `/dashboard/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, languages.en.dashboard))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/clients/[key]\",\n    as: `/clients/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(PeopleAltIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, languages.en.clients))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/emails/[key]\",\n    as: `/emails/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(EmailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, languages.en.emails))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/settings/[key]\",\n    as: `/settings/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, languages.en.settings)))))), __jsx(Button, {\n    className: classes.menuButton,\n    onClick: () => user.logoutUser(),\n    startIcon: __jsx(ExitToAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, languages.en.logout))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/Header.tsx"],"names":["useContext","useState","useEffect","Link","languages","UserContext","createStyles","makeStyles","Container","DashboardIcon","PeopleAltIcon","EmailIcon","useMediaQuery","useTheme","SettingsIcon","ExitToAppIcon","Grid","Button","Toolbar","AppBar","Box","IconButton","MenuIcon","CloseIcon","useStyles","theme","menuButton","color","palette","grey","padding","margin","spacing","active","title","flexGrow","toolBar","mobilMenuButton","display","breakpoints","down","menuGrid","flexDirection","flexDireciton","navMobil","position","left","backgroundColor","width","top","zIndex","navDesktop","up","Header","classes","user","matches","mobilMenu","setMobilMenu","toggleMenu","prevState","userkey","en","dashboard","clients","emails","settings","logoutUser","logout"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport {\n  Grid,\n  Button,\n  Toolbar,\n  AppBar,\n  Box,\n  IconButton\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    menuButton: {\n      color: theme.palette.grey[\"50\"],\n      padding: \"0.5rem 1.5rem\",\n      margin: theme.spacing(1)\n    },\n    active: {\n\n    },\n    title: {\n      flexGrow: 1\n    },\n    toolBar: {\n      padding: 0\n    },\n    mobilMenuButton: {\n      color: theme.palette.grey[\"50\"],\n      display: \"none\",\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    menuGrid: {\n      flexDirection: \"row\",\n      [theme.breakpoints.down(\"sm\")]: {\n        flexDireciton: \"column\"\n      }\n    },\n    navMobil: {\n        position: \"absolute\",\n        left: 0,\n        backgroundColor: \"black\",\n        display: \"block\",\n        width: \"100%\",\n        top: \"100%\",\n        zIndex: -1,\n        padding: \"2rem\",\n    },\n    navDesktop: {\n      position: \"relative\",\n      display: \"none\", [theme.breakpoints.up(\"md\")]: {\n        display: \"block\"\n      }\n    }\n  })\n);\n\nconst Header = () => {\n  const classes = useStyles({});\n  const theme = useTheme();\n  const user = useContext(UserContext);\n  const matches = useMediaQuery(theme.breakpoints.down('sm'))\n  const [mobilMenu, setMobilMenu] = useState(false);\n\n  const toggleMenu = () => {\n    setMobilMenu(prevState => !prevState);\n  };\n\n  useEffect(() => {\n    !matches ? setMobilMenu(false) : null\n  }, [matches])\n\n  return (\n    <AppBar position=\"fixed\">\n      <Container maxWidth=\"xl\">\n        <Toolbar className={classes.toolBar} style={{position: \"relative\"}}>\n          <Box display=\"flex\" width=\"100%\" justifyContent=\"space-between\">\n            <IconButton\n              onClick={toggleMenu}\n              className={classes.mobilMenuButton}\n            >\n              {!mobilMenu ? <MenuIcon /> : <CloseIcon />}\n            </IconButton>\n            <Box\n              component=\"nav\"\n              className={mobilMenu ? classes.navMobil : classes.navDesktop}\n            >\n              <Grid\n                container\n                direction={mobilMenu ? \"column\" : \"row\"}\n                justify=\"center\"\n              >\n                <Grid item>\n                  <Link\n                    href=\"/dashboard/[key]\"\n                    as={`/dashboard/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<DashboardIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.dashboard}\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    href=\"/clients/[key]\"\n                    as={`/clients/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<PeopleAltIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.clients}\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    href=\"/emails/[key]\"\n                    as={`/emails/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<EmailIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.emails}\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    href=\"/settings/[key]\"\n                    as={`/settings/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<SettingsIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.settings}\n                    </Button>\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n          <Button\n            className={classes.menuButton}\n            onClick={() => user.logoutUser()}\n            startIcon={<ExitToAppIcon />}\n          >\n            {languages.en.logout}\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}