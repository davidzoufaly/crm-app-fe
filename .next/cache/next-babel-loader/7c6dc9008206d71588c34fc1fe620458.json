{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormList.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport languages from \"../../../library/languages\";\nimport { Typography, Box, ListItem, List, IconButton } from \"@material-ui/core\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { useEffect } from \"react\";\nimport { removeFromList } from \"../../../actions\";\n\nconst WebFormList = ({\n  state,\n  dispatch\n}) => {\n  const list = state.filter(el => el.fieldInForm).sort((a, b) => a.order - b.order).map(({\n    _id,\n    fieldName,\n    fieldFormVisible,\n    fieldOptions,\n    fieldType\n  }) => {\n    const strFormVisible = fieldFormVisible ? ` - ${languages.en.visibleInForm}` : null;\n    const strFormNotVisible1 = !fieldFormVisible ? fieldType === \"select\" ? ` - ${languages.en.hiddenInForm}` : null : null;\n    const strFormNotVisible2 = !fieldFormVisible ? fieldType === \"select\" ? fieldOptions.map(e => e.preselected ? e.value : null).join(\"\") : null : null;\n    const strFormNotVisible3 = !fieldFormVisible ? fieldType === \"select\" ? languages.en.asPreselected : null : null;\n    languages.en.asPreselected;\n    return __jsx(ListItem, {\n      key: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      id: fieldName,\n      onClick: () => removeFromList(dispatch, event),\n      color: \"secondary\",\n      style: {\n        marginRight: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(HighlightOffIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, fieldName), strFormVisible, strFormNotVisible1, \" \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, strFormNotVisible2), \" \", strFormNotVisible3));\n  });\n  useEffect(() => {\n    console.log(list);\n  });\n  return __jsx(Box, {\n    mb: \"2rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"h3\",\n    variant: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, languages.en.selectedFields), state.some(e => e.fieldInForm) ? __jsx(List, {\n    dense: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, list) : __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, languages.en.noFieldsSelected));\n};\n\nexport default WebFormList;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormList.tsx"],"names":["languages","Typography","Box","ListItem","List","IconButton","HighlightOffIcon","useEffect","removeFromList","WebFormList","state","dispatch","list","filter","el","fieldInForm","sort","a","b","order","map","_id","fieldName","fieldFormVisible","fieldOptions","fieldType","strFormVisible","en","visibleInForm","strFormNotVisible1","hiddenInForm","strFormNotVisible2","e","preselected","value","join","strFormNotVisible3","asPreselected","event","marginRight","console","log","selectedFields","some","noFieldsSelected"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,QAA1B,EAAoCC,IAApC,EAA0CC,UAA1C,QAA4D,mBAA5D;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAC3C,QAAMC,IAAI,GAAGF,KAAK,CACfG,MADU,CACHC,EAAE,IAAIA,EAAE,CAACC,WADN,EAEVC,IAFU,CAEL,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAFjB,EAGVC,GAHU,CAIT,CAAC;AACCC,IAAAA,GADD;AAECC,IAAAA,SAFD;AAGCC,IAAAA,gBAHD;AAICC,IAAAA,YAJD;AAKCC,IAAAA;AALD,GAAD,KAMM;AACJ,UAAMC,cAAc,GAAGH,gBAAgB,GAClC,MAAKvB,SAAS,CAAC2B,EAAV,CAAaC,aAAc,EADE,GAEnC,IAFJ;AAIA,UAAMC,kBAAkB,GAAG,CAACN,gBAAD,GACvBE,SAAS,KAAK,QAAd,GACG,MAAKzB,SAAS,CAAC2B,EAAV,CAAaG,YAAa,EADlC,GAEE,IAHqB,GAIvB,IAJJ;AAMA,UAAMC,kBAAkB,GAAG,CAACR,gBAAD,GACvBE,SAAS,KAAK,QAAd,GACED,YAAY,CAACJ,GAAb,CAAiBY,CAAC,IAAKA,CAAC,CAACC,WAAF,GAAgBD,CAAC,CAACE,KAAlB,GAA0B,IAAjD,EAAwDC,IAAxD,CAA6D,EAA7D,CADF,GAEE,IAHqB,GAIvB,IAJJ;AAMA,UAAMC,kBAAkB,GAAG,CAACb,gBAAD,GACvBE,SAAS,KAAK,QAAd,GACEzB,SAAS,CAAC2B,EAAV,CAAaU,aADf,GAEE,IAHqB,GAIvB,IAJJ;AAMArC,IAAAA,SAAS,CAAC2B,EAAV,CAAaU,aAAb;AAEA,WACE,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEhB,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,EAAE,EAAEC,SADN;AAEE,MAAA,OAAO,EAAE,MAAMd,cAAc,CAACG,QAAD,EAAW2B,KAAX,CAF/B;AAGE,MAAA,KAAK,EAAC,WAHR;AAIE,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASjB,SAAT,CATF,EAUGI,cAVH,EAWGG,kBAXH,OAWuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASE,kBAAT,CAXvB,EAW6D,GAX7D,EAYGK,kBAZH,CADF,CADF;AAkBD,GArDQ,CAAb;AAwDA7B,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,OAAO,CAACC,GAAR,CAAY7B,IAAZ;AACD,GAFQ,CAAT;AAIA,SACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,SAAS,CAAC2B,EAAV,CAAae,cADhB,CADF,EAIGhC,KAAK,CAACiC,IAAN,CAAWX,CAAC,IAAIA,CAAC,CAACjB,WAAlB,IACC,MAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaH,IAAb,CADD,GAGC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaZ,SAAS,CAAC2B,EAAV,CAAaiB,gBAA1B,CAPJ,CADF;AAYD,CAzED;;AA2EA,eAAenC,WAAf","sourcesContent":["import languages from \"../../../library/languages\";\nimport { Typography, Box, ListItem, List, IconButton } from \"@material-ui/core\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { useEffect } from \"react\";\nimport { removeFromList } from \"../../../actions\";\n\nconst WebFormList = ({ state, dispatch }) => {\n  const list = state\n    .filter(el => el.fieldInForm)\n    .sort((a, b) => a.order - b.order)\n    .map(\n      ({\n        _id,\n        fieldName,\n        fieldFormVisible,\n        fieldOptions,\n        fieldType\n      }) => {\n        const strFormVisible = fieldFormVisible\n          ? ` - ${languages.en.visibleInForm}`\n          : null;\n\n        const strFormNotVisible1 = !fieldFormVisible\n          ? fieldType === \"select\"\n            ? ` - ${languages.en.hiddenInForm}`\n            : null\n          : null;\n\n        const strFormNotVisible2 = !fieldFormVisible\n          ? fieldType === \"select\"\n            ? fieldOptions.map(e => (e.preselected ? e.value : null)).join(\"\")\n            : null\n          : null;\n\n        const strFormNotVisible3 = !fieldFormVisible\n          ? fieldType === \"select\"\n            ? languages.en.asPreselected\n            : null\n          : null;\n\n        languages.en.asPreselected;\n\n        return (\n          <ListItem key={_id}>\n            <Typography>\n              <IconButton\n                id={fieldName}\n                onClick={() => removeFromList(dispatch, event)}\n                color=\"secondary\"\n                style={{ marginRight: \"1rem\" }}\n              >\n                <HighlightOffIcon />\n              </IconButton>\n              <strong>{fieldName}</strong>\n              {strFormVisible}\n              {strFormNotVisible1} <strong>{strFormNotVisible2}</strong>{\" \"}\n              {strFormNotVisible3}\n            </Typography>\n          </ListItem>\n        )\n      }\n    );\n\n  useEffect(() => {\n    console.log(list);\n  });\n\n  return (\n    <Box mb=\"2rem\">\n      <Typography component=\"h3\" variant=\"h5\" gutterBottom>\n        {languages.en.selectedFields}\n      </Typography>\n      {state.some(e => e.fieldInForm) ? (\n        <List dense>{list}</List>\n      ) : (\n        <Typography>{languages.en.noFieldsSelected}</Typography>\n      )}\n    </Box>\n  );\n};\n\nexport default WebFormList;\n"]},"metadata":{},"sourceType":"module"}