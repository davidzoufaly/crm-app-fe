{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport UsernameInput from \"./UsernameInput\";\nimport PasswordInput from \"./PasswordInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\n\nconst LoginForm = () => {\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const userContext = useContext(UserContext);\n\n  const onChange = e => {\n    e.target.name === \"username\" ? setUser(_objectSpread({}, user, {\n      username: e.target.value\n    })) : setUser(_objectSpread({}, user, {\n      password: e.target.value\n    }));\n  };\n\n  const onLogin = async () => {\n    const userRes = await axios({\n      method: \"POST\",\n      data: user,\n      url: `${globalVars.serverURL}/users`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n\n    if (userData.msg === \"Success\") {\n      userContext.setUser(user.username);\n    } else {\n      alert(\"Incorrect username or password\");\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, languages.en.username), __jsx(UsernameInput, {\n    onChange: onChange,\n    username: user.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, languages.en.password), __jsx(PasswordInput, {\n    onChange: onChange,\n    password: user.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(LoginButton, {\n    onClick: onLogin,\n    text: languages.en.login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx"],"names":["useState","useContext","axios","UserContext","UsernameInput","PasswordInput","LoginButton","globalVars","languages","LoginForm","user","setUser","username","password","userContext","onChange","e","target","name","value","onLogin","userRes","method","data","url","serverURL","responseType","userData","msg","alert","en","login"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,UAAxB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC;AAACY,IAAAA,QAAQ,EAAG,EAAZ;AAAgBC,IAAAA,QAAQ,EAAG;AAA3B,GAAD,CAAhC;AACA,QAAMC,WAAW,GAAGb,UAAU,CAACE,WAAD,CAA9B;;AAEA,QAAMY,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,UAAlB,GACMP,OAAO,mBAAKD,IAAL;AAAWE,MAAAA,QAAQ,EAAEI,CAAC,CAACC,MAAF,CAASE;AAA9B,OADb,GAEMR,OAAO,mBAAKD,IAAL;AAAWG,MAAAA,QAAQ,EAAEG,CAAC,CAACC,MAAF,CAASE;AAA9B,OAFb;AAGH,GAJD;;AAMA,QAAMC,OAAO,GAAG,YAAW;AACvB,UAAMC,OAAO,GAAG,MAAMnB,KAAK,CAAC;AACxBoB,MAAAA,MAAM,EAAE,MADgB;AAExBC,MAAAA,IAAI,EAAEb,IAFkB;AAGxBc,MAAAA,GAAG,EAAG,GAAEjB,UAAU,CAACkB,SAAU,QAHL;AAIxBC,MAAAA,YAAY,EAAE;AAJU,KAAD,CAA3B;AAMA,UAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACE,IAA/B;;AACA,QAAGI,QAAQ,CAACC,GAAT,KAAiB,SAApB,EAA+B;AAC3Bd,MAAAA,WAAW,CAACH,OAAZ,CAAoBD,IAAI,CAACE,QAAzB;AACH,KAFD,MAEO;AACHiB,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;AACJ,GAbD;;AAeA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIrB,SAAS,CAACsB,EAAV,CAAalB,QAAjB,CADJ,EAEI,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEG,QAAzB;AAAmC,IAAA,QAAQ,EAAEL,IAAI,CAACE,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,SAAS,CAACsB,EAAV,CAAajB,QAAjB,CAHJ,EAII,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEE,QAAzB;AAAmC,IAAA,QAAQ,EAAEL,IAAI,CAACG,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEO,OAAtB;AAA+B,IAAA,IAAI,EAAEZ,SAAS,CAACsB,EAAV,CAAaC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAFJ,CADJ;AAYH,CArCD;;AAuCA,eAAetB,SAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport UsernameInput from \"./UsernameInput\";\nimport PasswordInput from \"./PasswordInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\n\nconst LoginForm = () => {\n    const [user, setUser] = useState({username : \"\", password : \"\" });\n    const userContext = useContext(UserContext);\n\n    const onChange = (e) =>Â {\n        e.target.name === \"username\"\n            ? setUser({...user, username: e.target.value})\n            : setUser({...user, password: e.target.value})\n    }\n\n    const onLogin = async() => {\n        const userRes = await axios({\n            method: \"POST\",\n            data: user,\n            url: `${globalVars.serverURL}/users`,\n            responseType: \"json\"\n        })\n        const userData = await userRes.data;\n        if(userData.msg === \"Success\") {\n            userContext.setUser(user.username);\n        } else {\n            alert(\"Incorrect username or password\")\n        }\n    }\n\n    return (\n        <>  \n            <h2>Login</h2>\n            <form> \n                <p>{languages.en.username}</p>\n                <UsernameInput onChange={onChange} username={user.username}/>\n                <p>{languages.en.password}</p>\n                <PasswordInput onChange={onChange} password={user.password}/>\n                <LoginButton onClick={onLogin} text={languages.en.login} />\n            </form>\n        </>\n    )\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}