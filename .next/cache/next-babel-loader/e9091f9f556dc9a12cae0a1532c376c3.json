{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\nimport ClientsList from \"../components/ClientList\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\"; //TODO: TABULKA DYNAMICKÉ ZÁHLAVÍ\n//TODO: PŘIDAT NOVÉHO KLIENTA\n\nconst Clients = props => {\n  const router = useRouter();\n  const {\n    0: clients,\n    1: setClientList\n  } = useState([]);\n  const {\n    0: reverse,\n    1: setReverseOrder\n  } = useState(false);\n  const {\n    0: sort,\n    1: setSortBy\n  } = useState(\"dateAdded\");\n  const {\n    0: headingOne,\n    1: setHeadingOne\n  } = useState(\"\");\n  useEffect(() => {\n    setClientList(props.data);\n    setHeadingOne(new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString());\n  }, [props.data]);\n  useEffect(() => {\n    const title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n  }, [router]);\n\n  const sortBy = () => {\n    setSortBy(\"age\");\n    reverse === false ? setReverseOrder(true) : setReverseOrder(false);\n  };\n\n  if (clients.length === 0) {\n    return \"Loading\";\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, headingOne), __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Date Added\")), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Name\")), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: sortBy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Age\")), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Address\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(ClientsList, {\n    clients: clients,\n    sort: sort,\n    reverse: reverse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))));\n};\n\nClients.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return {\n    data\n  };\n};\n\nexport default Clients;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients.tsx"],"names":["useState","useEffect","useRouter","axios","Header","ClientsList","stringMethods","globalVars","Clients","props","router","clients","setClientList","reverse","setReverseOrder","sort","setSortBy","headingOne","setHeadingOne","data","pathname","removeSlash","firstCharUpperCase","getString","title","addStringToEnd","titleSubText","document","sortBy","length","getInitialProps","res","method","url","serverURL","responseType"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\nimport ClientsList from \"../components/ClientList\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\n\n\n//TODO: TABULKA DYNAMICKÉ ZÁHLAVÍ\n//TODO: PŘIDAT NOVÉHO KLIENTA\n\n\nconst Clients = (props: any) => {\n  const router = useRouter();\n\n  const [clients, setClientList] = useState([]);\n  const [reverse, setReverseOrder] = useState(false);\n  const [sort, setSortBy] = useState(\"dateAdded\");\n  const [headingOne, setHeadingOne] = useState(\"\");\n\n  useEffect(() => {\n    setClientList(props.data);\n    setHeadingOne(\n      new stringMethods(router.pathname)\n        .removeSlash()\n        .firstCharUpperCase()\n        .getString()\n    );\n  }, [props.data])\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n  }, [router]);\n\n  const sortBy = () => {\n    setSortBy(\"age\");\n    reverse === false ? setReverseOrder(true) : setReverseOrder(false);\n  }\n\n  if (clients.length === 0) {\n    return \"Loading\";\n  }\n  return (\n    <div>\n      <Header />\n      <h1>{headingOne}</h1>\n      <table>\n        <thead>\n          <tr>\n            <th><button>Date Added</button></th>\n            <th><button>Name</button></th>\n            <th><button onClick={sortBy}>Age</button></th>\n            <th>Address</th>\n          </tr>\n        </thead>\n        <tbody>\n          <ClientsList clients={clients} sort={sort} reverse={reverse}/>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nClients.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return {\n    data\n  };\n};\n\nexport default Clients;\n"]},"metadata":{},"sourceType":"module"}