{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFields from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({\n  fields,\n  refreshList\n}) => {\n  const {\n    0: editedField,\n    1: setEditedField\n  } = useState({\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false\n  });\n\n  const saveEditedField = async () => {\n    const res = await axios({\n      method: \"post\",\n      url: `${globalVars.serverURL}/fields/`,\n      data: editedField,\n      responseType: \"json\"\n    });\n    const data = await res.data; // data.msg === \"Success\" ? changeDisplayComponent() : null;\n\n    console.log(data);\n    refreshList();\n  };\n\n  const deleteField = async event => {\n    const id = event.target.id;\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const onNameChange = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldName: event.target.value\n    }));\n    console.log(editedField);\n  };\n\n  const onSelectChange = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    }));\n  };\n\n  const handleOptionSpawn = () => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: [...editedField.fieldOptions, {\n        id: uniqid(),\n        value: \"\"\n      }]\n    }));\n  };\n\n  const onOptionChange = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(e => event.target.id === e.id ? e.value = event.target.value : e)\n    }));\n  };\n\n  const onOptionDelete = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(e => event.target.id !== e.id ? e : null)\n    }));\n  }; // const setupEditedField = (obj ? : any) => {\n  //   setEditedField(obj);\n  // }\n\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Custom Client Fields\"), __jsx(CustomFields, {\n    deleteField: deleteField,\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(AddOrEditField, {\n    editedField: editedField,\n    refreshList: refreshList,\n    saveEditedField: saveEditedField,\n    onNameChange: onNameChange,\n    onSelectChange: onSelectChange,\n    handleOptionSpawn: handleOptionSpawn,\n    onOptionChange: onOptionChange,\n    onOptionDelete: onOptionDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n};\n\nexport default CustomClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx"],"names":["useState","AddOrEditField","axios","globalVars","uniqid","CustomFields","CustomClientFields","fields","refreshList","editedField","setEditedField","fieldName","fieldType","fieldPermanent","saveEditedField","res","method","url","serverURL","data","responseType","console","log","deleteField","event","id","target","resData","msg","onNameChange","value","onSelectChange","options","selectedIndex","handleOptionSpawn","fieldOptions","onOptionChange","filter","e","onOptionDelete"],"mappings":"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","sourcesContent":["\nimport { useState } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFields from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({ fields, refreshList }: any) => {\n  const [editedField, setEditedField] = useState({\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false,\n  })\n\n  const saveEditedField = async () => {\n    const res = await axios({\n      method: \"post\",\n      url: `${globalVars.serverURL}/fields/`,\n      data: editedField,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    // data.msg === \"Success\" ? changeDisplayComponent() : null;\n    console.log(data);\n    refreshList();\n  };\n\n  const deleteField = async (event : any) =>Â {\n    const id = event.target.id;\n    const res = await axios({\n        method: \"delete\",\n        url:`${globalVars.serverURL}/fields/${id}`,\n        responseType: \"json\"\n    })\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  }\n\n  const onNameChange = (event: any) => {\n    setEditedField({ ...editedField, fieldName: event.target.value});\n    console.log(editedField);\n  };\n\n  const onSelectChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    });\n  };\n\n  const handleOptionSpawn = () => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: [...editedField.fieldOptions, { id: uniqid(), value: \"\" }]\n    });\n  };\n\n  const onOptionChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id === e.id ? (e.value = event.target.value) : e\n      )\n    });\n  };\n\n  const onOptionDelete = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id !== e.id ? e : null\n      )\n    });\n  };\n\n  // const setupEditedField = (obj ? : any) => {\n  //   setEditedField(obj);\n  // }\n\n  return (\n    <div>\n      <h2>Custom Client Fields</h2>\n      <CustomFields deleteField={deleteField} fields={fields}/>\n      <AddOrEditField editedField={editedField} refreshList={refreshList} saveEditedField={saveEditedField} onNameChange={onNameChange} onSelectChange={onSelectChange} handleOptionSpawn={handleOptionSpawn} onOptionChange={onOptionChange} onOptionDelete={onOptionDelete}/>\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"]},"metadata":{},"sourceType":"module"}