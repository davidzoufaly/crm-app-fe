{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings/[key].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../../components/Header\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect, useContext, useReducer } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../components/UserContext\";\nimport DefaultFieldsSection from \"../../components/settings/DefaultFieldsSection\";\nimport CustomFieldsSection from \"../../components/settings/customFields/CustomFieldsSection\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport EmailSettingsSection from \"../../components/settings/emailSettings/EmailSettingsSection\";\nimport WebFormSection from \"../../components/settings/webform/WebFormSection\";\nimport globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Settings = ({\n  dataFields,\n  username,\n  pass\n}) => {\n  const router = useRouter();\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n  const {\n    0: sections,\n    1: setSection\n  } = useState({});\n  const user = useContext(UserContext);\n  const {\n    0: fields,\n    1: setField\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case \"addNewField\":\n        return state.some(field => field._id === action.payload.obj._id) ? state.map(field => field._id === action.payload.obj._id ? action.payload.obj : field) : [...state, action.payload.obj];\n\n      case \"deleteField\":\n        return state.filter(field => field._id !== action.payload.id);\n\n      default:\n        return state;\n    }\n  }, dataFields);\n  useEffect(() => {\n    console.log(fields);\n  }, [fields]);\n\n  const toggleSection = e => {\n    setSection(_objectSpread({}, sections, {\n      [e.target.name]: e.target.checked\n    }));\n  };\n\n  const addField = obj => {\n    setField({\n      type: \"addNewField\",\n      payload: {\n        obj\n      }\n    });\n  };\n\n  const deleteField = id => {\n    setField({\n      type: \"deleteField\",\n      payload: {\n        id\n      }\n    });\n  };\n\n  useEffect(() => {\n    //title from url\n    const title = new stringMethods(router.pathname).removeSlash().removeSlashAndTextAfter().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title; //componendDidMount effect\n\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n  const h1 = new stringMethods(router.pathname).removeSlash().removeSlashAndTextAfter().firstCharUpperCase().getString();\n  return !user.user.signedIn && !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(Typography, {\n    variant: \"h3\",\n    component: \"h1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, h1), __jsx(DefaultFieldsSection, {\n    fields: fields,\n    toggleSection: toggleSection,\n    sections: sections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), __jsx(CustomFieldsSection, {\n    fields: fields,\n    deleteField: deleteField,\n    addField: addField,\n    sections: sections,\n    toggleSection: toggleSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), __jsx(EmailSettingsSection, {\n    username: username,\n    pass: pass,\n    toggleSection: toggleSection,\n    sections: sections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), __jsx(WebFormSection, {\n    fields: fields,\n    toggleSection: toggleSection,\n    sections: sections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }));\n};\n\nSettings.getInitialProps = async context => {\n  const resFields = await axios({\n    method: \"GET\",\n    params: {\n      key: context.query.key\n    },\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const dataFields = await resFields.data;\n  const resEmailSettings = await axios({\n    method: \"GET\",\n    params: {\n      key: context.query.key\n    },\n    url: `${globalVars.serverURL}/emails/email-settings`,\n    responseType: \"json\"\n  });\n  const dataEmailSettings = await resEmailSettings.data;\n  const {\n    username,\n    pass\n  } = await dataEmailSettings;\n  return {\n    dataFields,\n    username,\n    pass\n  };\n};\n\nexport default Settings;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings/[key].tsx"],"names":["Header","useRouter","useState","useEffect","useContext","useReducer","axios","UserContext","DefaultFieldsSection","CustomFieldsSection","LoadingSpinner","EmailSettingsSection","WebFormSection","globalVars","stringMethods","Typography","Settings","dataFields","username","pass","router","initialized","setInitialized","sections","setSection","user","fields","setField","state","action","type","some","field","_id","payload","obj","map","filter","id","console","log","toggleSection","e","target","name","checked","addField","deleteField","title","pathname","removeSlash","removeSlashAndTextAfter","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","checkUser","h1","signedIn","getInitialProps","context","resFields","method","params","key","query","url","serverURL","responseType","data","resEmailSettings","dataEmailSettings"],"mappings":"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","sourcesContent":["import Header from \"../../components/Header\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect, useContext, useReducer } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../components/UserContext\";\nimport DefaultFieldsSection from \"../../components/settings/DefaultFieldsSection\";\nimport CustomFieldsSection from \"../../components/settings/customFields/CustomFieldsSection\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport EmailSettingsSection from \"../../components/settings/emailSettings/EmailSettingsSection\";\nimport WebFormSection from \"../../components/settings/webform/WebFormSection\";\nimport globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Settings = ({ dataFields, username, pass }: any) => {\n  const router = useRouter();\n  const [initialized, setInitialized] = useState(false);\n  const [sections, setSection] = useState({});\n  const user = useContext(UserContext);\n\n  const [fields, setField] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"addNewField\":\n        return state.some(field => field._id === action.payload.obj._id)\n          ? state.map(field =>\n              field._id === action.payload.obj._id ? action.payload.obj : field\n            )\n          : [...state, action.payload.obj];\n      case \"deleteField\":\n          return state.filter(field => field._id !== action.payload.id);\n      default:\n        return state;\n    }\n  }, dataFields);\n\n  useEffect(() => {\n    console.log(fields);\n  }, [fields])\n\n  const toggleSection = e => {\n    setSection({\n      ...sections,\n      [e.target.name]: e.target.checked\n    });\n  };\n\n  const addField = obj => {\n    setField({\n        type: \"addNewField\",\n        payload: { obj } \n    });\n  };\n\n  const deleteField = id => {\n    setField({\n      type: \"deleteField\",\n      payload: {id}\n    });\n  };\n\n  useEffect(() => {\n    //title from url\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .removeSlashAndTextAfter()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    //componendDidMount effect\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .removeSlashAndTextAfter()\n    .firstCharUpperCase()\n    .getString();\n\n  return !user.user.signedIn && !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n        {h1}\n      </Typography>\n      <DefaultFieldsSection\n        fields={fields}\n        toggleSection={toggleSection}\n        sections={sections}\n      />\n      <CustomFieldsSection\n        fields={fields}\n        deleteField={deleteField}\n        addField={addField}\n        sections={sections}\n        toggleSection={toggleSection}\n      />\n      <EmailSettingsSection\n        username={username}\n        pass={pass}\n        toggleSection={toggleSection}\n        sections={sections}\n      />\n      <WebFormSection\n        fields={fields}\n        toggleSection={toggleSection}\n        sections={sections}\n      />\n    </div>\n  );\n};\n\nSettings.getInitialProps = async (context: any) => {\n  const resFields = await axios({\n    method: \"GET\",\n    params: { key: context.query.key },\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const dataFields = await resFields.data;\n\n  const resEmailSettings = await axios({\n    method: \"GET\",\n    params: { key: context.query.key },\n    url: `${globalVars.serverURL}/emails/email-settings`,\n    responseType: \"json\"\n  });\n\n  const dataEmailSettings = await resEmailSettings.data;\n  const { username, pass } = await dataEmailSettings;\n\n  return { dataFields, username, pass };\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}