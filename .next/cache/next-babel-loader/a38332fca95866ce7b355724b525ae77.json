{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nvar CustomClientFields = function CustomClientFields(_ref) {\n  var fields = _ref.fields,\n      refreshList = _ref.refreshList;\n  var blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldOptions: []\n  };\n\n  var _useState = useState(blankFieldObject),\n      editedField = _useState[0],\n      setEditedField = _useState[1];\n\n  var _useState2 = useState(false),\n      displayComponent = _useState2[0],\n      setDisplayComponent = _useState2[1];\n\n  var saveEditedField = function saveEditedField() {\n    var fieldIsUpdated =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var fieldName, fieldType, fieldOptions, id, res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fieldName = editedField.fieldName, fieldType = editedField.fieldType, fieldOptions = editedField.fieldOptions, id = editedField.id;\n                _context.next = 3;\n                return axios({\n                  method: \"put\",\n                  url: \"\".concat(globalVars.serverURL, \"/fields/\").concat(id),\n                  data: {\n                    fieldName: fieldName,\n                    fieldType: fieldType,\n                    fieldOptions: fieldOptions\n                  },\n                  responseType: \"json\"\n                });\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.data;\n\n              case 6:\n                data = _context.sent;\n\n                if (data.msg === \"Success\") {\n                  setDisplayComponent(false);\n                  setEditedField(blankFieldObject);\n                  refreshList();\n                }\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fieldIsUpdated() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var fieldIsCreated =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios({\n                  method: \"post\",\n                  url: \"\".concat(globalVars.serverURL, \"/fields/\"),\n                  data: editedField,\n                  responseType: \"json\"\n                });\n\n              case 2:\n                res = _context2.sent;\n                _context2.next = 5;\n                return res.data;\n\n              case 5:\n                data = _context2.sent;\n\n                if (data.msg === \"Success\") {\n                  refreshList();\n                  setDisplayComponent(false);\n                  setEditedField(blankFieldObject);\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function fieldIsCreated() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    !editedField.id ? fieldIsCreated() : fieldIsUpdated();\n  };\n\n  var fieldMethods = function fieldMethods(_ref4) {\n    var editedField = _ref4.editedField;\n    return {\n      onNameChange: function onNameChange(event) {\n        setEditedField(_objectSpread({}, editedField, {\n          fieldName: event.target.value\n        }));\n        console.log(editedField);\n      },\n      onSelectChange: function onSelectChange(event) {\n        setEditedField(_objectSpread({}, editedField, {\n          fieldType: event.target.options[event.target.options.selectedIndex].value\n        }));\n      }\n    };\n  };\n\n  var deleteField =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(event) {\n      var id, res, resData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              id = event.target.id;\n              _context3.next = 3;\n              return axios({\n                method: \"delete\",\n                url: \"\".concat(globalVars.serverURL, \"/fields/\").concat(id),\n                responseType: \"json\"\n              });\n\n            case 3:\n              res = _context3.sent;\n              _context3.next = 6;\n              return res.data;\n\n            case 6:\n              resData = _context3.sent;\n              resData.msg === \"Success\" ? refreshList() : null;\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function deleteField(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleOptionSpawn = function handleOptionSpawn() {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: [].concat(_toConsumableArray(editedField.fieldOptions), [{\n        id: uniqid(),\n        value: \"\"\n      }])\n    }));\n  };\n\n  var onOptionChange = function onOptionChange(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(function (e) {\n        return event.target.id === e.id ? e.value = event.target.value : e;\n      })\n    }));\n  };\n\n  var onOptionDelete = function onOptionDelete(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(function (e) {\n        return event.target.id !== e.id ? e : null;\n      })\n    }));\n  };\n\n  var setupEditedField = function setupEditedField(obj) {\n    setEditedField(obj);\n    setDisplayComponent(true);\n  };\n\n  var changeDisplayComponent = function changeDisplayComponent() {\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Custom Client Fields\"), __jsx(CustomFieldsList, {\n    deleteField: deleteField,\n    fields: fields,\n    setupEditedField: setupEditedField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), __jsx(AddOrEditField, {\n    editedField: editedField,\n    refreshList: refreshList,\n    saveEditedField: saveEditedField // onNameChange={onNameChange}\n    // onSelectChange={onSelectChange}\n    ,\n    fieldMethods: fieldMethods,\n    handleOptionSpawn: handleOptionSpawn,\n    onOptionChange: onOptionChange,\n    onOptionDelete: onOptionDelete,\n    displayComponent: displayComponent,\n    changeDisplayComponent: changeDisplayComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n};\n\nexport default CustomClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx"],"names":["useState","AddOrEditField","axios","globalVars","uniqid","CustomFieldsList","CustomClientFields","fields","refreshList","blankFieldObject","fieldName","fieldType","fieldOptions","editedField","setEditedField","displayComponent","setDisplayComponent","saveEditedField","fieldIsUpdated","id","method","url","serverURL","data","responseType","res","msg","fieldIsCreated","fieldMethods","onNameChange","event","target","value","console","log","onSelectChange","options","selectedIndex","deleteField","resData","handleOptionSpawn","onOptionChange","filter","e","onOptionDelete","setupEditedField","obj","changeDisplayComponent"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({ fields, refreshList }: any) => {\n  const blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldOptions: []\n  };\n\n  const [editedField, setEditedField] = useState<any>(blankFieldObject);\n  const [displayComponent, setDisplayComponent] = useState(false);\n\n  const saveEditedField = () => {\n    const fieldIsUpdated = async () => {\n      const { fieldName, fieldType, fieldOptions, id } = editedField;\n      const res = await axios({\n        method: \"put\",\n        url: `${globalVars.serverURL}/fields/${id}`,\n        data: { fieldName, fieldType, fieldOptions },\n        responseType: \"json\"\n      });\n      const data = await res.data;\n      if (data.msg === \"Success\") {\n        setDisplayComponent(false);\n        setEditedField(blankFieldObject);\n        refreshList();\n      }\n    };\n\n    const fieldIsCreated = async () => {\n      const res = await axios({\n        method: \"post\",\n        url: `${globalVars.serverURL}/fields/`,\n        data: editedField,\n        responseType: \"json\"\n      });\n      const data = await res.data;\n      if (data.msg === \"Success\") {\n        refreshList();\n        setDisplayComponent(false);\n        setEditedField(blankFieldObject);\n      }\n    };\n    !editedField.id ? fieldIsCreated() : fieldIsUpdated();\n  };\n\n  const fieldMethods = ({ editedField }) => {\n    return {\n      onNameChange(event: any) {\n        setEditedField({ ...editedField, fieldName: event.target.value });\n        console.log(editedField);\n      },\n      onSelectChange(event: any) {\n        setEditedField({\n          ...editedField,\n          fieldType:\n            event.target.options[event.target.options.selectedIndex].value\n        });\n      }\n    };\n  };\n\n  const deleteField = async (event: any) => {\n    const id = event.target.id;\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const handleOptionSpawn = () => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: [...editedField.fieldOptions, { id: uniqid(), value: \"\" }]\n    });\n  };\n\n  const onOptionChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id === e.id ? (e.value = event.target.value) : e\n      )\n    });\n  };\n\n  const onOptionDelete = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id !== e.id ? e : null\n      )\n    });\n  };\n\n  const setupEditedField = (obj?: any) => {\n    setEditedField(obj);\n    setDisplayComponent(true);\n  };\n\n  const changeDisplayComponent = () => {\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n  };\n\n  return (\n    <div>\n      <h2>Custom Client Fields</h2>\n      <CustomFieldsList\n        deleteField={deleteField}\n        fields={fields}\n        setupEditedField={setupEditedField}\n      />\n      <AddOrEditField\n        editedField={editedField}\n        refreshList={refreshList}\n        saveEditedField={saveEditedField}\n        // onNameChange={onNameChange}\n        // onSelectChange={onSelectChange}\n        fieldMethods={fieldMethods}\n        handleOptionSpawn={handleOptionSpawn}\n        onOptionChange={onOptionChange}\n        onOptionDelete={onOptionDelete}\n        displayComponent={displayComponent}\n        changeDisplayComponent={changeDisplayComponent}\n      />\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"]},"metadata":{},"sourceType":"module"}