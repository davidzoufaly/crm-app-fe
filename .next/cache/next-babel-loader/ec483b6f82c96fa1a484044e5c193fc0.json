{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/AddOrEditField.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport SelectFieldOptions from \"../components/SelectFieldOptions\";\nimport uniqid from \"uniqid\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport { useState } from \"react\";\n\nvar AddOrEditField = function AddOrEditField(_ref) {\n  var editedField = _ref.editedField,\n      refreshList = _ref.refreshList;\n\n  var _useState = useState(false),\n      displayComponent = _useState[0],\n      setDisplayComponent = _useState[1];\n\n  var changeDisplayComponent = function changeDisplayComponent() {\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n  };\n\n  var saveField =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios({\n                method: \"post\",\n                url: \"\".concat(globalVars.serverURL, \"/fields/\"),\n                data: editedField,\n                responseType: \"json\"\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.data;\n\n            case 5:\n              data = _context.sent;\n              data.msg === \"Success\" ? changeDisplayComponent() : null;\n              refreshList();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function saveField() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onNameChange = function onNameChange(event) {\n    seteditedField(_objectSpread({}, editedField, {\n      fieldName: event.target.value\n    }));\n    console.log(editedField);\n  };\n\n  var onSelectChange = function onSelectChange(event) {\n    seteditedField(_objectSpread({}, editedField, {\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    }));\n  };\n\n  var handleOptionSpawn = function handleOptionSpawn() {\n    seteditedField(_objectSpread({}, editedField, {\n      fieldOptions: [].concat(_toConsumableArray(editedField.fieldOptions), [{\n        id: uniqid(),\n        value: \"\"\n      }])\n    }));\n  };\n\n  var onChange = function onChange(event) {\n    seteditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(function (e) {\n        return event.target.id === e.id ? e.value = event.target.value : e;\n      })\n    }));\n  };\n\n  var onDelete = function onDelete(event) {\n    seteditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(function (e) {\n        return event.target.id !== e.id ? e : null;\n      })\n    }));\n  };\n\n  return displayComponent ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"field-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Field name\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"field-name\",\n    defaultValue: editedField.fieldName,\n    onChange: onNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"field-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Field type\"), __jsx(\"select\", {\n    id: \"field-type\",\n    onChange: onSelectChange,\n    defaultValue: editedField.fieldType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Text\"), __jsx(\"option\", {\n    value: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Select\"), __jsx(\"option\", {\n    value: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Number\")), __jsx(SelectFieldOptions, {\n    options: editedField.fieldOptions,\n    onChange: onChange,\n    onDelete: onDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), editedField.fieldType === \"select\" ? __jsx(\"button\", {\n    onClick: handleOptionSpawn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"New\") : null, __jsx(\"button\", {\n    onClick: saveField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Save\"), __jsx(\"button\", {\n    onClick: changeDisplayComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Cancel\")) : __jsx(\"button\", {\n    onClick: changeDisplayComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Add new field\");\n};\n\nexport default AddOrEditField;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/AddOrEditField.tsx"],"names":["SelectFieldOptions","uniqid","axios","globalVars","useState","AddOrEditField","editedField","refreshList","displayComponent","setDisplayComponent","changeDisplayComponent","saveField","method","url","serverURL","data","responseType","res","msg","onNameChange","event","seteditedField","fieldName","target","value","console","log","onSelectChange","fieldType","options","selectedIndex","handleOptionSpawn","fieldOptions","id","onChange","filter","e","onDelete"],"mappings":"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","sourcesContent":["import SelectFieldOptions from \"../components/SelectFieldOptions\";\nimport uniqid from \"uniqid\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport { useState } from \"react\";\n\nconst AddOrEditField = ({ editedField , refreshList }: any) => {\n  const [displayComponent, setDisplayComponent] = useState(false);\n\n  const changeDisplayComponent = () => {\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n  }\n\n  const saveField = async () => {\n\n    const res = await axios({\n      method: \"post\",\n      url: `${globalVars.serverURL}/fields/`,\n      data: editedField,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    data.msg === \"Success\" ? changeDisplayComponent() : null;\n    refreshList();\n  };\n\n  const onNameChange = (event: any) => {\n    seteditedField({ ...editedField, fieldName: event.target.value});\n    console.log(editedField);\n  };\n\n  const onSelectChange = (event: any) => {\n    seteditedField({\n      ...editedField,\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    });\n  };\n\n  const handleOptionSpawn = () => {\n    seteditedField({\n      ...editedField,\n      fieldOptions: [...editedField.fieldOptions, { id: uniqid(), value: \"\" }]\n    });\n  };\n\n  const onChange = (event: any) => {\n    seteditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id === e.id ? (e.value = event.target.value) : e\n      )\n    });\n  };\n\n  const onDelete = (event: any) => {\n    seteditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id !== e.id ? e : null\n      )\n    });\n  };\n\n  return displayComponent ? (\n    <div>\n      <label htmlFor=\"field-name\">Field name</label>\n      <input\n        type=\"text\"\n        id=\"field-name\"\n        defaultValue={editedField.fieldName}\n        onChange={onNameChange}\n      />\n      <label htmlFor=\"field-type\">Field type</label>\n      <select id=\"field-type\" onChange={onSelectChange} defaultValue={editedField.fieldType}> \n        <option value=\"text\">Text</option>\n        <option value=\"select\">Select</option>\n        <option value=\"number\">Number</option>\n      </select>\n      <SelectFieldOptions\n        options={editedField.fieldOptions}\n        onChange={onChange}\n        onDelete={onDelete}\n      />\n      {editedField.fieldType === \"select\" ? (\n        <button onClick={handleOptionSpawn}>New</button>\n      ) : null}\n      <button onClick={saveField}>Save</button>\n      <button onClick={changeDisplayComponent}>Cancel</button>\n    </div>\n  ) : (<button onClick={changeDisplayComponent}>Add new field</button>);\n};\n\nexport default AddOrEditField;\n"]},"metadata":{},"sourceType":"module"}