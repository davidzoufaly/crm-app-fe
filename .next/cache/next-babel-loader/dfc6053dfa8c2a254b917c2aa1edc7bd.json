{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport stringMethods from \"../library/stringMethods\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\n\nvar CustomFields = function CustomFields(_ref) {\n  var fields = _ref.fields,\n      changeDisplayComponent = _ref.changeDisplayComponent,\n      deleteField = _ref.deleteField;\n  var useStyles = makeStyles({\n    card: {\n      textAlign: \"center\",\n      height: \"100%\",\n      minWidth: \"300px\"\n    },\n    list: {\n      listStyleType: \"disc\"\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  });\n  var classes = useStyles({});\n  fields.filter(function (_ref2) {\n    var fieldPermanent = _ref2.fieldPermanent;\n    return !fieldPermanent;\n  }).map(function (_ref3) {\n    var fieldName = _ref3.fieldName,\n        _id = _ref3._id,\n        fieldType = _ref3.fieldType,\n        fieldOptions = _ref3.fieldOptions;\n    var customFieldNameFormated = new stringMethods(fieldName.toLowerCase()).firstCharUpperCase().getString();\n\n    var optionsMap = function optionsMap() {\n      return fieldOptions.map(function (e) {\n        var optionFormatedKey = new stringMethods(e.value).textToCamelString().replaceStringDiacritics().getString();\n        return __jsx(ListItem, {\n          key: optionFormatedKey,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, __jsx(ListItemText, {\n          primary: e.value.toLowerCase(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return __jsx(Grid, {\n      item: true,\n      key: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h5\",\n      component: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, customFieldNameFormated), __jsx(Typography, {\n      className: classes.pos,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"(\", fieldType.toLowerCase(), \")\"), fieldType === \"select\" ? __jsx(List, {\n      className: classes.list,\n      dense: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, optionsMap()) : null, __jsx(\"button\", {\n      onClick: changeDisplayComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Edit field\"), __jsx(\"button\", {\n      onClick: deleteField,\n      id: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Delete field\"))));\n  });\n};\n\nexport default CustomFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomFields.tsx"],"names":["stringMethods","makeStyles","Card","CardContent","Typography","ListItemText","List","ListItem","Grid","CustomFields","fields","changeDisplayComponent","deleteField","useStyles","card","textAlign","height","minWidth","list","listStyleType","title","fontSize","pos","marginBottom","classes","filter","fieldPermanent","map","fieldName","_id","fieldType","fieldOptions","customFieldNameFormated","toLowerCase","firstCharUpperCase","getString","optionsMap","e","optionFormatedKey","value","textToCamelString","replaceStringDiacritics"],"mappings":"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","sourcesContent":["import stringMethods from \"../library/stringMethods\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Grid from '@material-ui/core/Grid';\n\nconst CustomFields = ({fields, changeDisplayComponent, deleteField} : any) => {\n\n    const useStyles = makeStyles({\n        card: {\n          textAlign: \"center\",\n          height: \"100%\",\n          minWidth: \"300px\"\n        },\n        list: {\n            listStyleType: \"disc\"\n        },\n        title: {\n          fontSize: 14\n        },\n        pos: {\n          marginBottom: 12\n        }\n      });\n\n      const classes = useStyles({});\n\n    fields.filter(({ fieldPermanent }: any) => !fieldPermanent)\n    .map(({ fieldName, _id, fieldType, fieldOptions }: any) => {\n      const customFieldNameFormated = new stringMethods(fieldName.toLowerCase())\n        .firstCharUpperCase()\n        .getString();\n    \n      const optionsMap = () => {\n        return fieldOptions.map((e: any) => {\n          const optionFormatedKey = new stringMethods(e.value)\n            .textToCamelString()\n            .replaceStringDiacritics()\n            .getString();\n    \n          return <ListItem key={optionFormatedKey}><ListItemText primary={e.value.toLowerCase()} /></ListItem>\n        });\n      };\n    \n      return (\n        <Grid item key={_id}>\n            <Card className={classes.card}>\n            <CardContent>\n            <Typography variant=\"h5\" component=\"h3\">\n                {customFieldNameFormated}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n                ({fieldType.toLowerCase()})\n            </Typography>\n                {fieldType === \"select\" ? <List className={classes.list} dense={true}>{optionsMap()}</List> : null}\n            <button onClick={changeDisplayComponent}>Edit field</button>\n            <button onClick={deleteField} id={_id}>Delete field</button>\n            </CardContent>\n            </Card>\n        </Grid>  \n      );\n    });\n}\n\nexport default CustomFields;"]},"metadata":{},"sourceType":"module"}