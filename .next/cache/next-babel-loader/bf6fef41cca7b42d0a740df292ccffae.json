{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/CreateClient.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useReducer } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../../library/globalVariables\";\nimport generateUniqueId from \"generate-unique-id\";\nimport moment from \"moment\";\n\nconst CreateClient = ({\n  fields,\n  isClientAdded,\n  toggleIsClientAdded,\n  addNewClientToState\n}) => {\n  const initialNewClintState = fields.map(e => e.fieldName).reduce((o, key) => _Object$assign(o, {\n    [key]: \"\"\n  }), {});\n  const {\n    0: newClient,\n    1: setNewClient\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case \"onTextChange\":\n        return _objectSpread({}, state, {\n          [action.payload.fieldName]: action.payload.fieldType === \"number\" ? _parseInt(action.payload.value) : action.payload.value\n        });\n\n      case \"addId\":\n        return _objectSpread({}, state, {\n          _id: generateUniqueId({\n            length: 24,\n            useNumbers: true,\n            useLetters: false,\n            includeSymbols: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n          })\n        });\n\n      case \"addDate\":\n        return _objectSpread({}, state, {\n          dateAdded: moment().format(\"llll\")\n        });\n\n      case \"clear\":\n        return {\n          initialNewClintState\n        };\n\n      default:\n        return state;\n    }\n  }, initialNewClintState);\n\n  const onChange = (fieldType, event) => {\n    setNewClient({\n      type: \"onTextChange\",\n      payload: {\n        fieldName: event.target.name,\n        value: event.target.value,\n        fieldType\n      }\n    });\n    setNewClient({\n      type: \"addId\"\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await setNewClient({\n      type: \"addDate\"\n    });\n    const clientRes = await axios({\n      method: \"post\",\n      data: newClient,\n      url: `${globalVars.serverURL}/clients`,\n      responseType: \"json\"\n    });\n    const clientData = await clientRes.data;\n\n    if (clientData.msg === \"Success\") {\n      setNewClient({\n        type: \"clear\"\n      });\n      addNewClientToState(newClient);\n      toggleIsClientAdded();\n    }\n  };\n\n  const onCancel = () => {\n    setNewClient({\n      type: \"clear\"\n    });\n    toggleIsClientAdded();\n  };\n\n  return isClientAdded ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Add new client\"), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(ClientForm, {\n    fields: fields,\n    onChange: onChange,\n    newClient: newClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Save\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Cancel\"))) : null;\n};\n\nexport default CreateClient;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/CreateClient.tsx"],"names":["Button","Typography","ClientForm","useReducer","axios","globalVars","generateUniqueId","moment","CreateClient","fields","isClientAdded","toggleIsClientAdded","addNewClientToState","initialNewClintState","map","e","fieldName","reduce","o","key","newClient","setNewClient","state","action","type","payload","fieldType","value","_id","length","useNumbers","useLetters","includeSymbols","dateAdded","format","onChange","event","target","name","onSubmit","preventDefault","clientRes","method","data","url","serverURL","responseType","clientData","msg","onCancel"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useReducer } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../../library/globalVariables\";\nimport generateUniqueId from \"generate-unique-id\";\nimport moment from \"moment\";\n\nconst CreateClient = ({\n  fields,\n  isClientAdded,\n  toggleIsClientAdded,\n  addNewClientToState\n}: any) => {\n  const initialNewClintState = fields\n    .map((e: any) => e.fieldName)\n    .reduce((o, key) => Object.assign(o, { [key]: \"\" }), {});\n\n  const [newClient, setNewClient] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"onTextChange\":\n        return {\n          ...state,\n          [action.payload.fieldName]:\n            action.payload.fieldType === \"number\"\n              ? parseInt(action.payload.value)\n              : action.payload.value\n        };\n      case \"addId\":\n        return {\n          ...state,\n          _id: generateUniqueId({\n            length: 24,\n            useNumbers: true,\n            useLetters: false,\n            includeSymbols: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n          })\n        };\n      case \"addDate\":\n        return {\n          ...state,\n           dateAdded: moment().format(\"llll\")\n        }\n      case \"clear\":\n        return {\n          initialNewClintState  \n        };\n\n      default:\n        return state;\n    }\n  }, initialNewClintState);\n\n  const onChange = (fieldType, event) => {\n    setNewClient({\n      type: \"onTextChange\",\n      payload: { fieldName : event.target.name, value: event.target.value, fieldType }\n    });\n    setNewClient({ type: \"addId\" });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n      await setNewClient({type: \"addDate\"})\n  \n      const clientRes = await axios({\n        method: \"post\",\n        data: newClient,\n        url: `${globalVars.serverURL}/clients`,\n        responseType: \"json\"\n      });\n      const clientData = await clientRes.data;\n      if (clientData.msg === \"Success\") {\n        setNewClient({\n          type: \"clear\"\n        });\n        addNewClientToState(newClient);\n        toggleIsClientAdded();\n      }\n  };\n\n  const onCancel = () => {\n    setNewClient({\n      type: \"clear\"\n    });\n    toggleIsClientAdded();\n  };\n\n  return isClientAdded ? (\n    <div>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        Add new client\n      </Typography>\n      <form onSubmit={onSubmit}>\n        <ClientForm fields={fields} onChange={onChange} newClient={newClient} />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Save\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\n          Cancel\n        </Button>\n      </form>\n    </div>\n  ) : null;\n};\n\nexport default CreateClient;\n"]},"metadata":{},"sourceType":"module"}