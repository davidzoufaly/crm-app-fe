{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer, useEffect, useState } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormOptionSelect from \"./webFormOptionSelect\";\n\nconst WebForm = ({\n  fields\n}) => {\n  const {\n    0: optionSelect,\n    1: setOptionSelect\n  } = useState(\"\");\n  const {\n    0: webFields,\n    1: setWebFields\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true\n        }) : field);\n\n      case \"remove\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: false\n        }) : field);\n\n      case \"addVisibleSelect\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true,\n          fieldFormVisible: true\n        }) : field);\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field => field.fieldName === e.target.value ? field.fieldType !== \"select\" ? setWebFields({\n      type: \"add\",\n      payload: {\n        fieldName: e.target.value\n      }\n    }) : setOptionSelect(e.target.value) : null);\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n    setOptionSelect(\"\");\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n  };\n\n  useEffect(() => {\n    console.log(webFields);\n  }, [webFields]);\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Select field:\"), __jsx(WebFormSelect, {\n    webFields: webFields,\n    addNotSelect: addNotSelect,\n    optionSelect: optionSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(WebFormOptionSelect, {\n    optionSelect: optionSelect,\n    webFields: webFields,\n    addVisibleSelect: addVisibleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Selected fields:\"), __jsx(WebFormList, {\n    webFields: webFields,\n    removeFromList: removeFromList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n};\n\nexport default WebForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx"],"names":["useReducer","useEffect","useState","WebFormSelect","WebFormList","WebFormOptionSelect","WebForm","fields","optionSelect","setOptionSelect","webFields","setWebFields","state","action","type","map","field","fieldName","payload","fieldInForm","fieldFormVisible","addNotSelect","e","target","value","fieldType","addVisibleSelect","id","removeFromList","console","log"],"mappings":"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","sourcesContent":["import { useReducer, useEffect, useState } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormOptionSelect from \"./webFormOptionSelect\";\n\nconst WebForm = ({ fields }) => {\n  const [optionSelect, setOptionSelect] = useState(\"\");\n  const [webFields, setWebFields] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true }\n            : field\n        );\n      case \"remove\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: false }\n            : field\n        );\n      case \"addVisibleSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true, fieldFormVisible: true }\n            : field\n        );\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field =>\n      field.fieldName === e.target.value\n        ? field.fieldType !== \"select\"\n          ? setWebFields({\n              type: \"add\",\n              payload: { fieldName: e.target.value }\n            })\n          : setOptionSelect(e.target.value)\n        : null\n    );\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: { fieldName: e.target.id }\n    });\n    setOptionSelect(\"\");\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: { fieldName: e.target.id }\n    });\n  };\n\n  useEffect(() => {\n    console.log(webFields);\n  }, [webFields]);\n\n  return (\n    <>\n      <h3>Select field:</h3>\n      <WebFormSelect\n        webFields={webFields}\n        addNotSelect={addNotSelect}\n        optionSelect={optionSelect}\n      />\n      <WebFormOptionSelect\n        optionSelect={optionSelect}\n        webFields={webFields}\n        addVisibleSelect={addVisibleSelect}\n      />\n      <h3>Selected fields:</h3>\n      <WebFormList webFields={webFields} removeFromList={removeFromList} />\n    </>\n  );\n};\n\nexport default WebForm;\n"]},"metadata":{},"sourceType":"module"}