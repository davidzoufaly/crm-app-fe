{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport generateUniqueId from \"generate-unique-id\";\nimport Header from \"../../components/Header\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport UserContext from \"../../components/UserContext\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport { TableHead, TableBody, Typography, Table, TableCell, TableRow } from \"@material-ui/core\";\n\nconst Emails = ({\n  data,\n  emailsCount\n}) => {\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n  const router = useRouter();\n  const user = useContext(UserContext);\n  useEffect(() => {\n    const title = new stringMethods(router.pathname).removeSlash().removeSlashAndTextAfter().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n  const tableBody = data.map(email => __jsx(TableRow, {\n    key: generateUniqueId()\n  }, __jsx(TableCell, null, email.date), __jsx(TableCell, null, email.to.map(e => __jsx(\"p\", {\n    key: generateUniqueId()\n  }, e))), __jsx(TableCell, null, email.subject), __jsx(TableCell, null, email.message.length > 50 ? `${email.message.slice(0, 50)}...` : email.message))).reverse();\n  const h1 = new stringMethods(router.pathname).removeSlash().removeSlashAndTextAfter().firstCharUpperCase().getString();\n  return !user.user.signedIn && !initialized ? __jsx(LoadingSpinner, null) : __jsx(React.Fragment, null, __jsx(Header, null), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h3\"\n  }, h1), __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true\n  }, new stringMethods(languages.en.sent).firstCharUpperCase().getString(), \" \", emailsCount), __jsx(Table, {\n    size: \"small\",\n    style: {\n      backgroundColor: \"white\",\n      border: \"1px solid #e0e0e0\"\n    }\n  }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, null, __jsx(Typography, {\n    variant: \"button\"\n  }, languages.en.dateAndTime)), __jsx(TableCell, null, __jsx(Typography, {\n    variant: \"button\"\n  }, languages.en.to)), __jsx(TableCell, null, __jsx(Typography, {\n    variant: \"button\"\n  }, languages.en.subject)), __jsx(TableCell, null, __jsx(Typography, {\n    variant: \"button\"\n  }, languages.en.message)))), __jsx(TableBody, null, tableBody)));\n};\n\nEmails.getInitialProps = async context => {\n  const res = await axios({\n    method: \"get\",\n    params: {\n      key: context.query.key\n    },\n    url: `${globalVars.serverURL}/emails`,\n    responseType: \"json\"\n  });\n  const resEmailsCount = await axios(`${globalVars.serverURL}/emails/count?key=${context.query.key}`);\n  const emailsCount = await resEmailsCount.data;\n  const data = await res.data;\n  return {\n    data,\n    emailsCount\n  };\n};\n\nexport default Emails;","map":null,"metadata":{},"sourceType":"module"}