{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CreateClient.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\n\nvar CreateClient = function CreateClient(_ref) {\n  var fields = _ref.fields,\n      isClientAdded = _ref.isClientAdded,\n      toggleIsClientAdded = _ref.toggleIsClientAdded;\n  var initialNewClintState = fields.map(function (e) {\n    return e.fieldName;\n  }).reduce(function (o, key) {\n    return _Object$assign(o, _defineProperty({}, key, \"\"));\n  }, {});\n\n  var _useState = useState(initialNewClintState),\n      newClient = _useState[0],\n      setNewClient = _useState[1];\n\n  var onChange = function onChange(fieldName, event) {\n    setNewClient(_objectSpread({}, newClient, _defineProperty({}, fieldName, event.target.value)));\n  };\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var clientRes, clientData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios({\n                method: \"post\",\n                data: newClient,\n                url: \"\".concat(globalVars.serverURL, \"/clients\"),\n                responseType: \"json\"\n              });\n\n            case 2:\n              clientRes = _context.sent;\n              _context.next = 5;\n              return clientRes.data;\n\n            case 5:\n              clientData = _context.sent;\n\n              if (clientData.msg === \"Success\") {\n                setNewClient(initialNewClintState);\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onCancel = function onCancel() {\n    setNewClient(initialNewClintState);\n    toggleIsClientAdded();\n  };\n\n  useEffect(function () {\n    console.log(newClient);\n  });\n  return isClientAdded ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Add new client\"), __jsx(ClientForm, {\n    fields: fields,\n    onChange: onChange,\n    newClient: newClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Save\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Cancel\")) : null;\n};\n\nexport default CreateClient;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CreateClient.tsx"],"names":["Button","Typography","ClientForm","useEffect","useState","axios","globalVars","CreateClient","fields","isClientAdded","toggleIsClientAdded","initialNewClintState","map","e","fieldName","reduce","o","key","newClient","setNewClient","onChange","event","target","value","onSubmit","method","data","url","serverURL","responseType","clientRes","clientData","msg","onCancel","console","log"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\n\nconst CreateClient = ({ fields, isClientAdded, toggleIsClientAdded }: any) => {\n  const initialNewClintState = fields\n    .map((e: any) => e.fieldName)\n    .reduce((o, key) => Object.assign(o, { [key]: \"\" }), {});\n\n  const [newClient, setNewClient] = useState(initialNewClintState);\n\n  const onChange = (fieldName, event) => {\n    setNewClient({ ...newClient, [fieldName]: event.target.value });\n  };\n\n  const onSubmit = async () => {\n    const clientRes = await axios({\n      method: \"post\",\n      data: newClient,\n      url: `${globalVars.serverURL}/clients`,\n      responseType: \"json\"\n    });\n    const clientData = await clientRes.data;\n    if (clientData.msg === \"Success\") {\n      setNewClient(initialNewClintState);\n    }\n  };\n\n  const onCancel = () => {\n    setNewClient(initialNewClintState);\n    toggleIsClientAdded();\n  };\n\n  useEffect(() => {\n    console.log(newClient);\n  });\n\n  return isClientAdded ? (\n    <div>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        Add new client\n      </Typography>\n      <ClientForm fields={fields} onChange={onChange} newClient={newClient} />\n      <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n        Save\n      </Button>\n      <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\n        Cancel\n      </Button>\n    </div>\n  ) : null;\n};\n\nexport default CreateClient;\n"]},"metadata":{},"sourceType":"module"}