{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/ClientList.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport uniqid from \"uniqid\";\n\nconst ClientsList = ({\n  clients,\n  reverse,\n  sort,\n  fields\n}) => {\n  reverse ? clients.sort((a, b) => b[sort] > a[sort] ? 1 : -1) : clients.sort((a, b) => b[sort] > a[sort] ? -1 : 1);\n  const fieldNames = fields.forEach(e => e.fieldName);\n  console.log(fieldNames);\n  const tableClients = clients.map(e => {\n    const tableItem = () => {\n      let items = [];\n\n      for (let key in e) {\n        e[key] !== e._id ? items.push(__jsx(\"td\", {\n          key: uniqid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, e[key])) : null;\n      }\n\n      return items;\n    };\n\n    return __jsx(\"tr\", {\n      key: e._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, tableItem(), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/clients/[id]\",\n      as: `/clients/${e._id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Go to client\"))));\n  });\n  return tableClients;\n};\n\nexport default ClientsList;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/ClientList.tsx"],"names":["Link","uniqid","ClientsList","clients","reverse","sort","fields","a","b","fieldNames","forEach","e","fieldName","console","log","tableClients","map","tableItem","items","key","_id","push"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AASA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA,IAApB;AAA0BC,EAAAA;AAA1B,CAAD,KAA+C;AACjEF,EAAAA,OAAO,GACHD,OAAO,CAACE,IAAR,CAAa,CAACE,CAAD,EAASC,CAAT,KAAqBA,CAAC,CAACH,IAAD,CAAD,GAAUE,CAAC,CAACF,IAAD,CAAX,GAAoB,CAApB,GAAwB,CAAC,CAA3D,CADG,GAEHF,OAAO,CAACE,IAAR,CAAa,CAACE,CAAD,EAASC,CAAT,KAAqBA,CAAC,CAACH,IAAD,CAAD,GAAUE,CAAC,CAACF,IAAD,CAAX,GAAoB,CAAC,CAArB,GAAyB,CAA3D,CAFJ;AAIA,QAAMI,UAAU,GAAGH,MAAM,CAACI,OAAP,CAAgBC,CAAD,IAAaA,CAAC,CAACC,SAA9B,CAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAEA,QAAMM,YAAY,GAAGZ,OAAO,CAACa,GAAR,CAAaL,CAAD,IAAY;AAC3C,UAAMM,SAAS,GAAG,MAAM;AACtB,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,GAAT,IAAgBR,CAAhB,EAAmB;AACjBA,QAAAA,CAAC,CAACQ,GAAD,CAAD,KAAWR,CAAC,CAACS,GAAb,GAAmBF,KAAK,CAACG,IAAN,CAAW;AAAI,UAAA,GAAG,EAAEpB,MAAM,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBU,CAAC,CAACQ,GAAD,CAArB,CAAX,CAAnB,GAAkE,IAAlE;AACD;;AACD,aAAOD,KAAP;AACD,KAND;;AAQA,WACE;AAAI,MAAA,GAAG,EAAEP,CAAC,CAACS,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,SAAS,EADZ,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAA2B,MAAA,EAAE,EAAG,YAAWN,CAAC,CAACS,GAAI,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CAFF,CADF;AAUD,GAnBoB,CAArB;AAoBA,SAAOL,YAAP;AACD,CA7BD;;AA+BA,eAAeb,WAAf","sourcesContent":["import Link from \"next/link\";\nimport uniqid from \"uniqid\";\n\ninterface IProps {\n  clients: any;\n  reverse: boolean;\n  sort: string;\n  fields: any;\n}\n\nconst ClientsList = ({ clients, reverse, sort, fields}: IProps) => {\n  reverse\n    ? clients.sort((a: any, b: any) => (b[sort] > a[sort] ? 1 : -1))\n    : clients.sort((a: any, b: any) => (b[sort] > a[sort] ? -1 : 1));\n  \n  const fieldNames = fields.forEach((e : any) => e.fieldName);\n  console.log(fieldNames);\n  \n  const tableClients = clients.map((e: any) => {\n    const tableItem = () => {\n      let items = [];\n      for (let key in e) {\n        e[key] !== e._id ? items.push(<td key={uniqid()}>{e[key]}</td>) : null;\n      }\n      return items;\n    };\n\n    return (\n      <tr key={e._id}>\n        {tableItem()}\n        <td>\n          <Link href=\"/clients/[id]\" as={`/clients/${e._id}`}>\n            <a>Go to client</a>\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n  return tableClients;\n};\n\nexport default ClientsList;\n"]},"metadata":{},"sourceType":"module"}