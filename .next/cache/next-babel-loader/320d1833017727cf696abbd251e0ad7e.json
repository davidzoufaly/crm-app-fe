{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport DefaultClientFields from \"../components/DefaultClientFields\";\nimport CustomClientFields from \"../components/CustomClientFields\";\n\nvar Settings = function Settings(_ref) {\n  var data = _ref.data;\n  var router = useRouter();\n\n  var _useState = useState([]),\n      fields = _useState[0],\n      setField = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      headingOne = _useState2[0],\n      setHeadingOne = _useState2[1];\n\n  useEffect(function () {\n    setField(data);\n    setHeadingOne(new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString());\n  });\n  useEffect(function () {\n    var title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n  }, [router]);\n\n  if (fields.length === 0) {\n    return \"Loading...\";\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, headingOne), __jsx(DefaultClientFields, {\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(CustomClientFields, {\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nSettings.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios({\n            method: \"get\",\n            url: \"\".concat(globalVars.serverURL, \"/fields\"),\n            responseType: \"json\"\n          });\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.data;\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Settings;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings.tsx"],"names":["Header","useRouter","stringMethods","globalVars","axios","useState","useEffect","DefaultClientFields","CustomClientFields","Settings","data","router","fields","setField","headingOne","setHeadingOne","pathname","removeSlash","firstCharUpperCase","getString","title","addStringToEnd","titleSubText","document","length","getInitialProps","method","url","serverURL","responseType","res"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAmB;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAClC,MAAMC,MAAM,GAAGV,SAAS,EAAxB;;AADkC,kBAEPI,QAAQ,CAAC,EAAD,CAFD;AAAA,MAE3BO,MAF2B;AAAA,MAEnBC,QAFmB;;AAAA,mBAGER,QAAQ,CAAC,EAAD,CAHV;AAAA,MAG3BS,UAH2B;AAAA,MAGfC,aAHe;;AAKlCT,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,QAAQ,CAACH,IAAD,CAAR;AACAK,IAAAA,aAAa,CACX,IAAIb,aAAJ,CAAkBS,MAAM,CAACK,QAAzB,EACGC,WADH,GAEGC,kBAFH,GAGGC,SAHH,EADW,CAAb;AAMD,GARQ,CAAT;AAUAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,KAAK,GAAG,IAAIlB,aAAJ,CAAkBS,MAAM,CAACK,QAAzB,EACXC,WADW,GAEXC,kBAFW,GAGXG,cAHW,CAGIlB,UAAU,CAACmB,YAHf,EAIXH,SAJW,EAAd;AAMAI,IAAAA,QAAQ,CAACH,KAAT,GAAiBA,KAAjB;AACD,GARQ,EAQN,CAACT,MAAD,CARM,CAAT;;AAUA,MAAIC,MAAM,CAACY,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WAAO,YAAP;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,UAAL,CAFF,EAGE,MAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEF,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,kBAAD;AAAoB,IAAA,MAAM,EAAEA,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CApCD;;AAsCAH,QAAQ,CAACgB,eAAT;AAAA;AAAA;AAAA;AAAA,yBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACPrB,KAAK,CAAC;AACtBsB,YAAAA,MAAM,EAAE,KADc;AAEtBC,YAAAA,GAAG,YAAKxB,UAAU,CAACyB,SAAhB,YAFmB;AAGtBC,YAAAA,YAAY,EAAE;AAHQ,WAAD,CADE;;AAAA;AACnBC,UAAAA,GADmB;AAAA;AAAA,iBAMNA,GAAG,CAACpB,IANE;;AAAA;AAMnBA,UAAAA,IANmB;AAAA,2CAOlB;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WAPkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AAUA,eAAeD,QAAf","sourcesContent":["import Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport DefaultClientFields from \"../components/DefaultClientFields\";\nimport CustomClientFields from \"../components/CustomClientFields\";\n\nconst Settings = ({ data }: any) => {\n  const router = useRouter();\n  const [fields, setField] = useState([]);\n  const [headingOne, setHeadingOne] = useState(\"\");\n\n  useEffect(() => {\n    setField(data);\n    setHeadingOne(\n      new stringMethods(router.pathname)\n        .removeSlash()\n        .firstCharUpperCase()\n        .getString()\n    );\n  });\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n\n    document.title = title;\n  }, [router]);\n\n  if (fields.length === 0) {\n    return \"Loading...\";\n  }\n  return (\n    <div>\n      <Header />\n      <h1>{headingOne}</h1>\n      <DefaultClientFields fields={fields} />\n      <CustomClientFields fields={fields} />\n    </div>\n  );\n};\n\nSettings.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return { data };\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}