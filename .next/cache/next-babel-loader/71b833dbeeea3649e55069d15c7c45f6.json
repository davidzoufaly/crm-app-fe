{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/DefaultClientFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport stringMethods from '../library/stringMethods';\n\nconst DefaultClientFields = ({\n  fields\n}) => {\n  const fieldNames = fields.filter(e => e.fieldPermanent === true).map(e => {\n    const fieldName = new stringMethods(e.fieldName).camelStringToText().firstCharUpperCase().getString();\n    return __jsx(\"div\", {\n      key: e._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, fieldName);\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Default client fields\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, fieldNames));\n};\n\nexport default DefaultClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/DefaultClientFields.tsx"],"names":["stringMethods","DefaultClientFields","fields","fieldNames","filter","e","fieldPermanent","map","fieldName","camelStringToText","firstCharUpperCase","getString","_id"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,0BAA1B;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAEhD,QAAMC,UAAU,GAAGD,MAAM,CAACE,MAAP,CAAeC,CAAD,IAAiBA,CAAC,CAACC,cAAF,KAAqB,IAApD,EAA0DC,GAA1D,CAA+DF,CAAD,IAAa;AAE9F,UAAMG,SAAS,GAAG,IAAIR,aAAJ,CAAkBK,CAAC,CAACG,SAApB,EAA+BC,iBAA/B,GAAmDC,kBAAnD,GAAwEC,SAAxE,EAAlB;AAEA,WAAO;AAAK,MAAA,GAAG,EAAEN,CAAC,CAACO,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBJ,SAAlB,CAAP;AACC,GALkB,CAAnB;AAOI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,UAAN,CAFJ,CADJ;AAMH,CAfD;;AAiBA,eAAeF,mBAAf","sourcesContent":["import stringMethods from '../library/stringMethods';\n\nconst DefaultClientFields = ({fields} : any) => {\n\nconst fieldNames = fields.filter((e : boolean) => e.fieldPermanent === true).map((e : any) => {\n\nconst fieldName = new stringMethods(e.fieldName).camelStringToText().firstCharUpperCase().getString();\n\nreturn <div key={e._id}>{fieldName}</div>\n})\n    \n    return (\n        <div>\n            <h2>Default client fields</h2>\n            <div>{fieldNames}</div>\n        </div>\n    )\n}\n\nexport default DefaultClientFields;"]},"metadata":{},"sourceType":"module"}