{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormSelect.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport globalVars from \"../../../library/globalVariables\";\n\nconst WebFormSelect = ({\n  webFields,\n  addedToForm\n}) => {\n  const fieldsOptions = webFields.map(field => {\n    return !field.fieldInForm ? __jsx(\"option\", {\n      key: field._id,\n      value: field.fieldName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, field.fieldName) : null;\n  });\n  return __jsx(React.Fragment, null, __jsx(\"select\", {\n    name: \"fields\",\n    onChange: addedToForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    key: globalVars.blankOption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, globalVars.blankOption), fieldsOptions));\n};\n\nexport default WebFormSelect;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormSelect.tsx"],"names":["globalVars","WebFormSelect","webFields","addedToForm","fieldsOptions","map","field","fieldInForm","_id","fieldName","blankOption"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAgC;AACpD,QAAMC,aAAa,GAAGF,SAAS,CAACG,GAAV,CAAcC,KAAK,IAAI;AAC3C,WAAO,CAACA,KAAK,CAACC,WAAP,GACL;AAAQ,MAAA,GAAG,EAAED,KAAK,CAACE,GAAnB;AAAwB,MAAA,KAAK,EAAEF,KAAK,CAACG,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KAAK,CAACG,SADT,CADK,GAIH,IAJJ;AAKD,GANqB,CAAtB;AAQA,SACE,4BACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEN,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,GAAG,EAAEH,UAAU,CAACU,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCV,UAAU,CAACU,WAAjD,CADF,EAEGN,aAFH,CADF,CADF;AAQD,CAjBD;;AAmBA,eAAeH,aAAf","sourcesContent":["import globalVars from \"../../../library/globalVariables\";\n\nconst WebFormSelect = ({ webFields, addedToForm }) => {\n  const fieldsOptions = webFields.map(field => {\n    return !field.fieldInForm ? (\n      <option key={field._id} value={field.fieldName}>\n        {field.fieldName}\n      </option>\n    ) : null;\n  });\n\n  return (\n    <>\n      <select name=\"fields\" onChange={addedToForm}>\n        <option key={globalVars.blankOption}>{globalVars.blankOption}</option>\n        {fieldsOptions}\n      </select>\n    </>\n  );\n};\n\nexport default WebFormSelect;\n"]},"metadata":{},"sourceType":"module"}