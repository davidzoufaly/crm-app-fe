{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\"; //TODO: SKRÝVÁNÍ POLÍ CO NEJSOU V DB\n\nconst Client = ({\n  clientData,\n  fieldsData\n}) => {\n  const {\n    firstName,\n    lastName\n  } = clientData;\n  useEffect(() => {\n    document.title = `${firstName} ${lastName} ${globalVars.titleSubText}`; // console.log(clientData);\n    // console.log(fieldsData);\n  });\n\n  const showAllProperities = () => {\n    const list = [];\n    fieldsData.map(field => {\n      switch (field.fieldType) {\n        case \"text\":\n          list.push(__jsx(\"li\", {\n            key: field.fieldName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, new stringMethods(field.fieldName).camelStringToText().firstCharUpperCase().getString(), __jsx(\"textarea\", {\n            value: clientData[field.fieldName],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          })));\n          break;\n\n        case \"number\":\n          list.push(__jsx(\"li\", {\n            key: field.fieldName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, new stringMethods(field.fieldName).camelStringToText().firstCharUpperCase().getString(), __jsx(\"input\", {\n            type: \"number\",\n            value: clientData[field.fieldName],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          })));\n          break;\n\n        case \"select\":\n          list.push(__jsx(\"li\", {\n            key: field.fieldName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, field.fieldName, \":\", __jsx(\"select\", {\n            value: clientData[field.fieldName],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, field.fieldOptions.map(option => __jsx(\"option\", {\n            key: option.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, option.value)))));\n      }\n    });\n    return list;\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, firstName, \" \", lastName), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, showAllProperities()));\n};\n\nClient.getInitialProps = async context => {\n  const {\n    id\n  } = context.query;\n  const resClient = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/${id}`,\n    responseType: \"json\"\n  });\n  const clientData = await resClient.data;\n  const resFields = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const fieldsData = await resFields.data;\n  return {\n    clientData,\n    fieldsData\n  };\n};\n\nexport default Client;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[id].tsx"],"names":["Header","axios","useEffect","stringMethods","globalVars","Client","clientData","fieldsData","firstName","lastName","document","title","titleSubText","showAllProperities","list","map","field","fieldType","push","fieldName","camelStringToText","firstCharUpperCase","getString","fieldOptions","option","id","value","getInitialProps","context","query","resClient","method","url","serverURL","responseType","data","resFields"],"mappings":"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","sourcesContent":["import Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\";\n\n//TODO: SKRÝVÁNÍ POLÍ CO NEJSOU V DB\n\nconst Client = ({ clientData, fieldsData }: any) => {\n  const { firstName, lastName } = clientData;\n\n  useEffect(() => {\n    document.title = `${firstName} ${lastName} ${globalVars.titleSubText}`;\n    // console.log(clientData);\n    // console.log(fieldsData);\n  });\n\n  const showAllProperities = () => {\n    const list = [];\n    fieldsData.map(field => {\n      switch (field.fieldType) {\n        case \"text\":\n          list.push(\n            <li key={field.fieldName}>\n              {new stringMethods(field.fieldName)\n                .camelStringToText()\n                .firstCharUpperCase()\n                .getString()}\n              <textarea value={clientData[field.fieldName]} />\n            </li>\n          );\n          break;\n        case \"number\":\n          list.push(\n            <li key={field.fieldName}>\n              {new stringMethods(field.fieldName)\n                .camelStringToText()\n                .firstCharUpperCase()\n                .getString()}\n              <input type=\"number\" value={clientData[field.fieldName]} />\n            </li>\n          );\n          break;\n        case \"select\":\n          list.push(\n            <li key={field.fieldName}>\n              {field.fieldName}:\n              <select value={clientData[field.fieldName]}>\n                {field.fieldOptions.map(option => (\n                  <option key={option.id}>{option.value}</option>\n                ))}\n              </select>\n            </li>\n          );\n      }\n    });\n    return list;\n  };\n\n  return (\n    <div>\n      <Header />\n      <h1>\n        {firstName} {lastName}\n      </h1>\n      <ul>{showAllProperities()}</ul>\n    </div>\n  );\n};\n\nClient.getInitialProps = async (context: any) => {\n  const { id } = context.query;\n  const resClient = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/${id}`,\n    responseType: \"json\"\n  });\n  const clientData = await resClient.data;\n\n  const resFields = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const fieldsData = await resFields.data;\n\n  return { clientData, fieldsData };\n};\n\nexport default Client;\n"]},"metadata":{},"sourceType":"module"}