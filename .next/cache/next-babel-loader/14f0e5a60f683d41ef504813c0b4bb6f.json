{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport languages from \"../../library/languages\";\nimport globalVars from \"../../library/globalVariables\";\nimport Header from \"../../components/Header\";\nimport SingleClientData from \"../../components/singleClient/SingleClientData\";\nimport ButtonsSingle from \"../../components/singleClient/ButtonsSingle\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport EmailForm from \"../../components/EmailForm\";\n\nconst Client = ({\n  clientData,\n  fieldsData\n}) => {\n  const {\n    0: client,\n    1: setClient\n  } = useState(clientData);\n  const {\n    0: name,\n    1: setName\n  } = useState(`${clientData[\"First name\"]} ${clientData[\"Last name\"]}`);\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n  const {\n    0: isEmailCreated,\n    1: setIsEmailCreated\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    document.title = `${name} ${globalVars.titleSubText}`;\n    setInitialized(true);\n    saveToDb();\n  }, [name]);\n\n  const onSave = async e => {\n    e.preventDefault();\n    setClient(_objectSpread({}, client, {\n      lastModified: moment().format(\"llll\")\n    }));\n    setName(`${client[\"First name\"]} ${client[\"Last name\"]}`);\n  };\n\n  const saveToDb = async () => {\n    await axios({\n      method: \"put\",\n      data: client,\n      url: `${globalVars.serverURL}/clients/${router.query.id}`,\n      responseType: \"json\"\n    });\n  };\n\n  const onDelete = async e => {\n    e.preventDefault();\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/clients/${router.query.id}`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    (await data.msg) === \"Success\" ? router.push(\"/clients\") : alert(languages.en.somethingWentWrong);\n  };\n\n  const onInputChange = e => {\n    setClient(_objectSpread({}, client, {\n      [e.target.name]: e.target.type === \"number\" ? _parseInt(e.target.value) : e.target.value\n    }));\n  };\n\n  const toggleIsEmailCreated = () => {\n    setIsEmailCreated(isEmailCreated ? false : true);\n  };\n\n  return !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, name), __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(SingleClientData, {\n    fieldsData: fieldsData,\n    client: client,\n    onInputChange: onInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), __jsx(EmailForm, {\n    to: [client[\"Email\"]],\n    isEmailCreated: isEmailCreated,\n    toggleIsEmailCreated: toggleIsEmailCreated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(ButtonsSingle, {\n    onSave: onSave,\n    toggleIsEmailCreated: toggleIsEmailCreated,\n    onDelete: onDelete,\n    isEmailCreated: isEmailCreated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }));\n};\n\nClient.getInitialProps = async context => {\n  const {\n    id\n  } = context.query;\n  const resClient = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/${id}`,\n    responseType: \"json\"\n  });\n  const clientData = await resClient.data;\n  const resFields = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const fieldsData = await resFields.data;\n  return {\n    clientData,\n    fieldsData\n  };\n};\n\nexport default Client;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[id].tsx"],"names":["useRouter","useEffect","useState","moment","axios","languages","globalVars","Header","SingleClientData","ButtonsSingle","LoadingSpinner","EmailForm","Client","clientData","fieldsData","client","setClient","name","setName","initialized","setInitialized","isEmailCreated","setIsEmailCreated","router","document","title","titleSubText","saveToDb","onSave","e","preventDefault","lastModified","format","method","data","url","serverURL","query","id","responseType","onDelete","res","msg","push","alert","en","somethingWentWrong","onInputChange","target","type","value","toggleIsEmailCreated","getInitialProps","context","resClient","resFields"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport languages from \"../../library/languages\";\nimport globalVars from \"../../library/globalVariables\";\nimport Header from \"../../components/Header\";\nimport SingleClientData from \"../../components/singleClient/SingleClientData\";\nimport ButtonsSingle from \"../../components/singleClient/ButtonsSingle\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport EmailForm from \"../../components/EmailForm\";\n\nconst Client = ({ clientData, fieldsData }: any) => {\n  const [client, setClient] = useState(clientData);\n  const [name, setName] = useState(\n    `${clientData[\"First name\"]} ${clientData[\"Last name\"]}`\n  );\n  const [initialized, setInitialized] = useState(false);\n  const [isEmailCreated, setIsEmailCreated] = useState(false);\n  const router = useRouter();\n\n  useEffect(() => {\n    document.title = `${name} ${globalVars.titleSubText}`;\n    setInitialized(true);\n    saveToDb();\n  }, [name]);\n\n  const onSave = async e => {\n    e.preventDefault();\n    setClient({...client, lastModified: moment().format(\"llll\")})\n    setName(`${client[\"First name\"]} ${client[\"Last name\"]}`);\n  };\n\n  const saveToDb = async () => {\n    await axios({\n      method: \"put\",\n      data: client,\n      url: `${globalVars.serverURL}/clients/${router.query.id}`,\n      responseType: \"json\"\n    });\n  }\n\n  const onDelete = async e => {\n    e.preventDefault();\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/clients/${router.query.id}`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    (await data.msg) === \"Success\"\n      ? router.push(\"/clients\")\n      : alert(languages.en.somethingWentWrong);\n  };\n\n  const onInputChange = e => {\n    setClient({\n      ...client,\n      [e.target.name]:\n        e.target.type === \"number\" ? parseInt(e.target.value) : e.target.value\n    });\n  };\n\n  const toggleIsEmailCreated = () => {\n    setIsEmailCreated(isEmailCreated ? false : true);\n  };\n\n  return !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <h1>{name}</h1>\n      <form>\n        <SingleClientData\n          fieldsData={fieldsData}\n          client={client}\n          onInputChange={onInputChange}\n        />\n      </form>\n        <EmailForm\n          to={[client[\"Email\"]]}\n          isEmailCreated={isEmailCreated}\n          toggleIsEmailCreated={toggleIsEmailCreated}\n        />\n        <ButtonsSingle\n          onSave={onSave}\n          toggleIsEmailCreated={toggleIsEmailCreated}\n          onDelete={onDelete}\n          isEmailCreated={isEmailCreated}\n        />\n    </div>\n  );\n};\n\nClient.getInitialProps = async (context: any) => {\n  const { id } = context.query;\n  const resClient = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/${id}`,\n    responseType: \"json\"\n  });\n  const clientData = await resClient.data;\n\n  const resFields = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const fieldsData = await resFields.data;\n\n  return { clientData, fieldsData };\n};\n\nexport default Client;\n"]},"metadata":{},"sourceType":"module"}