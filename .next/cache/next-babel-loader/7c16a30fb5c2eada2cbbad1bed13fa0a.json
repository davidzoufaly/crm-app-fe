{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar stringMethods = function stringMethods(_text) {\n  var _this = this;\n\n  _classCallCheck(this, stringMethods);\n\n  _defineProperty(this, \"text\", void 0);\n\n  _defineProperty(this, \"helperArray\", void 0);\n\n  _defineProperty(this, \"splitStringByIndex\", function () {\n    var textInArray = _Array$from(_this.text).map(function (e) {\n      return e === e.toUpperCase() ? e = \"%ff%\".concat(e.toLowerCase()) : e;\n    }).join('').replace(/%ff%/g, ' ');\n\n    return _this;\n  });\n\n  _defineProperty(this, \"firstCharUpperCase\", function () {\n    var str = _this.text.toLowerCase();\n\n    var firstCharString = str.substr(0, 1).toUpperCase();\n    var restString = str.substr(1);\n    _this.text = firstCharString + restString;\n    return _this;\n  });\n\n  _defineProperty(this, \"removeSlash\", function () {\n    _this.text = _this.text.replace('/', '');\n    return _this;\n  });\n\n  _defineProperty(this, \"addStringToEnd\", function (text) {\n    _this.text = _this.text.concat(\" \".concat(text));\n    return _this;\n  });\n\n  this.text = _text;\n  this.helperArray = [];\n};\n\n;\nexport default stringMethods;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/functions/stringMethods.tsx"],"names":["stringMethods","text","textInArray","map","e","toUpperCase","toLowerCase","join","replace","str","firstCharString","substr","restString","concat","helperArray"],"mappings":";;;;IAAMA,a,GAIF,uBAAYC,KAAZ,EAA2B;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,8CAKN,YAAM;AACzB,QAAMC,WAAW,GAAG,YAAW,KAAI,CAACD,IAAhB,EAAsBE,GAAtB,CAA0B,UAACC,CAAD;AAAA,aAChDA,CAAC,KAAKA,CAAC,CAACC,WAAF,EAAN,GAAyBD,CAAC,iBAAUA,CAAC,CAACE,WAAF,EAAV,CAA1B,GAAyDF,CADT;AAAA,KAA1B,EAEtBG,IAFsB,CAEjB,EAFiB,EAEbC,OAFa,CAEL,OAFK,EAEI,GAFJ,CAApB;;AAIA,WAAO,KAAP;AACD,GAX0B;;AAAA,8CAaN,YAAM;AACzB,QAAIC,GAAG,GAAG,KAAI,CAACR,IAAL,CAAUK,WAAV,EAAV;;AACA,QAAMI,eAAe,GAAGD,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAc,CAAd,EAAiBN,WAAjB,EAAxB;AACA,QAAMO,UAAU,GAAGH,GAAG,CAACE,MAAJ,CAAW,CAAX,CAAnB;AACA,IAAA,KAAI,CAACV,IAAL,GAAYS,eAAe,GAAGE,UAA9B;AACA,WAAO,KAAP;AACD,GAnB0B;;AAAA,uCAqBb,YAAM;AAChB,IAAA,KAAI,CAACX,IAAL,GAAY,KAAI,CAACA,IAAL,CAAUO,OAAV,CAAkB,GAAlB,EAAuB,EAAvB,CAAZ;AACA,WAAO,KAAP;AACH,GAxB0B;;AAAA,0CA0BV,UAACP,IAAD,EAAkB;AAC/B,IAAA,KAAI,CAACA,IAAL,GAAY,KAAI,CAACA,IAAL,CAAUY,MAAV,YAAqBZ,IAArB,EAAZ;AACA,WAAO,KAAP;AACH,GA7B0B;;AACzB,OAAKA,IAAL,GAAYA,KAAZ;AACA,OAAKa,WAAL,GAAmB,EAAnB;AACD,C;;AA2BF;AAED,eAAed,aAAf","sourcesContent":["class stringMethods {\n    text : string;\n    private helperArray : number[];\n\n    constructor(text : string) {\n      this.text = text;\n      this.helperArray = [];\n    }\n    \n    splitStringByIndex = () => {\n      const textInArray = Array.from(this.text).map((e) =>\n    e === e.toUpperCase() ? (e = `%ff%${e.toLowerCase()}`) : e\n  ).join('').replace(/%ff%/g, ' ')\n  \n      return this;\n    };\n  \n    firstCharUpperCase = () => {\n      let str = this.text.toLowerCase();\n      const firstCharString = str.substr(0, 1).toUpperCase();\n      const restString = str.substr(1);\n      this.text = firstCharString + restString;\n      return this;\n    };\n\n    removeSlash = () => {\n        this.text = this.text.replace('/', '');\n        return this;\n    }\n\n    addStringToEnd = (text: string) =>Â {\n        this.text = this.text.concat(` ${text}`);\n        return this;\n    }\n  };\n\n  export default stringMethods;"]},"metadata":{},"sourceType":"module"}