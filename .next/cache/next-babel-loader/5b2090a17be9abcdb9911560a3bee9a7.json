{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/Header.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport EmailIcon from '@material-ui/icons/Email';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { Grid, Button, Toolbar, AppBar, Box, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nconst useStyles = makeStyles(theme => createStyles({\n  menuButton: {\n    marginRight: theme.spacing(2),\n    color: \"white\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  toolBar: {\n    padding: 0\n  },\n  mobilMenuButton: {\n    color: \"white\"\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles({});\n  const user = useContext(UserContext);\n  return __jsx(AppBar, {\n    position: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    className: classes.toolBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Box, {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: toggleMenu,\n    className: mobilMenuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), __jsx(Box, {\n    width: \"50%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/dashboard/[key]\",\n    as: `/dashboard/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, languages.en.dashboard))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/clients/[key]\",\n    as: `/clients/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(PeopleAltIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, languages.en.clients))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/emails/[key]\",\n    as: `/emails/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(EmailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, languages.en.emails))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/settings/[key]\",\n    as: `/settings/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, languages.en.settings)))))), __jsx(Button, {\n    className: classes.menuButton,\n    onClick: () => user.logoutUser(),\n    startIcon: __jsx(ExitToAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, languages.en.logout))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/Header.tsx"],"names":["useContext","Link","languages","UserContext","createStyles","makeStyles","Container","DashboardIcon","PeopleAltIcon","EmailIcon","SettingsIcon","ExitToAppIcon","Grid","Button","Toolbar","AppBar","Box","IconButton","MenuIcon","useStyles","theme","menuButton","marginRight","spacing","color","title","flexGrow","toolBar","padding","mobilMenuButton","Header","classes","user","toggleMenu","userkey","en","dashboard","clients","emails","settings","logoutUser","logout"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport EmailIcon from '@material-ui/icons/Email';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { Grid, Button, Toolbar, AppBar, Box, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    menuButton: {\n      marginRight: theme.spacing(2),\n      color: \"white\"\n    },\n    title: {\n      flexGrow: 1\n    },\n    toolBar: {\n      padding: 0,\n    },\n    mobilMenuButton: {\n      color: \"white\"\n    }\n  })\n);\n\nconst Header = () => {\n  const classes = useStyles({});\n\n  const user = useContext(UserContext);\n\n  return (\n    <AppBar position=\"fixed\">\n      <Container maxWidth=\"lg\">\n        <Toolbar className={classes.toolBar}>\n          <Box display=\"flex\" width=\"100%\" justifyContent=\"space-between\">\n            <IconButton onClick={toggleMenu} className={mobilMenuButton}>\n                <MenuIcon/>\n            </IconButton>\n            <Box width=\"50%\">\n              <Grid container>\n                <Grid item>\n              <Link\n                href=\"/dashboard/[key]\"\n                as={`/dashboard/${user.user.userkey}`}\n              >\n                <Button startIcon={<DashboardIcon />} className={classes.menuButton}>\n                  {languages.en.dashboard}\n                </Button>\n              </Link>\n              </Grid>\n              <Grid item>\n              <Link href=\"/clients/[key]\" as={`/clients/${user.user.userkey}`}>\n                <Button startIcon={<PeopleAltIcon />} className={classes.menuButton}>\n                  {languages.en.clients}\n                </Button>\n              </Link>\n              </Grid>\n              <Grid item>\n              <Link href=\"/emails/[key]\" as={`/emails/${user.user.userkey}`}>\n                <Button startIcon={<EmailIcon />} className={classes.menuButton}>\n                  {languages.en.emails}\n                </Button>\n              </Link>\n              </Grid>\n              <Grid item>\n              <Link\n                href=\"/settings/[key]\"\n                as={`/settings/${user.user.userkey}`}\n              >\n                <Button startIcon={<SettingsIcon />} className={classes.menuButton}>\n                  {languages.en.settings}\n                </Button>\n              </Link>\n              </Grid>\n              </Grid>\n            </Box>\n          </Box>\n          <Button\n            className={classes.menuButton}\n            onClick={() => user.logoutUser()}\n            startIcon={<ExitToAppIcon/>}\n          >\n            {languages.en.logout}\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}