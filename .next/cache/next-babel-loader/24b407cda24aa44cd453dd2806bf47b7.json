{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomFieldsList.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport stringMethods from \"../library/stringMethods\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst CustomFields = ({\n  fields,\n  setupEditedField,\n  deleteField\n}) => {\n  const useStyles = makeStyles({\n    card: {\n      textAlign: \"center\",\n      height: \"100%\",\n      minWidth: \"300px\"\n    },\n    list: {\n      listStyleType: \"disc\"\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  });\n  const classes = useStyles({});\n  const separatedCustomFields = fields.filter(({\n    fieldPermanent\n  }) => !fieldPermanent).map(({\n    fieldName,\n    _id,\n    fieldType,\n    fieldOptions\n  }) => {\n    const customFieldNameFormated = new stringMethods(fieldName.toLowerCase()).firstCharUpperCase().getString();\n    const options = fieldOptions.map(e => {\n      return __jsx(ListItem, {\n        key: e.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(ListItemText, {\n        primary: e.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    });\n    return __jsx(Grid, {\n      item: true,\n      key: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h5\",\n      component: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, customFieldNameFormated), __jsx(Typography, {\n      className: classes.pos,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"(\", fieldType.toLowerCase(), \")\"), fieldType === \"select\" && fieldOptions.length > 0 ? __jsx(List, {\n      className: classes.list,\n      dense: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, options) : null, __jsx(Fab, {\n      \"aria-label\": \"edit\",\n      color: \"primary\",\n      onClick: () => setupEditedField({\n        fieldName: customFieldNameFormated,\n        fieldType,\n        fieldPermanent: false,\n        fieldOptions,\n        id: _id\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Edit field\"), __jsx(Fab, {\n      \"aria-label\": \"delete\",\n      onClick: deleteField,\n      id: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))));\n  });\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, separatedCustomFields);\n};\n\nexport default CustomFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomFieldsList.tsx"],"names":["stringMethods","makeStyles","Card","CardContent","Typography","ListItemText","List","ListItem","Grid","DeleteIcon","CustomFields","fields","setupEditedField","deleteField","useStyles","card","textAlign","height","minWidth","list","listStyleType","title","fontSize","pos","marginBottom","classes","separatedCustomFields","filter","fieldPermanent","map","fieldName","_id","fieldType","fieldOptions","customFieldNameFormated","toLowerCase","firstCharUpperCase","getString","options","e","id","value","length"],"mappings":"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","sourcesContent":["import stringMethods from \"../library/stringMethods\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst CustomFields = ({ fields, setupEditedField, deleteField }: any) => {\n  const useStyles = makeStyles({\n    card: {\n      textAlign: \"center\",\n      height: \"100%\",\n      minWidth: \"300px\"\n    },\n    list: {\n      listStyleType: \"disc\"\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  });\n\n  const classes = useStyles({});\n\n  const separatedCustomFields = fields\n    .filter(({ fieldPermanent }: any) => !fieldPermanent)\n    .map(({ fieldName, _id, fieldType, fieldOptions }: any) => {\n      const customFieldNameFormated = new stringMethods(fieldName.toLowerCase())\n        .firstCharUpperCase()\n        .getString();\n\n      const options = fieldOptions.map((e: any) => {\n        return (\n          <ListItem key={e.id}>\n            <ListItemText primary={e.value} />\n          </ListItem>\n        );\n      });\n\n      return (\n        <Grid item key={_id}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h3\">\n                {customFieldNameFormated}\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                ({fieldType.toLowerCase()})\n              </Typography>\n              {fieldType === \"select\" && fieldOptions.length > 0 ? (\n                <List className={classes.list} dense={true}>\n                  {options}\n                </List>\n              ) : null}\n              <Fab\n                aria-label=\"edit\"\n                color=\"primary\"\n                onClick={() =>\n                  setupEditedField({\n                    fieldName: customFieldNameFormated,\n                    fieldType,\n                    fieldPermanent: false,\n                    fieldOptions,\n                    id: _id\n                  })\n                }\n              >\n                Edit field\n              </Fab>\n              <Fab aria-label=\"delete\" onClick={deleteField} id={_id}>\n                <DeleteIcon />\n              </Fab>\n            </CardContent>\n          </Card>\n        </Grid>\n      );\n    });\n\n  return (\n    <Grid container spacing={2}>\n      {separatedCustomFields}\n    </Grid>\n  );\n};\n\nexport default CustomFields;\n"]},"metadata":{},"sourceType":"module"}