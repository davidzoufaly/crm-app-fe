{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\n\nvar LoginForm = function LoginForm() {\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var userContext = useContext(UserContext);\n\n  var onChange = function onChange(e) {\n    e.target.name === \"username\" ? setUser(_objectSpread({}, user, {\n      username: e.target.value\n    })) : setUser(_objectSpread({}, user, {\n      password: e.target.value\n    }));\n  };\n\n  var onLogin =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var userRes, userData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios({\n                method: \"POST\",\n                data: user,\n                url: \"\".concat(globalVars.serverURL, \"/users/authenticate-user\"),\n                responseType: \"json\"\n              });\n\n            case 2:\n              userRes = _context.sent;\n              _context.next = 5;\n              return userRes.data;\n\n            case 5:\n              userData = _context.sent;\n              console.log(userData);\n\n              if (userData.msg === \"Success\") {\n                userContext.setUser(userData.key);\n              } else {\n                alert(languages.en.somethingWentWrong);\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    onChange: onChange,\n    type: \"text\",\n    value: user.username,\n    text: \"username\",\n    title: new stringMethods(languages.en.username).firstCharUpperCase().getString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: user.password,\n    text: \"password\",\n    title: languages.en.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(LoginButton, {\n    onClick: onLogin,\n    text: languages.en.login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx"],"names":["useState","useContext","axios","UserContext","TextInput","LoginButton","globalVars","languages","stringMethods","LoginForm","username","password","user","setUser","userContext","onChange","e","target","name","value","onLogin","method","data","url","serverURL","responseType","userRes","userData","console","log","msg","key","alert","en","somethingWentWrong","firstCharUpperCase","getString","login"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\n\nconst LoginForm = () => {\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\n  const userContext = useContext(UserContext);\n\n  const onChange = e => {\n    e.target.name === \"username\"\n      ? setUser({ ...user, username: e.target.value })\n      : setUser({ ...user, password: e.target.value });\n  };\n\n  const onLogin = async () => {\n    const userRes = await axios({\n      method: \"POST\",\n      data: user,\n      url: `${globalVars.serverURL}/users/authenticate-user`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n    console.log(userData)\n    if (userData.msg === \"Success\") {\n      userContext.setUser(userData.key);\n    } else {\n      alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  return (\n    <>\n      <h2>Login</h2>\n      <form>\n        <TextInput\n          onChange={onChange}\n          type=\"text\"\n          value={user.username}\n          text=\"username\"\n          title={new stringMethods(languages.en.username).firstCharUpperCase().getString()}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={user.password}\n          text=\"password\"\n          title={languages.en.password}\n        />\n        <LoginButton onClick={onLogin} text={languages.en.login} />\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}