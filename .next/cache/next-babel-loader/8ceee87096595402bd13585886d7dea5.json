{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/singleClient/SingleClientData.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport { TextField, Select, FormControl, MenuItem, InputLabel } from \"@material-ui/core\";\n\nconst SingleClientData = ({\n  fieldsData,\n  client,\n  onInputChange\n}) => fieldsData.map(field => {\n  switch (field.fieldType) {\n    case \"text\":\n      return __jsx(TextField, {\n        key: field.fieldName,\n        name: field.fieldName,\n        label: field.fieldName,\n        fullWidth: true,\n        margin: \"normal\",\n        value: client[field.fieldName],\n        onChange: onInputChange,\n        disabled: field.fieldName === \"Date added\" || field.fieldName === \"Last modified\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n\n    case \"number\":\n      return __jsx(TextField, {\n        fullWidth: true,\n        key: field.fieldName,\n        label: field.fieldName,\n        type: \"number\",\n        name: field.fieldName,\n        value: client[field.fieldName] ? client[field.fieldName] : \"\",\n        onChange: onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n\n    case \"select\":\n      const fieldNameAsHtml = new stringMethods(field.fieldName).textToHtmlProp().getString();\n      return __jsx(FormControl, {\n        key: field.fieldName,\n        fullWidth: true,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(InputLabel, {\n        htmlFor: fieldNameAsHtml,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, field.fieldName), __jsx(Select, {\n        name: field.fieldName,\n        value: client[field.fieldName] ? client[field.fieldName] : \"ff\",\n        onChange: onInputChange,\n        id: fieldNameAsHtml,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(MenuItem, {\n        key: globalVars.blankOption,\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, globalVars.blankOption), field.fieldOptions.map(option => __jsx(MenuItem, {\n        key: option.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, option.value))));\n  }\n});\n\nexport default SingleClientData;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/singleClient/SingleClientData.tsx"],"names":["globalVars","stringMethods","TextField","Select","FormControl","MenuItem","InputLabel","SingleClientData","fieldsData","client","onInputChange","map","field","fieldType","fieldName","fieldNameAsHtml","textToHtmlProp","getString","blankOption","fieldOptions","option","id","value"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,UALF,QAMO,mBANP;;AAQA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA;AAAtB,CAAD,KACvBF,UAAU,CAACG,GAAX,CAAeC,KAAK,IAAI;AACtB,UAAQA,KAAK,CAACC,SAAd;AACE,SAAK,MAAL;AACE,aACI,MAAC,SAAD;AACE,QAAA,GAAG,EAAED,KAAK,CAACE,SADb;AAEE,QAAA,IAAI,EAAEF,KAAK,CAACE,SAFd;AAGE,QAAA,KAAK,EAAEF,KAAK,CAACE,SAHf;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,MAAM,EAAC,QALT;AAME,QAAA,KAAK,EAAEL,MAAM,CAACG,KAAK,CAACE,SAAP,CANf;AAOE,QAAA,QAAQ,EAAEJ,aAPZ;AAQE,QAAA,QAAQ,EACNE,KAAK,CAACE,SAAN,KAAoB,YAApB,IACAF,KAAK,CAACE,SAAN,KAAoB,eAVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;AAeF,SAAK,QAAL;AACE,aACI,MAAC,SAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,GAAG,EAAEF,KAAK,CAACE,SAFb;AAGE,QAAA,KAAK,EAAEF,KAAK,CAACE,SAHf;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,IAAI,EAAEF,KAAK,CAACE,SALd;AAME,QAAA,KAAK,EAAEL,MAAM,CAACG,KAAK,CAACE,SAAP,CAAN,GAA0BL,MAAM,CAACG,KAAK,CAACE,SAAP,CAAhC,GAAoD,EAN7D;AAOE,QAAA,QAAQ,EAAEJ,aAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;AAWF,SAAK,QAAL;AACE,YAAMK,eAAe,GAAG,IAAId,aAAJ,CAAkBW,KAAK,CAACE,SAAxB,EACrBE,cADqB,GAErBC,SAFqB,EAAxB;AAGA,aACE,MAAC,WAAD;AAAa,QAAA,GAAG,EAAEL,KAAK,CAACE,SAAxB;AAAmC,QAAA,SAAS,MAA5C;AAA6C,QAAA,MAAM,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAY,QAAA,OAAO,EAAEC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCH,KAAK,CAACE,SAA7C,CADF,EAEE,MAAC,MAAD;AACE,QAAA,IAAI,EAAEF,KAAK,CAACE,SADd;AAEE,QAAA,KAAK,EAAEL,MAAM,CAACG,KAAK,CAACE,SAAP,CAAN,GAA0BL,MAAM,CAACG,KAAK,CAACE,SAAP,CAAhC,GAAoD,IAF7D;AAGE,QAAA,QAAQ,EAAEJ,aAHZ;AAIE,QAAA,EAAE,EAAEK,eAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,MAAC,QAAD;AAAU,QAAA,GAAG,EAAEf,UAAU,CAACkB,WAA1B;AAAuC,QAAA,KAAK,EAAC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiDlB,UAAU,CAACkB,WAA5D,CANF,EAOGN,KAAK,CAACO,YAAN,CAAmBR,GAAnB,CAAuBS,MAAM,IAC5B,MAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,MAAM,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BD,MAAM,CAACE,KAAlC,CADD,CAPH,CAFF,CADF;AAjCJ;AAkDD,CAnDD,CADF;;AAsDA,eAAef,gBAAf","sourcesContent":["import globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport {\n  TextField,\n  Select,\n  FormControl,\n  MenuItem,\n  InputLabel\n} from \"@material-ui/core\";\n\nconst SingleClientData = ({ fieldsData, client, onInputChange }: any) =>\n  fieldsData.map(field => {\n    switch (field.fieldType) {\n      case \"text\":\n        return (\n            <TextField\n              key={field.fieldName}\n              name={field.fieldName}\n              label={field.fieldName}\n              fullWidth\n              margin=\"normal\"\n              value={client[field.fieldName]}\n              onChange={onInputChange}\n              disabled={\n                field.fieldName === \"Date added\" ||\n                field.fieldName === \"Last modified\"\n              }\n            />\n        );\n      case \"number\":\n        return (\n            <TextField\n              fullWidth\n              key={field.fieldName}\n              label={field.fieldName}\n              type=\"number\"\n              name={field.fieldName}\n              value={client[field.fieldName] ? client[field.fieldName] : \"\"}\n              onChange={onInputChange}\n            />\n        );\n      case \"select\":\n        const fieldNameAsHtml = new stringMethods(field.fieldName)\n          .textToHtmlProp()\n          .getString();\n        return (\n          <FormControl key={field.fieldName} fullWidth margin=\"normal\">\n            <InputLabel htmlFor={fieldNameAsHtml}>{field.fieldName}</InputLabel>\n            <Select\n              name={field.fieldName}\n              value={client[field.fieldName] ? client[field.fieldName] : \"ff\"}\n              onChange={onInputChange}\n              id={fieldNameAsHtml}\n            >\n              <MenuItem key={globalVars.blankOption} value=\"\">{globalVars.blankOption}</MenuItem>\n              {field.fieldOptions.map(option => (\n                <MenuItem key={option.id}>{option.value}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        );\n    }\n  });\n\nexport default SingleClientData;\n"]},"metadata":{},"sourceType":"module"}