{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport globalVars from \"../../../library/globalVariables\";\nimport languages from \"../../../library/languages\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { TextField, Box, Grid } from \"@material-ui/core\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    formWrapper: _defineProperty({\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      boxShadow: theme.shadows[\"1\"],\n      padding: theme.spacing(3),\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\"\n    }, theme.breakpoints.down(\"sm\"), {\n      width: \"100%\"\n    }),\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  });\n});\n\nvar EmailSettingsForm = function EmailSettingsForm(_ref) {\n  var username = _ref.username,\n      pass = _ref.pass;\n\n  var _useState = useState({\n    username: username,\n    pass: pass\n  }),\n      emailSettings = _useState[0],\n      setEmailSettings = _useState[1];\n\n  var _useState2 = useState(false),\n      isPassShown = _useState2[0],\n      setIsPassShown = _useState2[1];\n\n  var passEl = useRef(null);\n  var user = useContext(UserContext);\n  var classes = useStyles({});\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return axios({\n                method: \"post\",\n                url: \"\".concat(globalVars.serverURL, \"/emails\"),\n                params: {\n                  key: user.user.userkey\n                },\n                data: emailSettings,\n                responseType: \"json\"\n              });\n\n            case 3:\n              res = _context.sent;\n              data = res.data;\n\n              if (data === \"Success\") {\n                alert(languages.en.emailSettingsUpdatedSuccess);\n              } else {\n                alert(languages.en.somethingWentWrong);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var togglePass = function togglePass(e) {\n    e.preventDefault();\n\n    if (!isPassShown) {\n      passEl.current.type = \"text\";\n      setIsPassShown(true);\n    } else {\n      passEl.current.type = \"password\";\n      setIsPassShown(false);\n    }\n  };\n\n  var onChange = function onChange(e) {\n    setEmailSettings(_objectSpread({}, emailSettings, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return __jsx(Box, {\n    mt: \"1rem\",\n    mb: \"5rem\"\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    gutterBottom: true\n  }, languages.en.onlyGoogleAcc), __jsx(Typography, {\n    variant: \"body1\",\n    gutterBottom: true\n  }, languages.en.setupeLessSecure), __jsx(Box, {\n    className: classes.formWrapper\n  }, __jsx(\"form\", {\n    onSubmit: onSubmit\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6\n  }, __jsx(TextField, {\n    id: \"acc-name\",\n    type: \"text\",\n    name: \"username\",\n    autoComplete: \"email\",\n    value: emailSettings.username,\n    onChange: onChange,\n    margin: \"normal\",\n    label: languages.en.email,\n    fullWidth: true\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6\n  }, __jsx(TextField, {\n    id: \"acc-pass\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    name: \"pass\",\n    margin: \"normal\",\n    inputRef: passEl,\n    value: emailSettings.pass,\n    onChange: onChange,\n    label: languages.en.password,\n    fullWidth: true\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      marginRight: \"1rem\"\n    },\n    onClick: togglePass,\n    startIcon: isPassShown ? __jsx(VisibilityOffIcon, null) : __jsx(VisibilityIcon, null)\n  }, isPassShown ? languages.en.password : languages.en.password), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\"\n  }, languages.en.save)))))));\n};\n\nexport default EmailSettingsForm;","map":null,"metadata":{},"sourceType":"module"}