{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Fab } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => createStyles({\n  card: {\n    textAlign: \"center\",\n    minWidth: \"280px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\"\n    }\n  },\n  list: {\n    padding: 0,\n    lineHeight: \"14px\",\n    margin: \"auto\",\n    marginBottom: theme.spacing(1)\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  cardWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    height: \"100%\"\n  },\n  listItemIcon: {\n    minWidth: 0,\n    paddingRight: theme.spacing(1),\n    color: \"black\"\n  }\n}));\n\nconst CustomFields = ({\n  fields,\n  setupEditedField,\n  deleteField\n}) => {\n  const classes = useStyles({});\n  const separatedCustomFields = fields.filter(({\n    fieldPermanent\n  }) => !fieldPermanent).map(({\n    fieldName,\n    _id,\n    fieldType,\n    fieldOptions\n  }) => {\n    const options = fieldOptions.map(e => {\n      return __jsx(ListItem, {\n        key: e.id\n      }, __jsx(ListItemText, {\n        primary: e.value\n      }));\n    });\n    return __jsx(Grid, {\n      item: true,\n      key: _id,\n      className: classes.card\n    }, __jsx(Card, {\n      style: {\n        height: \"100%\"\n      }\n    }, __jsx(CardContent, {\n      className: classes.cardWrapper\n    }, __jsx(Box, null, __jsx(Typography, {\n      variant: \"h6\",\n      component: \"h3\"\n    }, fieldName), __jsx(Typography, {\n      className: classes.pos,\n      color: \"textSecondary\"\n    }, \"(\", fieldType.toLowerCase(), \")\"), fieldType === \"select\" && fieldOptions.length > 0 ? __jsx(Box, null, __jsx(List, {\n      className: classes.list,\n      dense: true\n    }, options)) : null), __jsx(Box, null, __jsx(Box, {\n      width: \"40%\",\n      mt: \"1rem\"\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 1\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6\n    }, __jsx(Fab, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: () => setupEditedField({\n        fieldName,\n        fieldType,\n        fieldPermanent: false,\n        fieldOptions,\n        _id: _id\n      })\n    }, __jsx(EditIcon, null))), __jsx(Grid, {\n      item: true,\n      xs: 6\n    }, __jsx(Fab, {\n      size: \"small\",\n      color: \"secondary\",\n      onClick: () => deleteField(_id)\n    }, __jsx(DeleteIcon, null)))))))));\n  });\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, separatedCustomFields);\n};\n\nexport default CustomFields;","map":null,"metadata":{},"sourceType":"module"}