{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CreateClient.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\n\nvar CreateClient = function CreateClient(_ref) {\n  var fields = _ref.fields,\n      isClientAdded = _ref.isClientAdded,\n      toggleIsClientAdded = _ref.toggleIsClientAdded,\n      refreshList = _ref.refreshList;\n  var initialNewClintState = fields.map(function (e) {\n    return e.fieldName;\n  }).reduce(function (o, key) {\n    return _Object$assign(o, _defineProperty({}, key, \"\"));\n  }, {});\n\n  var _useState = useState(initialNewClintState),\n      newClient = _useState[0],\n      setNewClient = _useState[1];\n\n  var onChange = function onChange(fieldName, fieldType, event) {\n    fieldType === \"number\" ? setNewClient(_objectSpread({}, newClient, _defineProperty({}, fieldName, _parseInt(event.target.value)))) : setNewClient(_objectSpread({}, newClient, _defineProperty({}, fieldName, event.target.value)));\n  };\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var clientRes, clientData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return axios({\n                method: \"post\",\n                data: newClient,\n                url: \"\".concat(globalVars.serverURL, \"/clients\"),\n                responseType: \"json\"\n              });\n\n            case 3:\n              clientRes = _context.sent;\n              _context.next = 6;\n              return clientRes.data;\n\n            case 6:\n              clientData = _context.sent;\n\n              if (clientData.msg === \"Success\") {\n                setNewClient(initialNewClintState);\n                toggleIsClientAdded();\n                refreshList();\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onCancel = function onCancel() {\n    setNewClient(initialNewClintState);\n    toggleIsClientAdded();\n  };\n\n  useEffect(function () {// console.log(newClient);\n  });\n  return isClientAdded ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Add new client\"), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(ClientForm, {\n    fields: fields,\n    onChange: onChange,\n    newClient: newClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Save\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Cancel\"))) : null;\n};\n\nexport default CreateClient;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CreateClient.tsx"],"names":["Button","Typography","ClientForm","useEffect","useState","axios","globalVars","CreateClient","fields","isClientAdded","toggleIsClientAdded","refreshList","initialNewClintState","map","e","fieldName","reduce","o","key","newClient","setNewClient","onChange","fieldType","event","target","value","onSubmit","preventDefault","method","data","url","serverURL","responseType","clientRes","clientData","msg","onCancel"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useEffect, useState, useReducer } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\n\nconst CreateClient = ({\n  fields,\n  isClientAdded,\n  toggleIsClientAdded,\n  refreshList\n}: any) => {\n  const initialNewClintState = fields\n    .map((e: any) => e.fieldName)\n    .reduce((o, key) => Object.assign(o, { [key]: \"\" }), {});\n\n  const [newClient, setNewClient] = useState(initialNewClintState);\n\n  const onChange = (fieldName, fieldType, event) => {\n    fieldType === \"number\"\n      ? setNewClient({\n          ...newClient,\n          [fieldName]: parseInt(event.target.value)\n        })\n      : setNewClient({ ...newClient, [fieldName]: event.target.value });\n  };\n\n  const onSubmit = async(e) => {\n    e.preventDefault();\n    const clientRes = await axios({\n      method: \"post\",\n      data: newClient,\n      url: `${globalVars.serverURL}/clients`,\n      responseType: \"json\"\n    });\n    const clientData = await clientRes.data;\n    if (clientData.msg === \"Success\") {\n      setNewClient(initialNewClintState);\n      toggleIsClientAdded();\n      refreshList();\n    }\n  };\n\n  const onCancel = () => {\n    setNewClient(initialNewClintState);\n    toggleIsClientAdded();\n  };\n\n  useEffect(() => {\n    // console.log(newClient);\n  });\n\n  return isClientAdded ? (\n    <div>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        Add new client\n      </Typography>\n      <form onSubmit={onSubmit}>\n      <ClientForm fields={fields} onChange={onChange} newClient={newClient} />\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n        Save\n      </Button>\n      <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\n        Cancel\n      </Button>\n      </form>\n    </div>\n  ) : null;\n};\n\nexport default CreateClient;\n"]},"metadata":{},"sourceType":"module"}