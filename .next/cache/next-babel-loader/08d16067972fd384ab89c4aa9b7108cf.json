{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormVisibleOrNot.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport languages from \"../../../library/languages\";\nimport { Typography, Box, Button } from \"@material-ui/core\";\n\nvar WebFormVisibleOrNot = function WebFormVisibleOrNot(_ref) {\n  var webFields = _ref.webFields,\n      dispatch = _ref.dispatch,\n      addVisibleSelect = _ref.addVisibleSelect,\n      showOptionsOnClick = _ref.showOptionsOnClick;\n  var VisibleOrNot = webFields.map(function (_ref2) {\n    var fieldName = _ref2.fieldName,\n        fieldFormVisible = _ref2.fieldFormVisible,\n        _id = _ref2._id,\n        pause = _ref2.pause;\n    return fieldFormVisible === null ? pause ? __jsx(Box, {\n      key: _id,\n      mb: \"2rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, __jsx(Typography, {\n      gutterBottom: true,\n      component: \"h4\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, languages.en.shouldBe, \" \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, fieldName), \" \", languages.en.visibleInForm, \"?\"), __jsx(Button, {\n      id: fieldName,\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginRight: \"1rem\"\n      },\n      onClick: addVisibleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, languages.en.yes), __jsx(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: showOptionsOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, languages.en.no)) : null : null;\n  });\n  return __jsx(React.Fragment, null, VisibleOrNot);\n};\n\nexport default WebFormVisibleOrNot;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormVisibleOrNot.tsx"],"names":["languages","Typography","Box","Button","WebFormVisibleOrNot","webFields","dispatch","addVisibleSelect","showOptionsOnClick","VisibleOrNot","map","fieldName","fieldFormVisible","_id","pause","en","shouldBe","visibleInForm","marginRight","yes","no"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,QAAwC,mBAAxC;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAyE;AAAA,MAAtEC,SAAsE,QAAtEA,SAAsE;AAAA,MAA3DC,QAA2D,QAA3DA,QAA2D;AAAA,MAAjDC,gBAAiD,QAAjDA,gBAAiD;AAAA,MAA/BC,kBAA+B,QAA/BA,kBAA+B;AAEnG,MAAMC,YAAY,GAAGJ,SAAS,CAACK,GAAV,CAAc;AAAA,QAAEC,SAAF,SAAEA,SAAF;AAAA,QAAaC,gBAAb,SAAaA,gBAAb;AAAA,QAA+BC,GAA/B,SAA+BA,GAA/B;AAAA,QAAoCC,KAApC,SAAoCA,KAApC;AAAA,WACjCF,gBAAgB,KAAK,IAArB,GACEE,KAAK,GACH,MAAC,GAAD;AAAK,MAAA,GAAG,EAAED,GAAV;AAAe,MAAA,EAAE,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,SAAS,EAAC,IAAnC;AAAwC,MAAA,OAAO,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,SAAS,CAACe,EAAV,CAAaC,QADhB,OAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASL,SAAT,CAD1B,OACwDX,SAAS,CAACe,EAAV,CAAaE,aADrE,MADF,EAIE,MAAC,MAAD;AAAQ,MAAA,EAAE,EAAEN,SAAZ;AAAuB,MAAA,OAAO,EAAC,WAA/B;AAA2C,MAAA,KAAK,EAAC,SAAjD;AAA2D,MAAA,KAAK,EAAE;AAACO,QAAAA,WAAW,EAAE;AAAd,OAAlE;AAAyF,MAAA,OAAO,EAAEX,gBAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,SAAS,CAACe,EAAV,CAAaI,GADhB,CAJF,EAOE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAA8C,MAAA,OAAO,EAAEX,kBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4ER,SAAS,CAACe,EAAV,CAAaK,EAAzF,CAPF,CADG,GAUD,IAXN,GAYI,IAb6B;AAAA,GAAd,CAArB;AAgBA,SACE,4BACCX,YADD,CADF;AAKD,CAvBD;;AAyBA,eAAeL,mBAAf","sourcesContent":["import languages from \"../../../library/languages\";\nimport { Typography, Box, ButtonÂ } from \"@material-ui/core\";\n\nconst WebFormVisibleOrNot = ({ webFields, dispatch, addVisibleSelect, showOptionsOnClick } : any) => {\n\n  const VisibleOrNot = webFields.map(({fieldName, fieldFormVisible, _id, pause}) =>\n    fieldFormVisible === null ? (\n      pause ? (\n        <Box key={_id} mb=\"2rem\">\n          <Typography gutterBottom component=\"h4\" variant=\"h6\">\n            {languages.en.shouldBe} <strong>{fieldName}</strong> {languages.en.visibleInForm}?\n          </Typography>\n          <Button id={fieldName} variant=\"contained\" color=\"primary\" style={{marginRight: \"1rem\"}} onClick={addVisibleSelect}>\n            {languages.en.yes}\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={showOptionsOnClick}>{languages.en.no}</Button>\n        </Box>\n      ) : null\n    ) : null\n  );\n\n  return (\n    <>\n    {VisibleOrNot}\n    </>\n  );\n};\n\nexport default WebFormVisibleOrNot;\n"]},"metadata":{},"sourceType":"module"}