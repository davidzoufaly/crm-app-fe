{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/EmailForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport { useState, useEffect } from \"react\";\n\nconst EmailForm = ({\n  to\n}) => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState({});\n  useEffect(() => {\n    console.log(to);\n  });\n\n  const sendEmail = async () => {\n    const res = await axios({\n      method: \"post\",\n      data: email,\n      url: `${globalVars.serverURL}/emails/send`,\n      responseType: \"json\"\n    });\n    const data = res.data;\n    data.msg === \"Success\" ? alert(\"Your mail has been succesfully sent.\") : alert(\"Something went wrong!\");\n  };\n\n  const onChange = e => {\n    setEmail(_objectSpread({}, email, {\n      [e.target.name]: e.target.value\n    }));\n  }; // const read = to === [] ? \"readOnly\" : \"\"; \n\n\n  return __jsx(\"form\", {\n    onSubmit: sendEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"to\",\n    onChange: onChange,\n    readOnly: to !== [] ? true : false,\n    defaultValue: to,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"subject\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), __jsx(\"textarea\", {\n    name: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Cancel\"), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Send\"));\n};\n\nexport default EmailForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/EmailForm.tsx"],"names":["axios","globalVars","useState","useEffect","EmailForm","to","email","setEmail","console","log","sendEmail","res","method","data","url","serverURL","responseType","msg","alert","onChange","e","target","name","value"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC9B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACH,GAFQ,CAAT;;AAIA,QAAMK,SAAS,GAAG,YAAW;AACzB,UAAMC,GAAG,GAAG,MAAMX,KAAK,CAAC;AACpBY,MAAAA,MAAM,EAAE,MADY;AAEpBC,MAAAA,IAAI,EAAEP,KAFc;AAGpBQ,MAAAA,GAAG,EAAG,GAAEb,UAAU,CAACc,SAAU,cAHT;AAIpBC,MAAAA,YAAY,EAAE;AAJM,KAAD,CAAvB;AAMA,UAAMH,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAA,IAAAA,IAAI,CAACI,GAAL,KAAa,SAAb,GAAyBC,KAAK,CAAC,sCAAD,CAA9B,GAAyEA,KAAK,CAAC,uBAAD,CAA9E;AACH,GATD;;AAWA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpBb,IAAAA,QAAQ,mBAAKD,KAAL;AAAY,OAACc,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAAvC,OAAR;AACH,GAFD,CAlB8B,CAsB9B;;;AAEA,SACI;AAAM,IAAA,QAAQ,EAAEb,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,IAAxB;AAA6B,IAAA,QAAQ,EAAES,QAAvC;AAAiD,IAAA,QAAQ,EAAEd,EAAE,KAAK,EAAP,GAAY,IAAZ,GAAmB,KAA9E;AAAqF,IAAA,YAAY,EAAEA,EAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,SAAxB;AAAkC,IAAA,QAAQ,EAAEc,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAU,IAAA,IAAI,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,CADJ;AASH,CAjCD;;AAmCA,eAAef,SAAf","sourcesContent":["import axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport { useState, useEffect } from \"react\";\n\nconst EmailForm = ({to} : any) => {\n    const [email, setEmail] = useState({});\n\n    useEffect(() => {\n        console.log(to);\n    })\n\n    const sendEmail = async() => {\n        const res = await axios({\n            method: \"post\",\n            data: email,\n            url: `${globalVars.serverURL}/emails/send`,\n            responseType: \"json\"\n        })\n        const data = res.data;\n        data.msg === \"Success\" ? alert(\"Your mail has been succesfully sent.\") : alert(\"Something went wrong!\")\n    }\n\n    const onChange = (e) => {\n        setEmail({...email, [e.target.name] : e.target.value})\n    }\n\n    // const read = to === [] ? \"readOnly\" : \"\"; \n\n    return (\n        <form onSubmit={sendEmail}>\n            <input type=\"text\" name=\"to\" onChange={onChange} readOnly={to !== [] ? true : false} defaultValue={to} />\n            <input type=\"text\" name=\"subject\" onChange={onChange} />\n            <textarea name=\"message\" />\n            <button>Cancel</button>\n            <button type=\"submit\">Send</button>\n        </form>\n    )\n}\n\nexport default EmailForm;"]},"metadata":{},"sourceType":"module"}