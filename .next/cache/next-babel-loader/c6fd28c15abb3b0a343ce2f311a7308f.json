{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/nextjsTs/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport axios from 'axios';\n\nvar Index = function Index(props) {\n  var _useState = useState([]),\n      clients = _useState[0],\n      setClient = _useState[1];\n\n  setClient(props.data);\n  console.log(clients);\n\n  var mapClients = function mapClients(cl) {\n    if (cl !== []) {\n      var listOfClients = cl.map(function (e) {\n        __jsx(\"li\", {\n          key: e._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, e.name);\n      });\n      return listOfClients;\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"hiii\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, mapClients(clients)));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios.get('http://localhost:8080/api/clients');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.data;\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/nextjsTs/pages/index.tsx"],"names":["useState","axios","Index","props","clients","setClient","data","console","log","mapClients","cl","listOfClients","map","e","_id","name","getInitialProps","get","res"],"mappings":";;;;;AAAA,SAASA,QAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAiB;AAAA,kBACAH,QAAQ,CAAC,EAAD,CADR;AAAA,MACtBI,OADsB;AAAA,MACbC,SADa;;AAIzBA,EAAAA,SAAS,CAACF,KAAK,CAACG,IAAP,CAAT;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AAGJ,MAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAc;AAC/B,QAAIA,EAAE,KAAK,EAAX,EAAe;AACb,UAAMC,aAAa,GAAGD,EAAE,CAACE,GAAH,CAAO,UAAAC,CAAC,EAAI;AAChC;AAAI,UAAA,GAAG,EAAEA,CAAC,CAACC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBD,CAAC,CAACE,IAAnB;AACD,OAFqB,CAAtB;AAGA,aAAOJ,aAAP;AACD;AACF,GAPD;;AASA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UAAU,CAACL,OAAD,CADb,CAFF,CAFF;AASD,CA1BD;;AA4BAF,KAAK,CAACc,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJf,KAAK,CAACgB,GAAN,CAAU,mCAAV,CADI;;AAAA;AAChBC,UAAAA,GADgB;AAAA;AAAA,iBAEHA,GAAG,CAACZ,IAFD;;AAAA;AAEhBA,UAAAA,IAFgB;AAAA,2CAGf;AACNA,YAAAA,IAAI,EAAJA;AADM,WAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAQA,eAAeJ,KAAf","sourcesContent":["import { useState  } from 'react';\nimport axios from 'axios';\n\nconst Index = (props : any) => {\n  const [clients, setClient] = useState([]);\n\n\n      setClient(props.data);\n      console.log(clients);\n  \n\n  const mapClients = (cl : any) => {\n    if (cl !== []) {\n      const listOfClients = cl.map(e =>Â {\n        <li key={e._id}>{e.name}</li>\n      });\n      return listOfClients;\n    }\n  }\n  \n  return (\n\n    <div>\n      <h1>hiii</h1>\n      <ul>\n        {mapClients(clients)}\n      </ul>\n    </div>\n  );\n};\n\nIndex.getInitialProps = async () => {\n  const res = await axios.get('http://localhost:8080/api/clients');\n  const data = await res.data;\n  return {\n   data\n  }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}