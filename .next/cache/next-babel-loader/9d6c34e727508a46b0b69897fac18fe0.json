{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/Header.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport EmailIcon from '@material-ui/icons/Email';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { Grid, Button, Toolbar, AppBar, Box, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nconst useStyles = makeStyles(theme => createStyles({\n  menuButton: {\n    marginRight: theme.spacing(2),\n    color: \"white\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  toolBar: {\n    padding: 0\n  },\n  mobilMenuButton: {\n    color: \"white\",\n    display: \"none\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  menuGrid: {\n    flexDirection: \"row\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDireciton: \"column\"\n    }\n  },\n  navMobil: {\n    position: \"absolute\",\n    backgroundColor: \"black\",\n    display: \"block\",\n    width: \"100%\",\n    zIndex: 100,\n    top: \"3.5rem\"\n  },\n  navDesktop: {\n    position: \"relative\",\n    display: \"none\"\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles({});\n  const user = useContext(UserContext);\n  const {\n    0: mobilMenu,\n    1: setMobilMenu\n  } = useState(false);\n\n  const toggleMenu = () => {\n    console.log(mobilMenu);\n    setMobilMenu(prevState => !prevState);\n  };\n\n  return __jsx(AppBar, {\n    position: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    className: classes.toolBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Box, {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: toggleMenu,\n    className: classes.mobilMenuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, !mobilMenu ? __jsx(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }) : __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), __jsx(Box, {\n    component: \"nav\",\n    className: mobilMenu ? classes.navMobil : classes.navDesktop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    direction: mobilMenu ? \"column\" : \"row\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/dashboard/[key]\",\n    as: `/dashboard/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, languages.en.dashboard))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/clients/[key]\",\n    as: `/clients/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(PeopleAltIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, languages.en.clients))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/emails/[key]\",\n    as: `/emails/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(EmailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, languages.en.emails))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/settings/[key]\",\n    as: `/settings/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, languages.en.settings)))))), __jsx(Button, {\n    className: classes.menuButton,\n    onClick: () => user.logoutUser(),\n    startIcon: __jsx(ExitToAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, languages.en.logout))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/Header.tsx"],"names":["useContext","useState","Link","languages","UserContext","createStyles","makeStyles","Container","DashboardIcon","PeopleAltIcon","EmailIcon","SettingsIcon","ExitToAppIcon","Grid","Button","Toolbar","AppBar","Box","IconButton","MenuIcon","CloseIcon","useStyles","theme","menuButton","marginRight","spacing","color","title","flexGrow","toolBar","padding","mobilMenuButton","display","breakpoints","down","menuGrid","flexDirection","flexDireciton","navMobil","position","backgroundColor","width","zIndex","top","navDesktop","Header","classes","user","mobilMenu","setMobilMenu","toggleMenu","console","log","prevState","userkey","en","dashboard","clients","emails","settings","logoutUser","logout"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport EmailIcon from '@material-ui/icons/Email';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { Grid, Button, Toolbar, AppBar, Box, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    menuButton: {\n      marginRight: theme.spacing(2),\n      color: \"white\"\n    },\n    title: {\n      flexGrow: 1\n    },\n    toolBar: {\n      padding: 0,\n    },\n    mobilMenuButton: {\n      color: \"white\",\n      display: \"none\", [theme.breakpoints.down(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    menuGrid: {\n      flexDirection: \"row\", [theme.breakpoints.down(\"sm\")] : {\n        flexDireciton: \"column\"\n      }\n    },\n    navMobil: {\n      position: \"absolute\",\n      backgroundColor: \"black\",\n      display: \"block\",\n      width: \"100%\",\n      zIndex: 100,\n      top: \"3.5rem\",\n    },\n    navDesktop: {\n      position: \"relative\",\n      display: \"none\",\n    }\n  })\n);\n\nconst Header = () => {\n  const classes = useStyles({})\n  const user = useContext(UserContext);\n  const [mobilMenu, setMobilMenu] = useState(false)\n\n  const toggleMenu = () => {\n    console.log(mobilMenu);\n      setMobilMenu(prevState => !prevState)\n  }\n\n  return (\n    <AppBar position=\"fixed\">\n      <Container maxWidth=\"lg\">\n        <Toolbar className={classes.toolBar}>\n          <Box display=\"flex\" width=\"100%\" justifyContent=\"space-between\">\n            <IconButton onClick={toggleMenu} className={classes.mobilMenuButton}>\n                {!mobilMenu ? <MenuIcon/> : <CloseIcon/>}\n            </IconButton>\n            <Box component=\"nav\" className={mobilMenu ? classes.navMobil : classes.navDesktop}>\n              <Grid container direction={mobilMenu ? \"column\" : \"row\"} justify=\"center\">\n                <Grid item>\n              <Link\n                href=\"/dashboard/[key]\"\n                as={`/dashboard/${user.user.userkey}`}\n              >\n                <Button startIcon={<DashboardIcon />} className={classes.menuButton}>\n                  {languages.en.dashboard}\n                </Button>\n              </Link>\n              </Grid>\n              <Grid item>\n              <Link href=\"/clients/[key]\" as={`/clients/${user.user.userkey}`}>\n                <Button startIcon={<PeopleAltIcon />} className={classes.menuButton}>\n                  {languages.en.clients}\n                </Button>\n              </Link>\n              </Grid>\n              <Grid item>\n              <Link href=\"/emails/[key]\" as={`/emails/${user.user.userkey}`}>\n                <Button startIcon={<EmailIcon />} className={classes.menuButton}>\n                  {languages.en.emails}\n                </Button>\n              </Link>\n              </Grid>\n              <Grid item>\n              <Link\n                href=\"/settings/[key]\"\n                as={`/settings/${user.user.userkey}`}\n              >\n                <Button startIcon={<SettingsIcon />} className={classes.menuButton}>\n                  {languages.en.settings}\n                </Button>\n              </Link>\n              </Grid>\n              </Grid>\n            </Box>\n          </Box>\n          <Button\n            className={classes.menuButton}\n            onClick={() => user.logoutUser()}\n            startIcon={<ExitToAppIcon/>}\n          >\n            {languages.en.logout}\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}