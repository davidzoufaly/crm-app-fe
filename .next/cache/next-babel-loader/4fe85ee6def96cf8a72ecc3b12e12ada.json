{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport UserContext from \"../UserContext\";\nimport UsernameInput from \"./UsernameInput\";\nimport PasswordInput from \"./PasswordInput\";\nimport LoginButton from \"./LoginButton\";\n\nconst LoginForm = () => {\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const userContext = useContext(UserContext);\n\n  const onChange = e => {\n    e.target.name === \"username\" ? setUser(_objectSpread({}, user, {\n      username: e.target.value\n    })) : setUser(_objectSpread({}, user, {\n      password: e.target.value\n    }));\n  };\n\n  const onLogin = () => {\n    userContext.setUser(user.username);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: () => userContext.setUser(user.username),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(UsernameInput, {\n    onChange: onChange,\n    username: user.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), __jsx(PasswordInput, {\n    onChange: onChange,\n    password: user.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), __jsx(LoginButton, {\n    onLogin: onLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/LoginForm.tsx"],"names":["useState","useContext","UserContext","UsernameInput","PasswordInput","LoginButton","LoginForm","user","setUser","username","password","userContext","onChange","e","target","name","value","onLogin"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC;AAACS,IAAAA,QAAQ,EAAG,EAAZ;AAAgBC,IAAAA,QAAQ,EAAG;AAA3B,GAAD,CAAhC;AACA,QAAMC,WAAW,GAAGV,UAAU,CAACC,WAAD,CAA9B;;AAGA,QAAMU,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,UAAlB,GACMP,OAAO,mBAAKD,IAAL;AAAWE,MAAAA,QAAQ,EAAEI,CAAC,CAACC,MAAF,CAASE;AAA9B,OADb,GAEMR,OAAO,mBAAKD,IAAL;AAAWG,MAAAA,QAAQ,EAAEG,CAAC,CAACC,MAAF,CAASE;AAA9B,OAFb;AAGH,GAJD;;AAMA,QAAMC,OAAO,GAAG,MAAM;AAClBN,IAAAA,WAAW,CAACH,OAAZ,CAAoBD,IAAI,CAACE,QAAzB;AACH,GAFD;;AAIA,SACI,4BACI;AAAM,IAAA,QAAQ,EAAE,MAAME,WAAW,CAACH,OAAZ,CAAoBD,IAAI,CAACE,QAAzB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEG,QAAzB;AAAmC,IAAA,QAAQ,EAAEL,IAAI,CAACE,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEG,QAAzB;AAAmC,IAAA,QAAQ,EAAEL,IAAI,CAACG,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEO,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ;AASH,CAxBD;;AA0BA,eAAeX,SAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport UserContext from \"../UserContext\";\nimport UsernameInput from \"./UsernameInput\";\nimport PasswordInput from \"./PasswordInput\";\nimport LoginButton from \"./LoginButton\";\n\nconst LoginForm = () => {\n    const [user, setUser] = useState({username : \"\", password : \"\" });\n    const userContext = useContext(UserContext);\n\n\n    const onChange = (e) =>Â {\n        e.target.name === \"username\"\n            ? setUser({...user, username: e.target.value})\n            : setUser({...user, password: e.target.value})\n    }\n\n    const onLogin = () => { \n        userContext.setUser(user.username);\n    }\n\n    return (\n        <>  \n            <form onSubmit={() => userContext.setUser(user.username)}>\n                <UsernameInput onChange={onChange} username={user.username}/>\n                <PasswordInput onChange={onChange} password={user.password}/>\n                <LoginButton onLogin={onLogin} />\n            </form>\n        </>\n    )\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}