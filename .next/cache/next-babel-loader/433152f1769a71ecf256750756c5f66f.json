{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nvar CustomClientFields = function CustomClientFields(_ref) {\n  var fields = _ref.fields,\n      refreshList = _ref.refreshList;\n  var blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false,\n    fieldOptions: []\n  };\n  useEffect(function () {\n    console.log(editedField);\n  });\n\n  var _useState = useState(blankFieldObject),\n      editedField = _useState[0],\n      setEditedField = _useState[1];\n\n  var _useState2 = useState(false),\n      displayComponent = _useState2[0],\n      setDisplayComponent = _useState2[1];\n\n  var _useState3 = useState(false),\n      isNew = _useState3[0],\n      setIsNew = _useState3[1];\n\n  var changeDisplayComponent = function changeDisplayComponent() {\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n  };\n\n  var saveEditedField = function saveEditedField() {\n    var fieldIsUpdated =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios({\n                  method: \"put\",\n                  url: \"\".concat(globalVars.serverURL, \"/fields/\").concat(editedField.id),\n                  data: editedField,\n                  responseType: \"json\"\n                });\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.data;\n\n              case 5:\n                data = _context.sent;\n\n                if (data.msg === \"Success\") {\n                  setDisplayComponent(false);\n                  setEditedField(blankFieldObject);\n                  refreshList();\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fieldIsUpdated() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var fieldIsCreated =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios({\n                  method: \"post\",\n                  url: \"\".concat(globalVars.serverURL, \"/fields/\"),\n                  data: editedField,\n                  responseType: \"json\"\n                });\n\n              case 2:\n                res = _context2.sent;\n                _context2.next = 5;\n                return res.data;\n\n              case 5:\n                data = _context2.sent;\n\n                if (data.msg === \"Success\") {\n                  refreshList();\n                  setDisplayComponent(false);\n                  setEditedField(blankFieldObject);\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function fieldIsCreated() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    isNew ? fieldIsCreated() : fieldIsUpdated();\n  };\n\n  var deleteField =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(event) {\n      var id, res, resData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              id = event.target.id;\n              _context3.next = 3;\n              return axios({\n                method: \"delete\",\n                url: \"\".concat(globalVars.serverURL, \"/fields/\").concat(id),\n                responseType: \"json\"\n              });\n\n            case 3:\n              res = _context3.sent;\n              _context3.next = 6;\n              return res.data;\n\n            case 6:\n              resData = _context3.sent;\n              resData.msg === \"Success\" ? refreshList() : null;\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function deleteField(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onNameChange = function onNameChange(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldName: event.target.value\n    }));\n    console.log(editedField);\n  };\n\n  var onSelectChange = function onSelectChange(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    }));\n  };\n\n  var handleOptionSpawn = function handleOptionSpawn() {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: [].concat(_toConsumableArray(editedField.fieldOptions), [{\n        id: uniqid(),\n        value: \"\"\n      }])\n    }));\n  };\n\n  var onOptionChange = function onOptionChange(event) {\n    console.log(\"gii\");\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(function (e) {\n        return event.target.id === e.id ? e.value = event.target.value : e;\n      })\n    }));\n  };\n\n  var onOptionDelete = function onOptionDelete(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(function (e) {\n        return event.target.id !== e.id ? e : null;\n      })\n    }));\n  };\n\n  var setupEditedField = function setupEditedField(obj) {\n    setEditedField(obj);\n    setDisplayComponent(true);\n    setIsNew(true);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Custom Client Fields\"), __jsx(CustomFieldsList, {\n    deleteField: deleteField,\n    fields: fields,\n    setupEditedField: setupEditedField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), __jsx(AddOrEditField, {\n    editedField: editedField,\n    refreshList: refreshList,\n    saveEditedField: saveEditedField,\n    onNameChange: onNameChange,\n    onSelectChange: onSelectChange,\n    handleOptionSpawn: handleOptionSpawn,\n    onOptionChange: onOptionChange,\n    onOptionDelete: onOptionDelete,\n    displayComponent: displayComponent,\n    changeDisplayComponent: changeDisplayComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }));\n};\n\nexport default CustomClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx"],"names":["useState","useEffect","AddOrEditField","axios","globalVars","uniqid","CustomFieldsList","CustomClientFields","fields","refreshList","blankFieldObject","fieldName","fieldType","fieldPermanent","fieldOptions","console","log","editedField","setEditedField","displayComponent","setDisplayComponent","isNew","setIsNew","changeDisplayComponent","saveEditedField","fieldIsUpdated","method","url","serverURL","id","data","responseType","res","msg","fieldIsCreated","deleteField","event","target","resData","onNameChange","value","onSelectChange","options","selectedIndex","handleOptionSpawn","onOptionChange","filter","e","onOptionDelete","setupEditedField","obj"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAkC;AAAA,MAA/BC,MAA+B,QAA/BA,MAA+B;AAAA,MAAvBC,WAAuB,QAAvBA,WAAuB;AAC3D,MAAMC,gBAAgB,GAAG;AACvBC,IAAAA,SAAS,EAAE,EADY;AAEvBC,IAAAA,SAAS,EAAE,MAFY;AAGvBC,IAAAA,cAAc,EAAE,KAHO;AAIvBC,IAAAA,YAAY,EAAE;AAJS,GAAzB;AAOAb,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACD,GAFQ,CAAT;;AAR2D,kBAYrBjB,QAAQ,CAAMU,gBAAN,CAZa;AAAA,MAYpDO,WAZoD;AAAA,MAYvCC,cAZuC;;AAAA,mBAaXlB,QAAQ,CAAC,KAAD,CAbG;AAAA,MAapDmB,gBAboD;AAAA,MAalCC,mBAbkC;;AAAA,mBAcjCpB,QAAQ,CAAC,KAAD,CAdyB;AAAA,MAcpDqB,KAdoD;AAAA,MAc7CC,QAd6C;;AAgB3D,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnCJ,IAAAA,gBAAgB,GAAGC,mBAAmB,CAAC,KAAD,CAAtB,GAAgCA,mBAAmB,CAAC,IAAD,CAAnE;AAED,GAHD;;AAKA,MAAMI,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACHtB,KAAK,CAAC;AACtBuB,kBAAAA,MAAM,EAAE,KADc;AAEtBC,kBAAAA,GAAG,YAAKvB,UAAU,CAACwB,SAAhB,qBAAoCX,WAAW,CAACY,EAAhD,CAFmB;AAGtBC,kBAAAA,IAAI,EAAEb,WAHgB;AAItBc,kBAAAA,YAAY,EAAE;AAJQ,iBAAD,CADF;;AAAA;AACfC,gBAAAA,GADe;AAAA;AAAA,uBAOFA,GAAG,CAACF,IAPF;;AAAA;AAOfA,gBAAAA,IAPe;;AAQrB,oBAAGA,IAAI,CAACG,GAAL,KAAa,SAAhB,EAA2B;AACzBb,kBAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAF,kBAAAA,cAAc,CAACR,gBAAD,CAAd;AACAD,kBAAAA,WAAW;AACZ;;AAZoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAdgB,cAAc;AAAA;AAAA;AAAA,OAApB;;AAeA,QAAMS,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACH/B,KAAK,CAAC;AACtBuB,kBAAAA,MAAM,EAAE,MADc;AAEtBC,kBAAAA,GAAG,YAAKvB,UAAU,CAACwB,SAAhB,aAFmB;AAGtBE,kBAAAA,IAAI,EAAEb,WAHgB;AAItBc,kBAAAA,YAAY,EAAE;AAJQ,iBAAD,CADF;;AAAA;AACfC,gBAAAA,GADe;AAAA;AAAA,uBAOFA,GAAG,CAACF,IAPF;;AAAA;AAOfA,gBAAAA,IAPe;;AAQrB,oBAAGA,IAAI,CAACG,GAAL,KAAa,SAAhB,EAA2B;AACzBxB,kBAAAA,WAAW;AACXW,kBAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAF,kBAAAA,cAAc,CAACR,gBAAD,CAAd;AACD;;AAZoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAdwB,cAAc;AAAA;AAAA;AAAA,OAApB;;AAcAb,IAAAA,KAAK,GAAGa,cAAc,EAAjB,GAAsBT,cAAc,EAAzC;AACD,GA/BD;;AAiCA,MAAMU,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZP,cAAAA,EADY,GACPO,KAAK,CAACC,MAAN,CAAaR,EADN;AAAA;AAAA,qBAEA1B,KAAK,CAAC;AACtBuB,gBAAAA,MAAM,EAAE,QADc;AAEtBC,gBAAAA,GAAG,YAAKvB,UAAU,CAACwB,SAAhB,qBAAoCC,EAApC,CAFmB;AAGtBE,gBAAAA,YAAY,EAAE;AAHQ,eAAD,CAFL;;AAAA;AAEZC,cAAAA,GAFY;AAAA;AAAA,qBAOIA,GAAG,CAACF,IAPR;;AAAA;AAOZQ,cAAAA,OAPY;AAQlBA,cAAAA,OAAO,CAACL,GAAR,KAAgB,SAAhB,GAA4BxB,WAAW,EAAvC,GAA4C,IAA5C;;AARkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAX0B,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAWA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACH,KAAD,EAAgB;AACnClB,IAAAA,cAAc,mBAAMD,WAAN;AAAmBN,MAAAA,SAAS,EAAEyB,KAAK,CAACC,MAAN,CAAaG;AAA3C,OAAd;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACD,GAHD;;AAKA,MAAMwB,cAAc,GAAG,SAAjBA,cAAiB,CAACL,KAAD,EAAgB;AACrClB,IAAAA,cAAc,mBACTD,WADS;AAEZL,MAAAA,SAAS,EAAEwB,KAAK,CAACC,MAAN,CAAaK,OAAb,CAAqBN,KAAK,CAACC,MAAN,CAAaK,OAAb,CAAqBC,aAA1C,EAAyDH;AAFxD,OAAd;AAID,GALD;;AAOA,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B1B,IAAAA,cAAc,mBACTD,WADS;AAEZH,MAAAA,YAAY,+BAAMG,WAAW,CAACH,YAAlB,IAAgC;AAAEe,QAAAA,EAAE,EAAExB,MAAM,EAAZ;AAAgBmC,QAAAA,KAAK,EAAE;AAAvB,OAAhC;AAFA,OAAd;AAID,GALD;;AAOA,MAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACT,KAAD,EAAgB;AACrCrB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAE,IAAAA,cAAc,mBACTD,WADS;AAEZH,MAAAA,YAAY,EAAEG,WAAW,CAACH,YAAZ,CAAyBgC,MAAzB,CAAgC,UAACC,CAAD;AAAA,eAC5CX,KAAK,CAACC,MAAN,CAAaR,EAAb,KAAoBkB,CAAC,CAAClB,EAAtB,GAA4BkB,CAAC,CAACP,KAAF,GAAUJ,KAAK,CAACC,MAAN,CAAaG,KAAnD,GAA4DO,CADhB;AAAA,OAAhC;AAFF,OAAd;AAMD,GARD;;AAUA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACZ,KAAD,EAAgB;AACrClB,IAAAA,cAAc,mBACTD,WADS;AAEZH,MAAAA,YAAY,EAAEG,WAAW,CAACH,YAAZ,CAAyBgC,MAAzB,CAAgC,UAACC,CAAD;AAAA,eAC5CX,KAAK,CAACC,MAAN,CAAaR,EAAb,KAAoBkB,CAAC,CAAClB,EAAtB,GAA2BkB,CAA3B,GAA+B,IADa;AAAA,OAAhC;AAFF,OAAd;AAMD,GAPD;;AASA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAe;AACtChC,IAAAA,cAAc,CAACgC,GAAD,CAAd;AACA9B,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAJD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,MAAC,gBAAD;AACE,IAAA,WAAW,EAAEa,WADf;AAEE,IAAA,MAAM,EAAE3B,MAFV;AAGE,IAAA,gBAAgB,EAAEyC,gBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE,MAAC,cAAD;AACE,IAAA,WAAW,EAAEhC,WADf;AAEE,IAAA,WAAW,EAAER,WAFf;AAGE,IAAA,eAAe,EAAEe,eAHnB;AAIE,IAAA,YAAY,EAAEe,YAJhB;AAKE,IAAA,cAAc,EAAEE,cALlB;AAME,IAAA,iBAAiB,EAAEG,iBANrB;AAOE,IAAA,cAAc,EAAEC,cAPlB;AAQE,IAAA,cAAc,EAAEG,cARlB;AASE,IAAA,gBAAgB,EAAE7B,gBATpB;AAUE,IAAA,sBAAsB,EAAEI,sBAV1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAsBD,CAnID;;AAqIA,eAAehB,kBAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({ fields, refreshList }: any) => {\n  const blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false,\n    fieldOptions: []\n  };\n\n  useEffect(() => {\n    console.log(editedField);\n  })\n\n  const [editedField, setEditedField] = useState<any>(blankFieldObject);\n  const [displayComponent, setDisplayComponent] = useState(false);\n  const [isNew, setIsNew] = useState(false);\n\n  const changeDisplayComponent = () => {\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n\n  }\n\n  const saveEditedField = () => {\n    const fieldIsUpdated = async () => {\n      const res = await axios({\n        method: \"put\",\n        url: `${globalVars.serverURL}/fields/${editedField.id}`,\n        data: editedField,\n        responseType: \"json\"\n      });\n      const data = await res.data;\n      if(data.msg === \"Success\") {\n        setDisplayComponent(false);\n        setEditedField(blankFieldObject);\n        refreshList();\n      }\n    }\n\n    const fieldIsCreated = async () => {\n      const res = await axios({\n        method: \"post\",\n        url: `${globalVars.serverURL}/fields/`,\n        data: editedField,\n        responseType: \"json\"\n      });\n      const data = await res.data;\n      if(data.msg === \"Success\") {\n        refreshList();\n        setDisplayComponent(false);\n        setEditedField(blankFieldObject);\n      }\n    }\n    isNew ? fieldIsCreated() : fieldIsUpdated();\n  };\n\n  const deleteField = async (event: any) => {\n    const id = event.target.id;\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const onNameChange = (event: any) => {\n    setEditedField({ ...editedField, fieldName: event.target.value });\n    console.log(editedField);\n  };\n\n  const onSelectChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    });\n  };\n\n  const handleOptionSpawn = () => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: [...editedField.fieldOptions, { id: uniqid(), value: \"\" }]\n    });\n  };\n\n  const onOptionChange = (event: any) => {\n    console.log(\"gii\");\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id === e.id ? (e.value = event.target.value) : e\n      )\n    });\n  };\n\n  const onOptionDelete = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id !== e.id ? e : null\n      )\n    });\n  };\n\n  const setupEditedField = (obj?: any) => {\n    setEditedField(obj);\n    setDisplayComponent(true);\n    setIsNew(true);\n  };\n\n  return (\n    <div>\n      <h2>Custom Client Fields</h2>\n      <CustomFieldsList\n        deleteField={deleteField}\n        fields={fields}\n        setupEditedField={setupEditedField}\n      />\n      <AddOrEditField\n        editedField={editedField}\n        refreshList={refreshList}\n        saveEditedField={saveEditedField}\n        onNameChange={onNameChange}\n        onSelectChange={onSelectChange}\n        handleOptionSpawn={handleOptionSpawn}\n        onOptionChange={onOptionChange}\n        onOptionDelete={onOptionDelete}\n        displayComponent={displayComponent}\n        changeDisplayComponent={changeDisplayComponent}\n      />\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"]},"metadata":{},"sourceType":"module"}