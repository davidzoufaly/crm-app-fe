{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport ShowRecordsNumber from \"../components/ShowRecordsNumber\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport UserContext from \"../components/UserContext\";\nimport CountContext from \"../components/CountContext\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport languages from \"../library/languages\";\n\nvar Dashboard = function Dashboard(_ref) {\n  var lastCampaign = _ref.lastCampaign,\n      clientsLastWeek = _ref.clientsLastWeek,\n      clientCounter = _ref.clientCounter,\n      fieldCounter = _ref.fieldCounter,\n      emailsCounter = _ref.emailsCounter;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      initialized = _useState[0],\n      setInitialized = _useState[1];\n\n  var user = useContext(UserContext);\n  var counter = useContext(CountContext);\n  useEffect(function () {\n    var title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n    counter.setCounters({\n      clientCounter: clientCounter,\n      fieldCounter: fieldCounter,\n      emailsCounter: emailsCounter\n    });\n  }, [router]);\n  var h1 = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString();\n  var campaignStr = lastCampaign.length > 0 ? \"\".concat(languages.en.last, \" \").concat(languages.en.sent, \" \").concat(lastCampaign[0].date, \" \").concat(languages.en.to.toLowerCase(), \" \").concat(lastCampaign[0].to.length, \" \").concat(lastCampaign[0].to.length > 1 ? languages.en.clients : languages.en.client) : \"\";\n  var lastWeekStr = \"\".concat(clientsLastWeek > 0 ? \"+\" : \"\", \" \").concat(clientsLastWeek, \" \").concat(languages.en.lastWeek);\n  return !initialized && !user.user.signedIn ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, h1), __jsx(ShowRecordsNumber, {\n    data: clientCounter,\n    string: languages.en.clientsSaved,\n    buttonString: languages.en.clients,\n    subData: lastWeekStr,\n    link: \"/clients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(ShowRecordsNumber, {\n    data: fieldCounter.custom,\n    string: languages.en.customClientFields,\n    buttonString: languages.en.customClientFields,\n    subData: \"\".concat(fieldCounter.permanent + fieldCounter.custom, \" \").concat(languages.en.total),\n    link: \"/settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(ShowRecordsNumber, {\n    data: emailsCounter,\n    string: languages.en.emailsSent,\n    buttonString: languages.en.emails,\n    subData: campaignStr,\n    link: \"/emails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nDashboard.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var resLastCampaign, lastCampaign, resLastWeekNumber, clientsLastWeek, resClientCount, clientCounter, resFieldsData, fieldCounter, resEmailsCount, emailsCounter;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              method: \"GET\",\n              params: {\n                key: context.query.Api_KEY\n              },\n              url: \"\".concat(globalVars.serverURL, \"/emails/last\"),\n              responseType: \"json\"\n            });\n\n          case 2:\n            resLastCampaign = _context.sent;\n            _context.next = 5;\n            return resLastCampaign.data;\n\n          case 5:\n            lastCampaign = _context.sent;\n            _context.next = 8;\n            return axios({\n              method: \"GET\",\n              params: {\n                key: context.query.Api_KEY\n              },\n              url: \"\".concat(globalVars.serverURL, \"/clients/last-week\"),\n              responseType: \"json\"\n            });\n\n          case 8:\n            resLastWeekNumber = _context.sent;\n            _context.next = 11;\n            return resLastWeekNumber.data;\n\n          case 11:\n            clientsLastWeek = _context.sent;\n            _context.next = 14;\n            return axios({\n              method: \"GET\",\n              url: \"\".concat(globalVars.serverURL, \"/clients/count\"),\n              params: {\n                key: context.query.Api_KEY\n              },\n              responseType: \"json\"\n            });\n\n          case 14:\n            resClientCount = _context.sent;\n            _context.next = 17;\n            return resClientCount.data;\n\n          case 17:\n            clientCounter = _context.sent;\n            _context.next = 20;\n            return axios({\n              method: \"GET\",\n              url: \"\".concat(globalVars.serverURL, \"/fields/count\"),\n              params: {\n                key: context.query.Api_KEY\n              },\n              responseType: \"json\"\n            });\n\n          case 20:\n            resFieldsData = _context.sent;\n            _context.next = 23;\n            return resFieldsData.data;\n\n          case 23:\n            fieldCounter = _context.sent;\n            _context.next = 26;\n            return axios({\n              method: \"GET\",\n              url: \"\".concat(globalVars.serverURL, \"/emails/count\"),\n              params: {\n                key: context.query.Api_KEY\n              },\n              responseType: \"json\"\n            });\n\n          case 26:\n            resEmailsCount = _context.sent;\n            _context.next = 29;\n            return resEmailsCount.data;\n\n          case 29:\n            emailsCounter = _context.sent;\n            return _context.abrupt(\"return\", {\n              lastCampaign: lastCampaign,\n              clientsLastWeek: clientsLastWeek,\n              clientCounter: clientCounter,\n              fieldCounter: fieldCounter,\n              emailsCounter: emailsCounter\n            });\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx"],"names":["Header","useEffect","useState","useContext","useRouter","axios","ShowRecordsNumber","LoadingSpinner","UserContext","CountContext","globalVars","stringMethods","languages","Dashboard","lastCampaign","clientsLastWeek","clientCounter","fieldCounter","emailsCounter","router","initialized","setInitialized","user","counter","title","pathname","removeSlash","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","checkUser","setCounters","h1","campaignStr","length","en","last","sent","date","to","toLowerCase","clients","client","lastWeekStr","lastWeek","signedIn","clientsSaved","custom","customClientFields","permanent","total","emailsSent","emails","getInitialProps","context","method","params","key","query","Api_KEY","url","serverURL","responseType","resLastCampaign","data","resLastWeekNumber","resClientCount","resFieldsData","resEmailsCount"],"mappings":"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","sourcesContent":["import Header from \"../components/Header\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport ShowRecordsNumber from \"../components/ShowRecordsNumber\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport UserContext from \"../components/UserContext\";\nimport CountContext from \"../components/CountContext\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport languages from \"../library/languages\";\n\nconst Dashboard = ({lastCampaign, clientsLastWeek, clientCounter, fieldCounter, emailsCounter} : any) => {\n  const router = useRouter();\n  const [initialized, setInitialized] = useState(false);\n  const user = useContext(UserContext);\n  const counter = useContext(CountContext);\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n    counter.setCounters({clientCounter, fieldCounter, emailsCounter});\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  const campaignStr = lastCampaign.length > 0  ? `${languages.en.last} ${languages.en.sent} ${lastCampaign[0].date} ${languages.en.to.toLowerCase()} ${lastCampaign[0].to.length} ${lastCampaign[0].to.length > 1 ? languages.en.clients : languages.en.client}` : \"\"\n\n  const lastWeekStr = `${clientsLastWeek > 0 ? \"+\" : \"\"} ${clientsLastWeek} ${languages.en.lastWeek}`\n\n  return !initialized  && !user.user.signedIn ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <h1>{h1}</h1>\n      <ShowRecordsNumber\n        data={clientCounter}\n        string={languages.en.clientsSaved}\n        buttonString={languages.en.clients}\n        subData={lastWeekStr}\n        link={\"/clients\"}\n      />\n      <ShowRecordsNumber\n        data={fieldCounter.custom}\n        string={languages.en.customClientFields}\n        buttonString={languages.en.customClientFields}\n        subData={`${fieldCounter.permanent + fieldCounter.custom} ${languages.en.total}`}\n        link={\"/settings\"}\n      />\n      <ShowRecordsNumber\n        data={emailsCounter}\n        string={languages.en.emailsSent}\n        buttonString={languages.en.emails}\n        subData={campaignStr}\n        link={\"/emails\"}\n      />\n    </div>\n  );\n};\n\nDashboard.getInitialProps = async (context: any) => {\n  const resLastCampaign = await axios({\n    method: \"GET\",\n    params: {key: context.query.Api_KEY},\n    url: `${globalVars.serverURL}/emails/last`,\n    responseType: \"json\"\n  }) \n  const lastCampaign = await resLastCampaign.data;\n\n  const resLastWeekNumber = await axios({\n    method: \"GET\",\n    params: {key: context.query.Api_KEY},\n    url: `${globalVars.serverURL}/clients/last-week`,\n    responseType: \"json\"\n  })\n\n  const clientsLastWeek = await resLastWeekNumber.data;\n\n    const resClientCount = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/clients/count`,\n      params: {key: context.query.Api_KEY},\n      responseType: \"json\"\n    });\n    const clientCounter = await resClientCount.data;\n\n    const resFieldsData = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/fields/count`,\n      params: {key: context.query.Api_KEY},\n      responseType: \"json\"\n    });\n    const fieldCounter = await resFieldsData.data;\n\n    const resEmailsCount = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/emails/count`,\n      params: {key: context.query.Api_KEY},\n      responseType: \"json\"\n    });\n    const emailsCounter = await resEmailsCount.data;\n\n  return {lastCampaign, clientsLastWeek, clientCounter, fieldCounter, emailsCounter};\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}