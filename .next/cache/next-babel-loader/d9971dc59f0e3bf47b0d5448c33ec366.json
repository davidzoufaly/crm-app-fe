{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/ClientForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport globalVars from \"../../library/globalVariables\";\n\nconst ClientForm = ({\n  fields,\n  onChange,\n  newClient\n}) => {\n  const inputs = fields.map(e => {\n    if (e.fieldName !== globalVars.permanentFields.dateAdded && e.fieldName !== globalVars.permanentFields.lastModified) {\n      if (e.fieldType === \"text\") {\n        return __jsx(\"div\", {\n          key: e.fieldName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 8\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          htmlFor: e.fieldName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, e.fieldName), __jsx(\"input\", {\n          type: \"text\",\n          id: e.fieldName,\n          autoFocus: e.fieldName === globalVars.permanentFields.fistName,\n          name: e.fieldName,\n          onChange: () => onChange(e.fieldType, event),\n          defaultValue: newClient[e.fieldName],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }));\n      } else if (e.fieldType === \"number\") {\n        return __jsx(\"div\", {\n          key: e.fieldName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          htmlFor: e.fieldName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, e.fieldName), __jsx(\"input\", {\n          id: e.fieldName,\n          type: \"number\",\n          name: e.fieldName,\n          onChange: () => onChange(e.fieldType, event),\n          defaultValue: newClient[e.fieldName],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }));\n      } else if (e.fieldType === \"select\") {\n        return __jsx(\"div\", {\n          key: e.fieldName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          htmlFor: e.fieldName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, e.fieldName), __jsx(\"select\", {\n          id: e.fieldName,\n          name: e.fieldName,\n          onChange: () => onChange(e.fieldType, event),\n          defaultValue: newClient[e.fieldName],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, __jsx(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, globalVars.blankOption), e.fieldOptions.map(e => {\n          return __jsx(\"option\", {\n            value: e.value,\n            key: e.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, e.value);\n        })));\n      }\n    }\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, inputs);\n};\n\nexport default ClientForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/ClientForm.tsx"],"names":["globalVars","ClientForm","fields","onChange","newClient","inputs","map","e","fieldName","permanentFields","dateAdded","lastModified","fieldType","fistName","event","blankOption","fieldOptions","value","id"],"mappings":"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","sourcesContent":["import globalVars from \"../../library/globalVariables\";\n\nconst ClientForm = ({ fields, onChange, newClient }: any) => {\n  const inputs = fields.map((e: any) => {\n    if (e.fieldName !== globalVars.permanentFields.dateAdded && e.fieldName !== globalVars.permanentFields.lastModified) {\n      if (e.fieldType === \"text\") {\n        return (\n          <div key={e.fieldName}>\n            <label htmlFor={e.fieldName}>\n              {e.fieldName}\n            </label>\n            <input\n              type=\"text\"\n              id={e.fieldName}\n              autoFocus={e.fieldName === globalVars.permanentFields.fistName}\n              name={e.fieldName}\n              onChange={() => onChange(e.fieldType, event)}\n              defaultValue={newClient[e.fieldName]}\n            />\n          </div>\n        );\n      } else if (e.fieldType === \"number\") {\n        return (\n          <div key={e.fieldName}>\n            <label htmlFor={e.fieldName}> \n             {e.fieldName} \n            </label>\n            <input\n              id={e.fieldName}\n              type=\"number\"\n              name={e.fieldName}\n              onChange={() => onChange(e.fieldType, event)}\n              defaultValue={newClient[e.fieldName]}\n            />\n          </div>\n        );\n      } else if (e.fieldType === \"select\") {\n        return (\n          <div key={e.fieldName}>\n            <label htmlFor={e.fieldName}>\n              {e.fieldName}\n            </label>\n            <select\n              id={e.fieldName}\n              name={e.fieldName}\n              onChange={() => onChange(e.fieldType, event)}\n              defaultValue={newClient[e.fieldName]}\n            >\n              <option>{globalVars.blankOption}</option>\n              {e.fieldOptions.map((e: any) => {\n                return (\n                  <option value={e.value} key={e.id}>\n                    {e.value}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        );\n      }\n    }\n  });\n  return <div>{inputs}</div>;\n};\n\nexport default ClientForm;\n"]},"metadata":{},"sourceType":"module"}