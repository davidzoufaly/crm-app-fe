{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/RegisterForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport TextInput from \"./TextInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\n\nconst RegisterForm = () => {\n  const {\n    0: regUser,\n    1: setRegUser\n  } = useState({\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  });\n\n  const onChange = e => {\n    switch (e.target.name) {\n      case \"username\":\n        setRegUser(_objectSpread({}, regUser, {\n          username: e.target.value\n        }));\n\n      case \"password\":\n        setRegUser(_objectSpread({}, regUser, {\n          password: e.target.value\n        }));\n\n      case \"repeat-password\":\n        setRegUser(_objectSpread({}, regUser, {\n          repeatPassword: e.target.value\n        }));\n    }\n  };\n\n  const onRegister = async () => {\n    const userRes = await axios({\n      method: \"POST\",\n      data: regUser,\n      url: `${globalVars.serverURL}/users`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n\n    if (userData.msg === \"Success\") {\n      alert(languages.en.success);\n    } else {\n      alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Register\"), __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    onChange: onChange,\n    type: \"text\",\n    value: regUser.username,\n    text: \"username\",\n    title: new stringMethods(languages.en.username).firstCharUpperCase().getString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: regUser.password,\n    text: \"password\",\n    title: languages.en.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: regUser.repeatPassword,\n    text: \"repeat-password\",\n    title: new stringMethods(languages.en.repeatPassword).firstCharUpperCase().getString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(LoginButton, {\n    onClick: onRegister,\n    text: languages.en.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/RegisterForm.tsx"],"names":["useState","axios","TextInput","LoginButton","globalVars","languages","stringMethods","RegisterForm","regUser","setRegUser","username","password","repeatPassword","onChange","e","target","name","value","onRegister","userRes","method","data","url","serverURL","responseType","userData","msg","alert","en","success","somethingWentWrong","firstCharUpperCase","getString","register"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport TextInput from \"./TextInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\n\nconst RegisterForm = () => {\n  const [regUser, setRegUser] = useState({\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  });\n\n  const onChange = e => {\n    switch (e.target.name) {\n        case \"username\": \n            setRegUser({ ...regUser, username: e.target.value })\n        case \"password\":\n            setRegUser({ ...regUser, password: e.target.value });\n        case \"repeat-password\":\n            setRegUser({ ...regUser, repeatPassword: e.target.value });\n    }\n  };\n\n  const onRegister = async () => {\n    const userRes = await axios({\n      method: \"POST\",\n      data: regUser,\n      url: `${globalVars.serverURL}/users`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n    if (userData.msg === \"Success\") {\n      alert(languages.en.success);\n    } else {\n      alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  return (\n    <>\n      <h2>Register</h2>\n      <form>\n        <TextInput\n          onChange={onChange}\n          type=\"text\"\n          value={regUser.username}\n          text=\"username\"\n          title={new stringMethods(languages.en.username)\n            .firstCharUpperCase()\n            .getString()}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={regUser.password}\n          text=\"password\"\n          title={languages.en.password}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={regUser.repeatPassword}\n          text=\"repeat-password\"\n          title={new stringMethods(languages.en.repeatPassword)\n            .firstCharUpperCase()\n            .getString()}\n        />\n        <LoginButton onClick={onRegister} text={languages.en.register} />\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}