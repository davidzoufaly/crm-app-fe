{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/webFormOptionSelect.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\n\nconst webFormOptionSelect = ({\n  optionSelect,\n  webFields,\n  addVisibleSelect\n}) => {\n  const {\n    0: options,\n    1: setOption\n  } = useState([]);\n\n  const showPreselectOptions = e => {\n    const optionsArr = webFields.map(field => field.fieldType === e.target.id ? field.fieldOptions.forEach(option => __jsx(\"option\", {\n      key: option.id,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, option.value)) : null);\n    setOption(optionsArr);\n  };\n\n  useEffect(() => {\n    console.log(\"prerendered\");\n  });\n  const insertIntoForm = webFields.map(field => optionSelect === field.fieldName ? __jsx(\"div\", {\n    key: field.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Should be \", __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, field.fieldName), \" visible in form?\"), __jsx(\"button\", {\n    id: field.fieldName,\n    onClick: addVisibleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"YES\"), __jsx(\"button\", {\n    id: field.fieldName,\n    onClick: showPreselectOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"NO\")) : null);\n  return __jsx(React.Fragment, null, insertIntoForm, __jsx(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, options));\n};\n\nexport default webFormOptionSelect;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/webFormOptionSelect.tsx"],"names":["useEffect","useState","webFormOptionSelect","optionSelect","webFields","addVisibleSelect","options","setOption","showPreselectOptions","e","optionsArr","map","field","fieldType","target","id","fieldOptions","forEach","option","value","console","log","insertIntoForm","fieldName"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,SAAhB;AAA2BC,EAAAA;AAA3B,CAAD,KAAmD;AAE7E,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAuBN,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMO,oBAAoB,GAAIC,CAAD,IAAO;AAClC,UAAMC,UAAU,GAAGN,SAAS,CAACO,GAAV,CAAcC,KAAK,IAClCA,KAAK,CAACC,SAAN,KAAoBJ,CAAC,CAACK,MAAF,CAASC,EAA7B,GACIH,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2BC,MAAM,IAC7B;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACH,EAApB;AAAwB,MAAA,KAAK,EAAEG,MAAM,CAACC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,MAAM,CAACC,KADV,CADJ,CADJ,GAMI,IAPW,CAAnB;AASEZ,IAAAA,SAAS,CAACG,UAAD,CAAT;AACH,GAXD;;AAaAV,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,GAFQ,CAAT;AAIA,QAAMC,cAAc,GAAGlB,SAAS,CAACO,GAAV,CAAcC,KAAK,IACxCT,YAAY,KAAKS,KAAK,CAACW,SAAvB,GACE;AAAK,IAAA,GAAG,EAAEX,KAAK,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASH,KAAK,CAACW,SAAf,CADZ,sBADF,EAIE;AAAQ,IAAA,EAAE,EAAEX,KAAK,CAACW,SAAlB;AAA6B,IAAA,OAAO,EAAElB,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAOE;AAAQ,IAAA,EAAE,EAAEO,KAAK,CAACW,SAAlB;AAA6B,IAAA,OAAO,EAAEf,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADF,GAYI,IAbiB,CAAvB;AAgBA,SACE,4BACGc,cADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAShB,OAAT,CAFF,CADF;AAMD,CA3CD;;AA6CA,eAAeJ,mBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst webFormOptionSelect = ({ optionSelect, webFields, addVisibleSelect }) => {\n  \n  const [options, setOption] = useState([])\n\n  const showPreselectOptions = (e) => {\n    const optionsArr = webFields.map(field =>\n        field.fieldType === e.target.id\n          ? field.fieldOptions.forEach(option =>\n                <option key={option.id} value={option.value}>\n                  {option.value}\n                </option>\n            )\n          : null\n      );\n      setOption(optionsArr);\n  }\n\n  useEffect(() => {\n      console.log(\"prerendered\");\n  })\n\n  const insertIntoForm = webFields.map(field =>\n    optionSelect === field.fieldName ? (\n      <div key={field.id}>\n        <p>\n          Should be <strong>{field.fieldName}</strong> visible in form?\n        </p>\n        <button id={field.fieldName} onClick={addVisibleSelect}>\n          YES\n        </button>\n        <button id={field.fieldName} onClick={showPreselectOptions}>\n          NO\n        </button>\n      </div>\n    ) : null\n  );\n\n  return (\n    <>\n      {insertIntoForm}\n      <select>{options}</select>\n    </>\n  );\n};\n\nexport default webFormOptionSelect;\n"]},"metadata":{},"sourceType":"module"}