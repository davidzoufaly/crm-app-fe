{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/CreateClient.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useReducer, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport generateUniqueId from \"generate-unique-id\";\nimport moment from \"moment\";\n\nconst CreateClient = ({\n  fields,\n  isClientAdded,\n  toggleIsClientAdded,\n  addNewClientToState\n}) => {\n  const initialNewClientState = fields.map(e => e.fieldName).reduce((o, key) => _Object$assign(o, {\n    [key]: \"\"\n  }), {});\n  const {\n    0: submitting,\n    1: setSubmitting\n  } = useState(false);\n  const {\n    0: newClient,\n    1: setNewClient\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case \"onTextChange\":\n        return _objectSpread({}, state, {\n          [action.payload.fieldName]: action.payload.fieldType === globalVars.fieldTypes.number ? _parseInt(action.payload.value) : action.payload.value\n        });\n\n      case \"addId\":\n        return _objectSpread({}, state, {\n          _id: generateUniqueId({\n            length: 24,\n            useNumbers: true,\n            useLetters: false,\n            includeSymbols: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n          })\n        });\n\n      case \"addDate\":\n        return _objectSpread({}, state, {\n          dateAdded: moment().format(\"llll\")\n        });\n\n      case \"clear\":\n        return {\n          initialNewClientState\n        };\n\n      default:\n        return state;\n    }\n  }, initialNewClientState);\n\n  const onChange = (fieldType, event) => {\n    setNewClient({\n      type: \"onTextChange\",\n      payload: {\n        fieldName: event.target.name,\n        value: event.target.value,\n        fieldType\n      }\n    });\n  };\n\n  useEffect(() => {\n    //trigger side effect when submitting state is changed and its is true\n    submitting ? submitNewClient() : null;\n  }, [submitting]);\n\n  const onSubmit = e => {\n    // on Button Click prepare client object to be ready to send\n    e.preventDefault();\n    setNewClient({\n      type: \"addDate\"\n    });\n    setNewClient({\n      type: \"addId\"\n    }); // change submitting state to trigger effect with POST req.\n\n    setSubmitting(true);\n  };\n\n  const submitNewClient = async () => {\n    //post req to DB\n    const clientRes = await axios({\n      method: \"post\",\n      data: newClient,\n      url: `${globalVars.serverURL}/clients`,\n      responseType: \"json\"\n    });\n    const clientData = await clientRes.data;\n\n    if (clientData.msg === globalVars.msgSuccess) {\n      // add client data to clients state for table update\n      addNewClientToState(newClient); // reset newClient state\n\n      setNewClient({\n        type: \"clear\"\n      }); // hide form\n\n      toggleIsClientAdded(); //reset submitting\n\n      setSubmitting(false);\n    }\n  };\n\n  const onCancel = () => {\n    setNewClient({\n      type: \"clear\"\n    });\n    toggleIsClientAdded();\n  };\n\n  return isClientAdded ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, languages.en.addNewClient), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(ClientForm, {\n    fields: fields,\n    onChange: onChange,\n    newClient: newClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, languages.en.save), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, languages.en.cancel))) : null;\n};\n\nexport default CreateClient;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/CreateClient.tsx"],"names":["Button","Typography","ClientForm","useReducer","useEffect","useState","axios","globalVars","languages","generateUniqueId","moment","CreateClient","fields","isClientAdded","toggleIsClientAdded","addNewClientToState","initialNewClientState","map","e","fieldName","reduce","o","key","submitting","setSubmitting","newClient","setNewClient","state","action","type","payload","fieldType","fieldTypes","number","value","_id","length","useNumbers","useLetters","includeSymbols","dateAdded","format","onChange","event","target","name","submitNewClient","onSubmit","preventDefault","clientRes","method","data","url","serverURL","responseType","clientData","msg","msgSuccess","onCancel","en","addNewClient","save","cancel"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClientForm from \"./ClientForm\";\nimport { useReducer, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport generateUniqueId from \"generate-unique-id\";\nimport moment from \"moment\";\n\nconst CreateClient = ({\n  fields,\n  isClientAdded,\n  toggleIsClientAdded,\n  addNewClientToState,\n}: any) => {\n  const initialNewClientState = fields\n    .map((e: any) => e.fieldName)\n    .reduce((o, key) => Object.assign(o, { [key]: \"\" }), {});\n\n  const [submitting, setSubmitting] = useState(false);\n  const [newClient, setNewClient] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"onTextChange\":\n        return {\n          ...state,\n          [action.payload.fieldName]:\n            action.payload.fieldType === globalVars.fieldTypes.number\n              ? parseInt(action.payload.value)\n              : action.payload.value\n        };\n      case \"addId\":\n        return {\n          ...state,\n          _id: generateUniqueId({\n            length: 24,\n            useNumbers: true,\n            useLetters: false,\n            includeSymbols: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n          })\n        };\n      case \"addDate\":\n        return {\n          ...state,\n           dateAdded: moment().format(\"llll\")\n        }\n      case \"clear\":\n        return {\n          initialNewClientState  \n        };\n\n      default:\n        return state;\n    }\n  }, initialNewClientState);\n\n  const onChange = (fieldType, event) => {\n    setNewClient({\n      type: \"onTextChange\",\n      payload: { fieldName : event.target.name, value: event.target.value, fieldType }\n    });\n\n  };\n\n  useEffect(() => {\n    //trigger side effect when submitting state is changed and its is true\n    submitting ? submitNewClient() : null;\n  }, [submitting])\n\n  const onSubmit = e => {\n      // on Button Click prepare client object to be ready to send\n      e.preventDefault();\n      setNewClient({type: \"addDate\"});\n      setNewClient({ type: \"addId\" });\n      // change submitting state to trigger effect with POST req.\n      setSubmitting(true);\n  };\n\n  const submitNewClient = async () => {\n    //post req to DB\n    const clientRes = await axios({\n      method: \"post\",\n      data: newClient,\n      url: `${globalVars.serverURL}/clients`,\n      responseType: \"json\"\n    });\n    const clientData = await clientRes.data;\n    if (clientData.msg === globalVars.msgSuccess) {\n      // add client data to clients state for table update\n      addNewClientToState(newClient);\n      // reset newClient state\n      setNewClient({\n        type: \"clear\"\n      });\n      // hide form\n      toggleIsClientAdded();\n      //reset submitting\n      setSubmitting(false);\n    }\n  }\n\n  const onCancel = () => {\n    setNewClient({\n      type: \"clear\"\n    });\n    toggleIsClientAdded();\n  };\n\n  return isClientAdded ? (\n    <div>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n        {languages.en.addNewClient}\n      </Typography>\n      <form onSubmit={onSubmit}>\n        <ClientForm fields={fields} onChange={onChange} newClient={newClient} />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          {languages.en.save}\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\n          {languages.en.cancel}\n        </Button>\n      </form>\n    </div>\n  ) : null;\n};\n\nexport default CreateClient;\n"]},"metadata":{},"sourceType":"module"}