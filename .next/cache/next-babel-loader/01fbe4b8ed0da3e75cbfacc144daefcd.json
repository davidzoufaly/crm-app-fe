{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from '../components/Header';\nimport axios from 'axios';\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport ShowRecordsNumber from '../components/RecordsNumber';\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\n\nconst Dashboard = props => {\n  const router = useRouter();\n  const {\n    0: headingOne,\n    1: setHeadingOne\n  } = useState(\"\");\n  useEffect(() => {\n    setHeadingOne(new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString());\n    const title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText);\n    document.title = title.text;\n  }, [router]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, headingOne), __jsx(ShowRecordsNumber, {\n    data: props.data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nDashboard.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/count`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return data;\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx"],"names":["Header","axios","useEffect","useState","useRouter","ShowRecordsNumber","stringMethods","globalVars","Dashboard","props","router","headingOne","setHeadingOne","pathname","removeSlash","firstCharUpperCase","getString","title","addStringToEnd","titleSubText","document","text","data","getInitialProps","res","method","url","serverURL","responseType"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAgB;AAChC,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM;AAAA,OAACO,UAAD;AAAA,OAAaC;AAAb,MAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,aAAa,CACX,IAAIN,aAAJ,CAAkBI,MAAM,CAACG,QAAzB,EACGC,WADH,GAEGC,kBAFH,GAGGC,SAHH,EADW,CAAb;AAMA,UAAMC,KAAK,GAAG,IAAIX,aAAJ,CAAkBI,MAAM,CAACG,QAAzB,EACXC,WADW,GAEXC,kBAFW,GAGXG,cAHW,CAGIX,UAAU,CAACY,YAHf,CAAd;AAIAC,IAAAA,QAAQ,CAACH,KAAT,GAAiBA,KAAK,CAACI,IAAvB;AACD,GAZQ,EAYN,CAACX,MAAD,CAZM,CAAT;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,UAAL,CAFF,EAGE,MAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEF,KAAK,CAACa,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA1BD;;AA4BAd,SAAS,CAACe,eAAV,GAA4B,YAAY;AACtC,QAAMC,GAAG,GAAG,MAAMvB,KAAK,CAAC;AACpBwB,IAAAA,MAAM,EAAE,KADY;AAEpBC,IAAAA,GAAG,EAAG,GAAEnB,UAAU,CAACoB,SAAU,gBAFT;AAGpBC,IAAAA,YAAY,EAAE;AAHM,GAAD,CAAvB;AAKE,QAAMN,IAAI,GAAG,MAAME,GAAG,CAACF,IAAvB;AACA,SAAOA,IAAP;AACH,CARD;;AAUA,eAAed,SAAf","sourcesContent":["import Header from '../components/Header';\nimport axios from 'axios';\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport ShowRecordsNumber from '../components/RecordsNumber';\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\n\n\nconst Dashboard = (props: any) => {\n  const router = useRouter();\n  const [headingOne, setHeadingOne] = useState(\"\");\n\n  useEffect(() => {\n    setHeadingOne(\n      new stringMethods(router.pathname)\n        .removeSlash()\n        .firstCharUpperCase()\n        .getString()\n    );\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText);\n    document.title = title.text;\n  }, [router]);\n\n\n  return (\n    <div>\n      <Header/>\n      <h1>{headingOne}</h1>\n      <ShowRecordsNumber data={props.data} />\n    </div>\n  );\n};\n\nDashboard.getInitialProps = async () => {\n  const res = await axios({\n      method: \"get\",\n      url: `${globalVars.serverURL}/clients/count`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    return data;\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}