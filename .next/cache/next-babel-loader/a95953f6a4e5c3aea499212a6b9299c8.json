{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\"; //TODO: SKRÝVÁNÍ POLÍ CO NEJSOU V DB\n\nvar Client = function Client(_ref) {\n  var clientData = _ref.clientData,\n      fieldsData = _ref.fieldsData;\n  var firstName = clientData.firstName,\n      lastName = clientData.lastName;\n  useEffect(function () {\n    document.title = \"\".concat(firstName, \" \").concat(lastName, \" \").concat(globalVars.titleSubText); // console.log(clientData);\n    // console.log(fieldsData);\n  });\n\n  var showAllProperities = function showAllProperities() {\n    var list = [];\n    fieldsData.map(function (field) {\n      switch (field.fieldType) {\n        case \"text\":\n          list.push(__jsx(\"li\", {\n            key: field.fieldName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, new stringMethods(field.fieldName).camelStringToText().firstCharUpperCase().getString(), __jsx(\"textarea\", {\n            value: clientData[field.fieldName],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          })));\n          break;\n\n        case \"number\":\n          list.push(__jsx(\"li\", {\n            key: field.fieldName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, new stringMethods(field.fieldName).camelStringToText().firstCharUpperCase().getString(), __jsx(\"input\", {\n            type: \"number\",\n            value: clientData[field.fieldName],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          })));\n          break;\n\n        case \"select\":\n          list.push(__jsx(\"li\", {\n            key: field.fieldName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, field.fieldName, \":\", __jsx(\"select\", {\n            value: clientData[field.fieldName],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, field.fieldOptions.map(function (option) {\n            return __jsx(\"option\", {\n              key: option.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50\n              },\n              __self: this\n            }, option.value);\n          }))));\n      }\n    });\n    return list;\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, firstName, \" \", lastName), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, showAllProperities()));\n};\n\nClient.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, resClient, clientData, resFields, fieldsData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return axios({\n              method: \"get\",\n              url: \"\".concat(globalVars.serverURL, \"/clients/\").concat(id),\n              responseType: \"json\"\n            });\n\n          case 3:\n            resClient = _context.sent;\n            _context.next = 6;\n            return resClient.data;\n\n          case 6:\n            clientData = _context.sent;\n            _context.next = 9;\n            return axios({\n              method: \"get\",\n              url: \"\".concat(globalVars.serverURL, \"/fields\"),\n              responseType: \"json\"\n            });\n\n          case 9:\n            resFields = _context.sent;\n            _context.next = 12;\n            return resFields.data;\n\n          case 12:\n            fieldsData = _context.sent;\n            return _context.abrupt(\"return\", {\n              clientData: clientData,\n              fieldsData: fieldsData\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Client;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[id].tsx"],"names":["Header","axios","useEffect","stringMethods","globalVars","Client","clientData","fieldsData","firstName","lastName","document","title","titleSubText","showAllProperities","list","map","field","fieldType","push","fieldName","camelStringToText","firstCharUpperCase","getString","fieldOptions","option","id","value","getInitialProps","context","query","method","url","serverURL","responseType","resClient","data","resFields"],"mappings":"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","sourcesContent":["import Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\";\n\n//TODO: SKRÝVÁNÍ POLÍ CO NEJSOU V DB\n\nconst Client = ({ clientData, fieldsData }: any) => {\n  const { firstName, lastName } = clientData;\n\n  useEffect(() => {\n    document.title = `${firstName} ${lastName} ${globalVars.titleSubText}`;\n    // console.log(clientData);\n    // console.log(fieldsData);\n  });\n\n  const showAllProperities = () => {\n    const list = [];\n    fieldsData.map(field => {\n      switch (field.fieldType) {\n        case \"text\":\n          list.push(\n            <li key={field.fieldName}>\n              {new stringMethods(field.fieldName)\n                .camelStringToText()\n                .firstCharUpperCase()\n                .getString()}\n              <textarea value={clientData[field.fieldName]} />\n            </li>\n          );\n          break;\n        case \"number\":\n          list.push(\n            <li key={field.fieldName}>\n              {new stringMethods(field.fieldName)\n                .camelStringToText()\n                .firstCharUpperCase()\n                .getString()}\n              <input type=\"number\" value={clientData[field.fieldName]} />\n            </li>\n          );\n          break;\n        case \"select\":\n          list.push(\n            <li key={field.fieldName}>\n              {field.fieldName}:\n              <select value={clientData[field.fieldName]}>\n                {field.fieldOptions.map(option => (\n                  <option key={option.id}>{option.value}</option>\n                ))}\n              </select>\n            </li>\n          );\n      }\n    });\n    return list;\n  };\n\n  return (\n    <div>\n      <Header />\n      <h1>\n        {firstName} {lastName}\n      </h1>\n      <ul>{showAllProperities()}</ul>\n    </div>\n  );\n};\n\nClient.getInitialProps = async (context: any) => {\n  const { id } = context.query;\n  const resClient = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/${id}`,\n    responseType: \"json\"\n  });\n  const clientData = await resClient.data;\n\n  const resFields = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const fieldsData = await resFields.data;\n\n  return { clientData, fieldsData };\n};\n\nexport default Client;\n"]},"metadata":{},"sourceType":"module"}