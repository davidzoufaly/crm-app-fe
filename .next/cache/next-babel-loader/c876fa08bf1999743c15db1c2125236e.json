{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[key].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useReducer, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../../components/Header\";\nimport TableBody from \"../../components/clients/TableBody\";\nimport UserContext from \"../../components/UserContext\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\";\nimport TableHead from \"../../components/clients/TableHead\";\nimport CreateClient from \"../../components/clients/CreateClient\";\nimport EmailForm from \"../../components/EmailForm\";\nimport Buttons from \"../../components/clients/Buttons\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport { Table, Typography } from '@material-ui/core';\nimport TableBodyMui from \"@material-ui/core/TableBody\";\nimport languages from \"../../library/languages\";\n\nvar Clients = function Clients(_ref) {\n  var fieldData = _ref.fieldData,\n      clientData = _ref.clientData,\n      clientCount = _ref.clientCount;\n  var router = useRouter();\n  var user = useContext(UserContext);\n\n  var _useState = useState(clientCount),\n      clientsNumber = _useState[0],\n      setClientsNumber = _useState[1];\n\n  var _useReducer = useReducer(function (state, action) {\n    switch (action.type) {\n      case \"handleCheckedClients\":\n        return state.map(function (client) {\n          return client._id === action.payload.id ? client.isChecked === false || client.isChecked === undefined ? _objectSpread({}, client, {\n            isChecked: true\n          }) : _objectSpread({}, client, {\n            isChecked: false\n          }) : client;\n        });\n\n      case \"addClient\":\n        return [].concat(_toConsumableArray(state), [action.payload.newClient]);\n\n      case \"deleteCheckedClients\":\n        return state.filter(function (client) {\n          return !client.isChecked;\n        });\n\n      case \"unCheckAll\":\n        return state.map(function (client) {\n          return client = _objectSpread({}, client, {\n            isChecked: false\n          });\n        });\n\n      default:\n        return state;\n    }\n  }, clientData),\n      clients = _useReducer[0],\n      setClients = _useReducer[1];\n\n  var _useState2 = useState({\n    sortBy: \"First name\",\n    reverse: true\n  }),\n      sort = _useState2[0],\n      setSort = _useState2[1];\n\n  var _useState3 = useState(false),\n      initialized = _useState3[0],\n      setInitialized = _useState3[1];\n\n  var _useState4 = useState(false),\n      isClientAdded = _useState4[0],\n      setIsClientAdded = _useState4[1];\n\n  var _useState5 = useState(false),\n      isEmailCreated = _useState5[0],\n      setIsEmailCreated = _useState5[1];\n\n  useEffect(function () {\n    // set page title\n    var title = new stringMethods(router.pathname).removeSlash().removeSlashAndTextAfter().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n  useEffect(function () {\n    // reset email state, when user uncheck all recievers / clients\n    filterCheckedClients().length === 0 && isEmailCreated ? setIsEmailCreated(!isEmailCreated) : null;\n  }, [clients]); // create H1\n\n  var h1 = new stringMethods(router.pathname).removeSlash().removeSlashAndTextAfter().firstCharUpperCase().getString();\n\n  var sortBy = function sortBy(fieldName) {\n    setSort(_objectSpread({}, sort, {\n      sortBy: fieldName,\n      reverse: fieldName === sort.sortBy // if clicked again on same field ->Â reverse sort based on current reverse state\n      ? !sort.reverse ? true : false // if new field being clicked -> set reverse true to immediately sort column ASC \n      : true\n    }));\n  };\n\n  var handleCheckbox = function handleCheckbox(id) {\n    setClients({\n      type: \"handleCheckedClients\",\n      payload: {\n        id: id\n      }\n    });\n  };\n\n  var addNewClientToState = function addNewClientToState(newClient) {\n    setClients({\n      type: \"addClient\",\n      payload: {\n        newClient: newClient\n      }\n    });\n  };\n\n  var filterCheckedClients = function filterCheckedClients() {\n    return clients.filter(function (client) {\n      return client.isChecked;\n    });\n  };\n\n  var unCheckAll = function unCheckAll() {\n    setClients({\n      type: \"unCheckAll\"\n    });\n  };\n\n  var toggleIsEmailCreated = function toggleIsEmailCreated() {\n    setIsEmailCreated(isEmailCreated ? false : true);\n  };\n\n  var toggleIsClientAdded = function toggleIsClientAdded() {\n    isClientAdded ? setIsClientAdded(false) : setIsClientAdded(true);\n  };\n\n  var deleteMultipleClients =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setClients({\n                type: \"deleteCheckedClients\"\n              });\n              _context.next = 3;\n              return axios({\n                method: \"DELETE\",\n                data: filterCheckedClients().map(function (e) {\n                  return e._id;\n                }),\n                url: \"\".concat(globalVars.serverURL, \"/clients/\"),\n                params: {\n                  key: user.user.userkey\n                },\n                responseType: \"json\"\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function deleteMultipleClients() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return !user.user.signedIn && !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, h1), __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, languages.en.saved, \" \", clientCount), __jsx(EmailForm, {\n    to: filterCheckedClients().map(function (e) {\n      return e[\"Email\"];\n    }),\n    isEmailCreated: isEmailCreated,\n    toggleIsEmailCreated: toggleIsEmailCreated,\n    unCheckAll: unCheckAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), __jsx(CreateClient, {\n    fields: fieldData,\n    isClientAdded: isClientAdded,\n    toggleIsClientAdded: toggleIsClientAdded,\n    addNewClientToState: addNewClientToState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), __jsx(Buttons, {\n    clientsAreNotChecked: !clients.some(function (client) {\n      return client.isChecked;\n    }),\n    deleteMultipleClients: deleteMultipleClients,\n    toggleIsClientAdded: toggleIsClientAdded,\n    isClientAdded: isClientAdded,\n    toggleIsEmailCreated: toggleIsEmailCreated,\n    isEmailCreated: isEmailCreated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), __jsx(Table, {\n    \"aria-label\": \"clients table\",\n    size: \"small\",\n    style: {\n      backgroundColor: \"white\",\n      border: \"1px solid #e0e0e0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    fields: fieldData,\n    sortBy: sortBy,\n    sort: sort,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), __jsx(TableBodyMui, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(TableBody, {\n    clients: clients,\n    fields: fieldData,\n    sort: sort,\n    handleCheckbox: handleCheckbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }))));\n};\n\nClients.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(context) {\n    var clientRes, clientData, fieldRes, fieldData, resClientCount, clientCount;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios({\n              method: \"GET\",\n              url: \"\".concat(globalVars.serverURL, \"/clients/\"),\n              params: {\n                key: context.query.key\n              },\n              responseType: \"json\"\n            });\n\n          case 2:\n            clientRes = _context2.sent;\n            _context2.next = 5;\n            return clientRes.data;\n\n          case 5:\n            clientData = _context2.sent;\n            _context2.next = 8;\n            return axios({\n              method: \"GET\",\n              url: \"\".concat(globalVars.serverURL, \"/fields\"),\n              params: {\n                key: context.query.key\n              },\n              responseType: \"json\"\n            });\n\n          case 8:\n            fieldRes = _context2.sent;\n            _context2.next = 11;\n            return fieldRes.data;\n\n          case 11:\n            fieldData = _context2.sent;\n            _context2.next = 14;\n            return axios(\"\".concat(globalVars.serverURL, \"/clients/count?key=\").concat(context.query.key));\n\n          case 14:\n            resClientCount = _context2.sent;\n            _context2.next = 17;\n            return resClientCount.data;\n\n          case 17:\n            clientCount = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              clientData: clientData,\n              fieldData: fieldData,\n              clientCount: clientCount\n            });\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Clients;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[key].tsx"],"names":["useState","useEffect","useReducer","useContext","useRouter","axios","Header","TableBody","UserContext","stringMethods","globalVars","TableHead","CreateClient","EmailForm","Buttons","LoadingSpinner","Table","Typography","TableBodyMui","languages","Clients","fieldData","clientData","clientCount","router","user","clientsNumber","setClientsNumber","state","action","type","map","client","_id","payload","id","isChecked","undefined","newClient","filter","clients","setClients","sortBy","reverse","sort","setSort","initialized","setInitialized","isClientAdded","setIsClientAdded","isEmailCreated","setIsEmailCreated","title","pathname","removeSlash","removeSlashAndTextAfter","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","checkUser","filterCheckedClients","length","h1","fieldName","handleCheckbox","addNewClientToState","unCheckAll","toggleIsEmailCreated","toggleIsClientAdded","deleteMultipleClients","method","data","e","url","serverURL","params","key","userkey","responseType","signedIn","en","saved","some","backgroundColor","border","getInitialProps","context","query","clientRes","fieldRes","resClientCount"],"mappings":"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","sourcesContent":["import { useState, useEffect, useReducer, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../../components/Header\";\nimport TableBody from \"../../components/clients/TableBody\";\nimport UserContext from \"../../components/UserContext\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\";\nimport TableHead from \"../../components/clients/TableHead\";\nimport CreateClient from \"../../components/clients/CreateClient\";\nimport EmailForm from \"../../components/EmailForm\";\nimport Buttons from \"../../components/clients/Buttons\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport {Table, Typography} from '@material-ui/core';\nimport TableBodyMui from \"@material-ui/core/TableBody\"\nimport languages from \"../../library/languages\";\n\n\nconst Clients = ({ fieldData, clientData, clientCount }: any) => {\n  const router = useRouter();\n  const user = useContext(UserContext);\n  const [clientsNumber, setClientsNumber] = useState(clientCount)\n\n  const [clients, setClients] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"handleCheckedClients\":\n        return state.map(client =>\n          client._id === action.payload.id\n            ? client.isChecked === false || client.isChecked === undefined\n              ? { ...client, isChecked: true }\n              : { ...client, isChecked: false }\n            : client\n        );\n      case \"addClient\":\n        return [...state, action.payload.newClient];\n      case \"deleteCheckedClients\":\n        return state.filter(client => !client.isChecked);\n      case \"unCheckAll\": \n        return state.map(client => client = {...client, isChecked: false});\n      default:\n        return state;\n    }\n  }, clientData);\n\n  const [sort, setSort] = useState({\n    sortBy: \"First name\",\n    reverse: true\n  })\n  \n  const [initialized, setInitialized] = useState(false);\n  const [isClientAdded, setIsClientAdded] = useState(false);\n  const [isEmailCreated, setIsEmailCreated] = useState(false);\n\n  useEffect(() => {\n    // set page title\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .removeSlashAndTextAfter()      \n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n\n  useEffect(() => {\n    // reset email state, when user uncheck all recievers / clients\n    filterCheckedClients().length === 0 && isEmailCreated\n      ? setIsEmailCreated(!isEmailCreated)\n      : null;\n  }, [clients]);\n\n  // create H1\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .removeSlashAndTextAfter()\n    .firstCharUpperCase()\n    .getString();\n\n  const sortBy = fieldName => {\n    setSort({...sort, \n        sortBy: fieldName,\n        reverse: fieldName === sort.sortBy \n                  // if clicked again on same field ->Â reverse sort based on current reverse state\n                  ? !sort.reverse \n                      ? true : false\n                  // if new field being clicked -> set reverse true to immediately sort column ASC \n                  : true\n    });\n  };\n\n  const handleCheckbox = id => {\n    setClients({\n      type: \"handleCheckedClients\",\n      payload: { id }\n    });\n  };\n\n  const addNewClientToState = newClient => {\n    setClients({\n      type: \"addClient\",\n      payload: { newClient }\n    });\n  };\n\n  const filterCheckedClients = () => clients.filter(client => client.isChecked);\n\n  const unCheckAll = () =>Â {\n    setClients({type: \"unCheckAll\"})\n  }\n\n  const toggleIsEmailCreated = () => {\n    setIsEmailCreated(isEmailCreated ? false : true);\n  };\n\n  const toggleIsClientAdded = () => { \n    isClientAdded ? setIsClientAdded(false) : setIsClientAdded(true);\n  };\n\n  const deleteMultipleClients = async () => {\n    setClients({\n      type: \"deleteCheckedClients\"\n    });\n\n    await axios({\n      method: \"DELETE\",\n      data: filterCheckedClients().map(e => e._id),\n      url: `${globalVars.serverURL}/clients/`,\n      params: {key: user.user.userkey},\n      responseType: \"json\"\n    });\n  };\n\n  return !user.user.signedIn && !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <Typography component=\"h1\" variant=\"h3\">{h1}</Typography>\n      <Typography variant=\"h5\" gutterBottom>{languages.en.saved} {clientCount}</Typography>\n      <EmailForm\n        to={filterCheckedClients().map(e => e[\"Email\"])}\n        isEmailCreated={isEmailCreated}\n        toggleIsEmailCreated={toggleIsEmailCreated}\n        unCheckAll={unCheckAll}\n      />\n      <CreateClient\n        fields={fieldData}\n        isClientAdded={isClientAdded}\n        toggleIsClientAdded={toggleIsClientAdded}\n        addNewClientToState={addNewClientToState}\n      />\n      <Buttons\n        clientsAreNotChecked={!clients.some(client => client.isChecked)}\n        deleteMultipleClients={deleteMultipleClients}\n        toggleIsClientAdded={toggleIsClientAdded}\n        isClientAdded={isClientAdded}\n        toggleIsEmailCreated={toggleIsEmailCreated}\n        isEmailCreated={isEmailCreated}\n      />\n        <Table aria-label=\"clients table\" size=\"small\" style={{backgroundColor: \"white\", border: \"1px solid #e0e0e0\"}}>\n        <TableHead fields={fieldData} sortBy={sortBy} sort={sort} />\n        <TableBodyMui>\n          <TableBody\n            clients={clients}\n            fields={fieldData}\n            sort={sort}\n            handleCheckbox={handleCheckbox}\n          />\n        </TableBodyMui>\n      </Table>\n    </div>\n  );\n};\n\nClients.getInitialProps = async (context : any) => {\n  //fetch clients\n  const clientRes = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/clients/`,\n    params: {key: context.query.key},\n    responseType: \"json\"\n  });\n  const clientData = await clientRes.data;\n\n  //fetch fields\n  const fieldRes = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/fields`,\n    params: {key: context.query.key},\n    responseType: \"json\"\n  });\n  const fieldData = await fieldRes.data;\n\n  //fetch clients counter\n  const resClientCount = await axios(\n    `${globalVars.serverURL}/clients/count?key=${context.query.key}`\n  );\n  const clientCount = await resClientCount.data\n\n  return {\n    clientData,\n    fieldData,\n    clientCount\n  };\n};\n\nexport default Clients;\n"]},"metadata":{},"sourceType":"module"}