{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/TableBody.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport uniqid from \"uniqid\"; //TODO Filtrují se i polé které neexistujou na straně body\n\nvar TableBody = function TableBody(_ref) {\n  var clients = _ref.clients,\n      reverse = _ref.reverse,\n      sort = _ref.sort,\n      fields = _ref.fields,\n      handleCheckbox = _ref.handleCheckbox;\n\n  if (fields.some(function (e) {\n    return e.fieldName === sort && e.fieldType === \"number\";\n  })) {\n    if (reverse) {\n      clients.sort(function (a, b) {\n        return b[sort] - a[sort];\n      });\n    } else {\n      clients.sort(function (a, b) {\n        return a[sort] - b[sort];\n      });\n    }\n  } else {\n    if (reverse) {\n      clients.sort(function (a, b) {\n        return b[sort] > a[sort] ? -1 : 1;\n      });\n    } else {\n      clients.sort(function (a, b) {\n        return b[sort] < a[sort] ? -1 : 1;\n      });\n    }\n  }\n\n  var fieldNames = [];\n  fields.forEach(function (e) {\n    return fieldNames.push(e.fieldName, e.fieldType);\n  });\n  var tableClients = clients.map(function (e) {\n    var tableItem = function tableItem() {\n      var items = [];\n\n      for (var key in e) {\n        //show only clients data with existing fields\n        e[key] !== e._id && fieldNames.includes(key) ? items.push(__jsx(\"td\", {\n          key: uniqid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, e[key])) : __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      } // add checkbox at first position\n\n\n      items.unshift(__jsx(\"td\", {\n        key: uniqid(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        checked: e.isChecked === undefined ? false : e.isChecked,\n        onChange: function onChange() {\n          return handleCheckbox(e._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))); // add profile link at last position\n\n      items.push(__jsx(\"td\", {\n        key: uniqid(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/clients/[id]\",\n        as: \"/clients/\".concat(e._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Go\"))));\n      return items;\n    };\n\n    return __jsx(\"tr\", {\n      key: e._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, tableItem());\n  });\n  return tableClients;\n};\n\nexport default TableBody;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/TableBody.tsx"],"names":["Link","uniqid","TableBody","clients","reverse","sort","fields","handleCheckbox","some","e","fieldName","fieldType","a","b","fieldNames","forEach","push","tableClients","map","tableItem","items","key","_id","includes","unshift","isChecked","undefined"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\nimport uniqid from \"uniqid\";\n\n//TODO Filtrují se i polé které neexistujou na straně body\n\ninterface IProps {\n  clients: any;\n  reverse: boolean;\n  sort: string;\n  fields: any;\n  handleCheckbox: any;\n}\n\nconst TableBody = ({\n  clients,\n  reverse,\n  sort,\n  fields,\n  handleCheckbox\n}: IProps) => {\n  if (fields.some(e => e.fieldName === sort && e.fieldType === \"number\")) {\n    if (reverse) {\n      clients.sort((a: any, b: any) => b[sort] - a[sort]);\n    } else {\n      clients.sort((a: any, b: any) => a[sort] - b[sort]);\n    }\n  } else {\n    if (reverse) {\n      clients.sort((a: any, b: any) => (b[sort] > a[sort] ? -1 : 1));\n    } else {\n      clients.sort((a: any, b: any) => (b[sort] < a[sort] ? -1 : 1));\n    }\n  }\n\n  const fieldNames = [];\n  fields.forEach((e: any) => fieldNames.push(e.fieldName, e.fieldType));\n\n  const tableClients = clients.map((e: any) => {\n    const tableItem = () => {\n      let items = [];\n\n      for (let key in e) {\n        //show only clients data with existing fields\n        e[key] !== e._id && fieldNames.includes(key)\n          ? items.push(<td key={uniqid()}>{e[key]}</td>)\n          : <td></td>;\n      }\n      // add checkbox at first position\n      items.unshift(\n        <td key={uniqid()}>\n          <input\n            type=\"checkbox\"\n            checked={e.isChecked === undefined ? false : e.isChecked}\n            onChange={() => handleCheckbox(e._id)}\n          />\n        </td>\n      );\n      // add profile link at last position\n      items.push(\n        <td key={uniqid()}><Link href=\"/clients/[id]\" as={`/clients/${e._id}`}>\n          <a>Go</a>\n        </Link></td>\n      );\n      return items;\n    };\n\n    return (\n      <tr key={e._id}>\n        {tableItem()}\n      </tr>\n    );\n  });\n  return tableClients;\n};\n\nexport default TableBody;\n"]},"metadata":{},"sourceType":"module"}