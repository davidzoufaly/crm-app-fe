{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFields from \"./CustomFieldsList\";\n\nvar CustomClientFields = function CustomClientFields(_ref) {\n  var _jsx;\n\n  var fields = _ref.fields,\n      refreshList = _ref.refreshList;\n\n  var _useState = useState({\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false,\n    fieldOptions: []\n  }),\n      editedField = _useState[0],\n      setEditedField = _useState[1];\n\n  var saveEditedField =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios({\n                method: \"post\",\n                url: \"\".concat(globalVars.serverURL, \"/fields/\"),\n                data: editedField,\n                responseType: \"json\"\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.data;\n\n            case 5:\n              data = _context.sent;\n              // data.msg === \"Success\" ? changeDisplayComponent() : null;\n              console.log(data);\n              refreshList();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function saveEditedField() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var deleteField =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(event) {\n      var id, res, resData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = event.target.id;\n              _context2.next = 3;\n              return axios({\n                method: \"delete\",\n                url: \"\".concat(globalVars.serverURL, \"/fields/\").concat(id),\n                responseType: \"json\"\n              });\n\n            case 3:\n              res = _context2.sent;\n              _context2.next = 6;\n              return res.data;\n\n            case 6:\n              resData = _context2.sent;\n              resData.msg === \"Success\" ? refreshList() : null;\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteField(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onNameChange = function onNameChange(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldName: event.target.value\n    }));\n    console.log(editedField);\n  };\n\n  var onSelectChange = function onSelectChange(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    }));\n  };\n\n  var handleOptionSpawn = function handleOptionSpawn() {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: [].concat(_toConsumableArray(editedField.fieldOptions), [{\n        id: uniqid(),\n        value: \"\"\n      }])\n    }));\n  };\n\n  var onOptionChange = function onOptionChange(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(function (e) {\n        return event.target.id === e.id ? e.value = event.target.value : e;\n      })\n    }));\n  };\n\n  var onOptionDelete = function onOptionDelete(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(function (e) {\n        return event.target.id !== e.id ? e : null;\n      })\n    }));\n  }; // const setupEditedField = (obj ? : any) => {\n  //   setEditedField(obj);\n  // }\n\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Custom Client Fields\"), __jsx(CustomFields, {\n    deleteField: deleteField,\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(AddOrEditField, (_jsx = {\n    editedField: editedField,\n    refreshList: refreshList,\n    saveEditedField: saveEditedField,\n    onNameChange: onNameChange,\n    onSelectChange: onSelectChange,\n    handleOptionSpawn: handleOptionSpawn,\n    onOptionChange: onOptionChange,\n    onOptionDelete: onOptionDelete\n  }, _defineProperty(_jsx, \"saveEditedField\", saveEditedField), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  }), _defineProperty(_jsx, \"__self\", this), _jsx)));\n};\n\nexport default CustomClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx"],"names":["useState","AddOrEditField","axios","globalVars","uniqid","CustomFields","CustomClientFields","fields","refreshList","fieldName","fieldType","fieldPermanent","fieldOptions","editedField","setEditedField","saveEditedField","method","url","serverURL","data","responseType","res","console","log","deleteField","event","id","target","resData","msg","onNameChange","value","onSelectChange","options","selectedIndex","handleOptionSpawn","onOptionChange","filter","e","onOptionDelete"],"mappings":"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","sourcesContent":["\nimport { useState } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFields from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({ fields, refreshList }: any) => {\n  const [editedField, setEditedField] = useState({\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false,\n    fieldOptions: []\n  })\n\n  const saveEditedField = async () => {\n    const res = await axios({\n      method: \"post\",\n      url: `${globalVars.serverURL}/fields/`,\n      data: editedField,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    // data.msg === \"Success\" ? changeDisplayComponent() : null;\n    console.log(data);\n    refreshList();\n  };\n\n  const deleteField = async (event : any) => {\n    const id = event.target.id;\n    const res = await axios({\n        method: \"delete\",\n        url:`${globalVars.serverURL}/fields/${id}`,\n        responseType: \"json\"\n    })\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  }\n\n  const onNameChange = (event: any) => {\n    setEditedField({ ...editedField, fieldName: event.target.value});\n    console.log(editedField);\n  };\n\n  const onSelectChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    });\n  };\n\n  const handleOptionSpawn = () => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: [...editedField.fieldOptions, { id: uniqid(), value: \"\" }]\n    });\n  };\n\n  const onOptionChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id === e.id ? (e.value = event.target.value) : e\n      )\n    });\n  };\n\n  const onOptionDelete = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id !== e.id ? e : null\n      )\n    });\n  };\n\n  // const setupEditedField = (obj ? : any) => {\n  //   setEditedField(obj);\n  // }\n\n  return (\n    <div>\n      <h2>Custom Client Fields</h2>\n      <CustomFields deleteField={deleteField} fields={fields}/>\n      <AddOrEditField editedField={editedField} refreshList={refreshList} saveEditedField={saveEditedField} onNameChange={onNameChange} onSelectChange={onSelectChange} handleOptionSpawn={handleOptionSpawn} onOptionChange={onOptionChange} onOptionDelete={onOptionDelete} saveEditedField={saveEditedField}/>\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"]},"metadata":{},"sourceType":"module"}