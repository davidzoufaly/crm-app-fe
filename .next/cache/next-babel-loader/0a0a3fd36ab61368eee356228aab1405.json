{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/emailSettings/EmailSettingsForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport globalVars from \"../../../library/globalVariables\";\nimport languages from \"../../../library/languages\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { TextField, Box, Grid } from \"@material-ui/core\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    formWrapper: _defineProperty({\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      boxShadow: theme.shadows[\"1\"],\n      padding: theme.spacing(3),\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\"\n    }, theme.breakpoints.down(\"sm\"), {\n      width: \"100%\"\n    }),\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  });\n});\n\nvar EmailSettingsForm = function EmailSettingsForm(_ref) {\n  var username = _ref.username,\n      pass = _ref.pass;\n\n  var _useState = useState({\n    username: username,\n    pass: pass\n  }),\n      emailSettings = _useState[0],\n      setEmailSettings = _useState[1];\n\n  var _useState2 = useState(false),\n      isPassShown = _useState2[0],\n      setIsPassShown = _useState2[1];\n\n  var passEl = useRef(null);\n  var user = useContext(UserContext);\n  var classes = useStyles({});\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return axios({\n                method: \"post\",\n                url: \"\".concat(globalVars.serverURL, \"/emails\"),\n                params: {\n                  key: user.user.userkey\n                },\n                data: emailSettings,\n                responseType: \"json\"\n              });\n\n            case 3:\n              res = _context.sent;\n              data = res.data;\n\n              if (data === \"Success\") {\n                alert(languages.en.emailSettingsUpdatedSuccess);\n              } else {\n                alert(languages.en.somethingWentWrong);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var togglePass = function togglePass(e) {\n    e.preventDefault();\n\n    if (!isPassShown) {\n      passEl.current.type = \"text\";\n      setIsPassShown(true);\n    } else {\n      passEl.current.type = \"password\";\n      setIsPassShown(false);\n    }\n  };\n\n  var onChange = function onChange(e) {\n    setEmailSettings(_objectSpread({}, emailSettings, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return __jsx(Box, {\n    mt: \"1rem\",\n    mb: \"5rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, languages.en.onlyGoogleAcc), __jsx(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, languages.en.setupeLessSecure), __jsx(Box, {\n    className: classes.formWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"acc-name\",\n    type: \"text\",\n    name: \"username\",\n    autoComplete: \"email\",\n    value: emailSettings.username,\n    onChange: onChange,\n    margin: \"normal\",\n    label: languages.en.email,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"acc-pass\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    name: \"pass\",\n    margin: \"normal\",\n    inputRef: passEl,\n    value: emailSettings.pass,\n    onChange: onChange,\n    label: languages.en.password,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      marginRight: \"1rem\"\n    },\n    onClick: togglePass,\n    startIcon: isPassShown ? __jsx(VisibilityOffIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }) : __jsx(VisibilityIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, isPassShown ? languages.en.password : languages.en.password), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, languages.en.save)))))));\n};\n\nexport default EmailSettingsForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/emailSettings/EmailSettingsForm.tsx"],"names":["useState","useRef","useContext","axios","UserContext","globalVars","languages","createStyles","makeStyles","Button","Typography","VisibilityIcon","VisibilityOffIcon","TextField","Box","Grid","useStyles","theme","formWrapper","marginTop","spacing","borderRadius","boxShadow","shadows","padding","backgroundColor","palette","grey","width","breakpoints","down","textField","EmailSettingsForm","username","pass","emailSettings","setEmailSettings","isPassShown","setIsPassShown","passEl","user","classes","onSubmit","e","preventDefault","method","url","serverURL","params","key","userkey","data","responseType","res","alert","en","emailSettingsUpdatedSuccess","somethingWentWrong","togglePass","current","type","onChange","target","name","value","onlyGoogleAcc","setupeLessSecure","email","password","marginRight","save"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport globalVars from \"../../../library/globalVariables\";\nimport languages from \"../../../library/languages\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { TextField, Box, Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formWrapper: {\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      boxShadow: theme.shadows[\"1\"],\n      padding: theme.spacing(3),\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\",\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\"\n      }\n    },\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  })\n);\n\nconst EmailSettingsForm = ({ username, pass }) => {\n  const [emailSettings, setEmailSettings] = useState({ username, pass });\n  const [isPassShown, setIsPassShown] = useState(false);\n  const passEl = useRef(null);\n  const user = useContext(UserContext);\n  const classes = useStyles({});\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    const res = await axios({\n      method: \"post\",\n      url: `${globalVars.serverURL}/emails`,\n      params: { key: user.user.userkey },\n      data: emailSettings,\n      responseType: \"json\"\n    });\n    const data = res.data;\n    if (data === \"Success\") {\n      alert(languages.en.emailSettingsUpdatedSuccess);\n    } else {\n      alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  const togglePass = e => {\n    e.preventDefault();\n    if (!isPassShown) {\n      passEl.current.type = \"text\";\n      setIsPassShown(true);\n    } else {\n      passEl.current.type = \"password\";\n      setIsPassShown(false);\n    }\n  };\n\n  const onChange = e => {\n    setEmailSettings({ ...emailSettings, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Box mt=\"1rem\" mb=\"5rem\">\n      <Typography variant=\"body1\" gutterBottom>\n        {languages.en.onlyGoogleAcc}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        {languages.en.setupeLessSecure}\n      </Typography>\n      <Box className={classes.formWrapper}>\n        <form onSubmit={onSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                id=\"acc-name\"\n                type=\"text\"\n                name=\"username\"\n                autoComplete=\"email\"\n                value={emailSettings.username}\n                onChange={onChange}\n                margin=\"normal\"\n                label={languages.en.email}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <TextField\n                id=\"acc-pass\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                name=\"pass\"\n                margin=\"normal\"\n                inputRef={passEl}\n                value={emailSettings.pass}\n                onChange={onChange}\n                label={languages.en.password}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Box display=\"flex\" justifyContent=\"flex-end\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{marginRight: \"1rem\"}}\n                onClick={togglePass}\n                startIcon={\n                  isPassShown ? <VisibilityOffIcon /> : <VisibilityIcon />\n                }\n              >\n                {isPassShown ? languages.en.password : languages.en.password}\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                {languages.en.save}\n              </Button>            \n              </Box>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n    </Box>\n  );\n};\n\nexport default EmailSettingsForm;\n"]},"metadata":{},"sourceType":"module"}