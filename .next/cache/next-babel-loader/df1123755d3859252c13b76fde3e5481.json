{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/AddOrEditField.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport SelectFieldOptions from \"../components/SelectFieldOptions\";\n\nconst AddOrEditField = ({\n  fieldObject,\n  changeDisplayComponent\n}) => {\n  const {\n    0: updatedField,\n    1: setUpdatedField\n  } = useState(fieldObject);\n  const {\n    0: inputsNumber,\n    1: handleInputNumber\n  } = useState(0);\n\n  const saveField = () => {\n    //todo: post req na fields s editedField\n    setUpdatedField({});\n    changeDisplayComponent();\n  };\n\n  const onNameChange = event => {\n    setUpdatedField(_objectSpread({}, updatedField, {\n      fieldName: event.target.value\n    }));\n  };\n\n  const onSelectChange = event => {\n    setUpdatedField(_objectSpread({}, updatedField, {\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    }));\n  };\n\n  useEffect(() => {});\n\n  const handleInputsSpawn = () => {\n    handleInputNumber(inputsNumber + 1);\n  };\n\n  const handleInputsSpawnMinus = () => {\n    handleInputNumber(inputsNumber - 1);\n  };\n\n  const selectOptions = () => {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: handleInputsSpawn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"New\"));\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"field-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Field name\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"field-name\",\n    defaultValue: updatedField.fieldName,\n    onChange: onNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"field-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Field type\"), __jsx(\"select\", {\n    id: \"field-type\",\n    onChange: onSelectChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Text\"), __jsx(\"option\", {\n    value: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Select\"), __jsx(\"option\", {\n    value: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Number\")), __jsx(SelectFieldOptions, {\n    inputsNumber: inputsNumber,\n    handleInputsSpawnMinus: handleInputsSpawnMinus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), updatedField.fieldType === \"select\" ? selectOptions() : null, __jsx(\"button\", {\n    onClick: saveField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Save\"), __jsx(\"button\", {\n    onClick: changeDisplayComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Cancel\"));\n};\n\nexport default AddOrEditField;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/AddOrEditField.tsx"],"names":["useState","useEffect","SelectFieldOptions","AddOrEditField","fieldObject","changeDisplayComponent","updatedField","setUpdatedField","inputsNumber","handleInputNumber","saveField","onNameChange","event","fieldName","target","value","onSelectChange","fieldType","options","selectedIndex","handleInputsSpawn","handleInputsSpawnMinus","selectOptions"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport SelectFieldOptions from \"../components/SelectFieldOptions\";\n\nconst AddOrEditField = ({ fieldObject, changeDisplayComponent }: any) => {\n  const [updatedField, setUpdatedField] = useState(fieldObject);\n  const [inputsNumber, handleInputNumber] = useState(0);\n\n  const saveField = () => {\n      //todo: post req na fields s editedField\n    setUpdatedField({});\n    changeDisplayComponent();\n  };\n\n  const onNameChange = (event: any) => {\n    setUpdatedField({ ...updatedField, fieldName: event.target.value });\n  };\n\n  const onSelectChange = (event: any) => {\n      setUpdatedField({...updatedField, fieldType: event.target.options[event.target.options.selectedIndex].value})\n  }\n\n  useEffect(() => {\n  });\n\n  const handleInputsSpawn = () => {\n    handleInputNumber(inputsNumber + 1);\n  }\n\n  const handleInputsSpawnMinus = () => {\n    handleInputNumber(inputsNumber - 1);\n  }\n\n  const selectOptions = () => {\n      return (\n          <div>\n              <button onClick={handleInputsSpawn}>New</button>\n          </div>\n      )\n  }\n\n\n\n  return (\n    <div>\n      <label htmlFor=\"field-name\">Field name</label>\n      <input\n        type=\"text\"\n        id=\"field-name\"\n        defaultValue={updatedField.fieldName}\n        onChange={onNameChange}\n      />\n      <label htmlFor=\"field-type\">Field type</label>\n      <select id=\"field-type\" onChange={onSelectChange}>\n        <option value=\"text\">Text</option>\n        <option value=\"select\">Select</option>\n        <option value=\"number\">Number</option>\n      </select>\n      <SelectFieldOptions inputsNumber={inputsNumber} handleInputsSpawnMinus={handleInputsSpawnMinus}/>\n      {updatedField.fieldType === \"select\" ? selectOptions() : null}\n      <button onClick={saveField}>Save</button>\n      <button onClick={changeDisplayComponent}>Cancel</button>\n    </div>\n  );\n};\n\nexport default AddOrEditField;\n"]},"metadata":{},"sourceType":"module"}