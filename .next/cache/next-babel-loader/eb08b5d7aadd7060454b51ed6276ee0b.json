{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\"; //TODO: SKRÝVÁNÍ POLÍ CO NEJSOU V DB\n\nconst Client = ({\n  clientData,\n  fieldsData\n}) => {\n  const {\n    firstName,\n    lastName\n  } = clientData;\n  useEffect(() => {\n    document.title = `${name} ${globalVars.titleSubText}`;\n    console.log(clientData);\n    console.log(fieldsData);\n  });\n\n  const showAllProperities = () => {\n    const list = [];\n    fieldsData.map(field => {\n      for (let key in clientData) {\n        const convertedKey = new stringMethods(key).camelStringToText().firstCharUpperCase().getString();\n\n        if (key === field.fieldName) {\n          switch (field.fieldType) {\n            case \"text\":\n              list.push(__jsx(\"li\", {\n                key: key,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 31\n                },\n                __self: this\n              }, convertedKey, __jsx(\"textarea\", {\n                value: clientData[key],\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 31\n                },\n                __self: this\n              })));\n\n            case \"number\":\n              list.push(__jsx(\"li\", {\n                key: key,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 33\n                },\n                __self: this\n              }, convertedKey, \":\", __jsx(\"input\", {\n                type: \"number\",\n                value: clientData[key],\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 33\n                },\n                __self: this\n              })));\n          }\n        }\n      }\n    });\n    return list;\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, firstName, \" \", lastName), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, showAllProperities()));\n};\n\nClient.getInitialProps = async context => {\n  const {\n    id\n  } = context.query;\n  const resClient = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/${id}`,\n    responseType: \"json\"\n  });\n  const clientData = await resClient.data;\n  const resFields = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const fieldsData = await resFields.data;\n  return {\n    clientData,\n    fieldsData\n  };\n};\n\nexport default Client;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[id].tsx"],"names":["Header","axios","useEffect","stringMethods","globalVars","Client","clientData","fieldsData","firstName","lastName","document","title","name","titleSubText","console","log","showAllProperities","list","map","field","key","convertedKey","camelStringToText","firstCharUpperCase","getString","fieldName","fieldType","push","getInitialProps","context","id","query","resClient","method","url","serverURL","responseType","data","resFields"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,+BAAvB,C,CAEA;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAoC;AACjD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BH,UAAhC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACC,KAAT,GAAkB,GAAEC,IAAK,IAAGR,UAAU,CAACS,YAAa,EAApD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACD,GAJQ,CAAT;;AAMA,QAAMS,kBAAkB,GAAG,MAAM;AAE/B,UAAMC,IAAI,GAAG,EAAb;AAEAV,IAAAA,UAAU,CAACW,GAAX,CAAeC,KAAK,IAAI;AACtB,WAAK,IAAIC,GAAT,IAAgBd,UAAhB,EAA4B;AAC1B,cAAMe,YAAY,GAAG,IAAIlB,aAAJ,CAAkBiB,GAAlB,EACpBE,iBADoB,GAEpBC,kBAFoB,GAGpBC,SAHoB,EAArB;;AAIA,YAAIJ,GAAG,KAAKD,KAAK,CAACM,SAAlB,EAA6B;AACvB,kBAAON,KAAK,CAACO,SAAb;AACE,iBAAK,MAAL;AACIT,cAAAA,IAAI,CAACU,IAAL,CAAU;AAAI,gBAAA,GAAG,EAAEP,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAeC,YAAf,EAA4B;AAAU,gBAAA,KAAK,EAAEf,UAAU,CAACc,GAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5B,CAAV;;AACJ,iBAAK,QAAL;AACIH,cAAAA,IAAI,CAACU,IAAL,CAAW;AAAI,gBAAA,GAAG,EAAEP,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAeC,YAAf,OAA6B;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,KAAK,EAAEf,UAAU,CAACc,GAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7B,CAAX;AAJN;AAML;AACF;AACF,KAfD;AAgBA,WAAOH,IAAP;AACD,GArBD;;AAuBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,SAAL,OAAiBC,QAAjB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKO,kBAAkB,EAAvB,CAHF,CADF;AAOD,CAvCD;;AAyCAX,MAAM,CAACuB,eAAP,GAAyB,MAAOC,OAAP,IAAwB;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,SAAS,GAAG,MAAM/B,KAAK,CAAC;AAC5BgC,IAAAA,MAAM,EAAE,KADoB;AAE5BC,IAAAA,GAAG,EAAG,GAAE9B,UAAU,CAAC+B,SAAU,YAAWL,EAAG,EAFf;AAG5BM,IAAAA,YAAY,EAAE;AAHc,GAAD,CAA7B;AAKA,QAAM9B,UAAU,GAAG,MAAM0B,SAAS,CAACK,IAAnC;AAEA,QAAMC,SAAS,GAAG,MAAMrC,KAAK,CAAC;AAC5BgC,IAAAA,MAAM,EAAE,KADoB;AAE5BC,IAAAA,GAAG,EAAG,GAAE9B,UAAU,CAAC+B,SAAU,SAFD;AAG5BC,IAAAA,YAAY,EAAE;AAHc,GAAD,CAA7B;AAKA,QAAM7B,UAAU,GAAG,MAAM+B,SAAS,CAACD,IAAnC;AAEA,SAAO;AAAE/B,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAP;AACD,CAjBD;;AAmBA,eAAeF,MAAf","sourcesContent":["import Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\";\n\n//TODO: SKRÝVÁNÍ POLÍ CO NEJSOU V DB\n\nconst Client = ({ clientData, fieldsData}: any) => {\n  const { firstName, lastName } = clientData;\n\n  useEffect(() => {\n    document.title = `${name} ${globalVars.titleSubText}`;\n    console.log(clientData);\n    console.log(fieldsData);\n  });\n\n  const showAllProperities = () => {\n\n    const list = [];\n\n    fieldsData.map(field => {\n      for (let key in clientData) {\n        const convertedKey = new stringMethods(key)\n        .camelStringToText()\n        .firstCharUpperCase()\n        .getString();\n        if (key === field.fieldName) { \n              switch(field.fieldType) {\n                case \"text\":\n                    list.push(<li key={key}>{convertedKey}<textarea value={clientData[key]}/></li>);\n                case \"number\":\n                    list.push( <li key={key}>{convertedKey}:<input type=\"number\" value={clientData[key]}/></li>);\n              }  \n        }\n      }\n    })\n    return list;\n  };\n\n  return (\n    <div>\n      <Header />\n      <h1>{firstName} {lastName}</h1>\n      <ul>{showAllProperities()}</ul>\n    </div>\n  );\n};\n\nClient.getInitialProps = async (context: any) => {\n  const { id } = context.query;\n  const resClient = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/${id}`,\n    responseType: \"json\"\n  });\n  const clientData = await resClient.data;\n  \n  const resFields = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  })\n  const fieldsData = await resFields.data;\n\n  return { clientData, fieldsData };\n};\n\nexport default Client;\n"]},"metadata":{},"sourceType":"module"}