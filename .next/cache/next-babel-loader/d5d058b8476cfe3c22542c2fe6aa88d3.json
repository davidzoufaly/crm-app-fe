{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/RegisterForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport TextInput from \"./TextInput\";\nimport Button from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\nimport { Typography, Box } from '@material-ui/core';\n\nvar RegisterForm = function RegisterForm(_ref) {\n  var changeToLogin = _ref.changeToLogin;\n\n  var _useState = useState({\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  }),\n      regUser = _useState[0],\n      setRegUser = _useState[1];\n\n  var onChange = function onChange(e) {\n    setRegUser(_objectSpread({}, regUser, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var sentFormToBe =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var username, password, userRes, userData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              username = regUser.username, password = regUser.password;\n              _context.next = 3;\n              return axios({\n                method: \"POST\",\n                data: {\n                  username: username,\n                  password: password\n                },\n                url: \"\".concat(globalVars.serverURL, \"/users\"),\n                responseType: \"json\"\n              });\n\n            case 3:\n              userRes = _context.sent;\n              _context.next = 6;\n              return userRes.data;\n\n            case 6:\n              userData = _context.sent;\n              _context.t0 = userData.msg;\n              _context.next = _context.t0 === globalVars.msgSuccess ? 10 : _context.t0 === \"Exist\" ? 13 : 15;\n              break;\n\n            case 10:\n              alert(languages.en.success);\n              changeToLogin();\n              return _context.abrupt(\"break\", 16);\n\n            case 13:\n              alert(languages.en.userAlreadyExists);\n              return _context.abrupt(\"break\", 16);\n\n            case 15:\n              alert(languages.en.somethingWentWrong);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sentFormToBe() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onRegister = function onRegister() {\n    regUser.password === regUser.repeatPassword ? sentFormToBe() : alert(languages.en.passwordsDoesNotMatch);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, new stringMethods(languages.en.register).firstCharUpperCase().getString()), __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    onChange: onChange,\n    type: \"text\",\n    value: regUser.username,\n    text: \"username\",\n    title: new stringMethods(languages.en.username).firstCharUpperCase().getString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: regUser.password,\n    text: \"password\",\n    title: languages.en.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: regUser.repeatPassword,\n    text: \"repeatPassword\",\n    title: new stringMethods(languages.en.repeatPassword).firstCharUpperCase().getString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    mt: \"2rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: onRegister,\n    text: languages.en.register,\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/RegisterForm.tsx"],"names":["useState","axios","TextInput","Button","globalVars","languages","stringMethods","Typography","Box","RegisterForm","changeToLogin","username","password","repeatPassword","regUser","setRegUser","onChange","e","target","name","value","sentFormToBe","method","data","url","serverURL","responseType","userRes","userData","msg","msgSuccess","alert","en","success","userAlreadyExists","somethingWentWrong","onRegister","passwordsDoesNotMatch","register","firstCharUpperCase","getString"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport TextInput from \"./TextInput\";\nimport Button from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\nimport { Typography, Box } from '@material-ui/core';\n\nconst RegisterForm = ({ changeToLogin }) => {\n  const [regUser, setRegUser] = useState({\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  });\n\n  const onChange = e => {\n    setRegUser({ ...regUser, [e.target.name]: e.target.value });\n  };\n\n  const sentFormToBe = async () => {\n    const { username, password } = regUser;\n\n    const userRes = await axios({\n      method: \"POST\",\n      data: { username, password },\n      url: `${globalVars.serverURL}/users`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n\n    switch (userData.msg) {\n      case globalVars.msgSuccess:\n        alert(languages.en.success);\n        changeToLogin();\n        break;\n      case \"Exist\":\n        alert(languages.en.userAlreadyExists);\n        break;\n      default:\n        alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  const onRegister = () => {\n    regUser.password === regUser.repeatPassword\n      ? sentFormToBe()\n      : alert(languages.en.passwordsDoesNotMatch);\n  };\n\n  return (\n    <>\n      <Typography component=\"h2\" variant=\"h4\" gutterBottom>\n        {new stringMethods(languages.en.register)\n          .firstCharUpperCase()\n          .getString()\n        }\n      </Typography>\n      <form>\n        <TextInput\n          onChange={onChange}\n          type=\"text\"\n          value={regUser.username}\n          text=\"username\"\n          title={new stringMethods(languages.en.username)\n            .firstCharUpperCase()\n            .getString()}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={regUser.password}\n          text=\"password\"\n          title={languages.en.password}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={regUser.repeatPassword}\n          text=\"repeatPassword\"\n          title={new stringMethods(languages.en.repeatPassword)\n            .firstCharUpperCase()\n            .getString()}\n        />\n        <Box display=\"flex\" justifyContent=\"flex-end\" mt=\"2rem\">\n          <Button onClick={onRegister} text={languages.en.register} variant=\"contained\" />\n        </Box>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}