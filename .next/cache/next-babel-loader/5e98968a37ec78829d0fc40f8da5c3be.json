{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar stringMethods = function stringMethods(_text) {\n  var _this = this;\n\n  _classCallCheck(this, stringMethods);\n\n  _defineProperty(this, \"text\", void 0);\n\n  _defineProperty(this, \"splitStringByIndex\", function () {\n    _Array$from(_this.text).map(function (e) {\n      return e === e.toUpperCase() ? e = \"%-%\".concat(e.toLowerCase()) : e;\n    }).join(\"\").replace(/%-%/g, \" \");\n\n    return _this;\n  });\n\n  _defineProperty(this, \"firstCharUpperCase\", function () {\n    var str = _this.text.toLowerCase();\n\n    var firstCharString = str.substr(0, 1).toUpperCase();\n    var restString = str.substr(1);\n    _this.text = firstCharString + restString;\n    return _this;\n  });\n\n  _defineProperty(this, \"removeSlash\", function () {\n    _this.text = _this.text.replace(\"/\", \"\");\n    return _this;\n  });\n\n  _defineProperty(this, \"addStringToEnd\", function (text) {\n    _this.text = _this.text.concat(\" \".concat(text));\n    return _this;\n  });\n\n  this.text = _text;\n};\n\nexport default stringMethods;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/functions/stringMethods.tsx"],"names":["stringMethods","text","map","e","toUpperCase","toLowerCase","join","replace","str","firstCharString","substr","restString","concat"],"mappings":";;;;IAAMA,a,GAGJ,uBAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AAAA;;AAAA,8CAIL,YAAM;AACzB,gBAAW,KAAI,CAACA,IAAhB,EACGC,GADH,CACO,UAAAC,CAAC;AAAA,aAAKA,CAAC,KAAKA,CAAC,CAACC,WAAF,EAAN,GAAyBD,CAAC,gBAASA,CAAC,CAACE,WAAF,EAAT,CAA1B,GAAwDF,CAA7D;AAAA,KADR,EAEGG,IAFH,CAEQ,EAFR,EAGGC,OAHH,CAGW,MAHX,EAGmB,GAHnB;;AAKA,WAAO,KAAP;AACD,GAXyB;;AAAA,8CAaL,YAAM;AACzB,QAAIC,GAAG,GAAG,KAAI,CAACP,IAAL,CAAUI,WAAV,EAAV;;AACA,QAAMI,eAAe,GAAGD,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAc,CAAd,EAAiBN,WAAjB,EAAxB;AACA,QAAMO,UAAU,GAAGH,GAAG,CAACE,MAAJ,CAAW,CAAX,CAAnB;AACA,IAAA,KAAI,CAACT,IAAL,GAAYQ,eAAe,GAAGE,UAA9B;AACA,WAAO,KAAP;AACD,GAnByB;;AAAA,uCAqBZ,YAAM;AAClB,IAAA,KAAI,CAACV,IAAL,GAAY,KAAI,CAACA,IAAL,CAAUM,OAAV,CAAkB,GAAlB,EAAuB,EAAvB,CAAZ;AACA,WAAO,KAAP;AACD,GAxByB;;AAAA,0CA0BT,UAACN,IAAD,EAAkB;AACjC,IAAA,KAAI,CAACA,IAAL,GAAY,KAAI,CAACA,IAAL,CAAUW,MAAV,YAAqBX,IAArB,EAAZ;AACA,WAAO,KAAP;AACD,GA7ByB;;AACxB,OAAKA,IAAL,GAAYA,KAAZ;AACD,C;;AA8BH,eAAeD,aAAf","sourcesContent":["class stringMethods {\n  text: string;\n\n  constructor(text: string) {\n    this.text = text;\n  }\n\n  splitStringByIndex = () => {\n    Array.from(this.text)\n      .map(e => (e === e.toUpperCase() ? (e = `%-%${e.toLowerCase()}`) : e))\n      .join(\"\")\n      .replace(/%-%/g, \" \");\n\n    return this;\n  };\n\n  firstCharUpperCase = () => {\n    let str = this.text.toLowerCase();\n    const firstCharString = str.substr(0, 1).toUpperCase();\n    const restString = str.substr(1);\n    this.text = firstCharString + restString;\n    return this;\n  };\n\n  removeSlash = () => {\n    this.text = this.text.replace(\"/\", \"\");\n    return this;\n  };\n\n  addStringToEnd = (text: string) => {\n    this.text = this.text.concat(` ${text}`);\n    return this;\n  };\n}\n\nexport default stringMethods;\n"]},"metadata":{},"sourceType":"module"}