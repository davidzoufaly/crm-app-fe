{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/EmailForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport { useState, useEffect } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nvar EmailForm = function EmailForm(_ref) {\n  var to = _ref.to,\n      isEmailCreated = _ref.isEmailCreated,\n      toggleIsEmailCreated = _ref.toggleIsEmailCreated,\n      unCheckAll = _ref.unCheckAll;\n  var initEmail = {\n    to: to,\n    subject: \"\",\n    message: \"\"\n  };\n\n  var _useState = useState(initEmail),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(false),\n      spinner = _useState2[0],\n      setSpinner = _useState2[1];\n\n  useEffect(function () {\n    setEmail(_objectSpread({}, email, {\n      to: to\n    }));\n  }, [to]);\n\n  var sendEmail =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var loading, res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              loading = true;\n              console.log(loading);\n              _context.next = 5;\n              return axios({\n                method: \"post\",\n                data: email,\n                url: \"\".concat(globalVars.serverURL, \"/emails/send\"),\n                responseType: \"json\"\n              });\n\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.data;\n\n            case 8:\n              data = _context.sent;\n\n              if (data.msg === \"Success\") {\n                alert(\"Your email has been succesfully sent.\");\n                setEmail(initEmail); // if email is sending from clients page\n\n                toggleIsEmailCreated();\n                unCheckAll ? unCheckAll() : null;\n                loading = false;\n                console.log(loading);\n              } else {\n                alert(\"Something went wrong!\");\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sendEmail(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onChange = function onChange(e) {\n    setEmail(_objectSpread({}, email, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return isEmailCreated && to.length > 0 ? __jsx(\"form\", {\n    onSubmit: sendEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"email-to\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"To\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"email-to\",\n    name: \"to\",\n    value: email.to,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"email-subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Subject\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"email-to\",\n    name: \"subject\",\n    value: email.subject,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"email-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Message\"), spinner ? __jsx(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }) : null, __jsx(\"textarea\", {\n    name: \"message\",\n    onChange: onChange,\n    value: email.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: toggleIsEmailCreated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Cancel\"), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Send\")) : null;\n};\n\nexport default EmailForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/EmailForm.tsx"],"names":["axios","globalVars","useState","useEffect","CircularProgress","EmailForm","to","isEmailCreated","toggleIsEmailCreated","unCheckAll","initEmail","subject","message","email","setEmail","spinner","setSpinner","sendEmail","e","preventDefault","loading","console","log","method","data","url","serverURL","responseType","res","msg","alert","onChange","target","name","value","length"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport { useState, useEffect } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst EmailForm = ({ to, isEmailCreated, toggleIsEmailCreated, unCheckAll }: any) => {\n  const initEmail = { to, subject: \"\", message: \"\" };\n  const [email, setEmail] = useState(initEmail);\n  const [spinner, setSpinner] = useState(false); \n\n  useEffect(() => {\n    setEmail({ ...email, to: to });\n  }, [to]);\n\n  const sendEmail = async e => {\n    e.preventDefault();\n    let loading = true;\n    console.log(loading);\n    const res = await axios({\n      method: \"post\",\n      data: email,\n      url: `${globalVars.serverURL}/emails/send`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    if (data.msg === \"Success\") {\n      alert(\"Your email has been succesfully sent.\");\n      setEmail(initEmail);\n      // if email is sending from clients page\n      toggleIsEmailCreated();\n      unCheckAll ? unCheckAll() : null;\n      loading = false;\n      console.log(loading);\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const onChange = e => {\n    setEmail({ ...email, [e.target.name]: e.target.value });\n  };\n\n  return isEmailCreated && to.length > 0 ? (\n    <form onSubmit={sendEmail}>\n      <label htmlFor=\"email-to\">To</label>\n      <input type=\"text\" id=\"email-to\" name=\"to\" value={email.to} disabled />\n      <label htmlFor=\"email-subject\">Subject</label>\n      <input\n        type=\"text\"\n        id=\"email-to\"\n        name=\"subject\"\n        value={email.subject}\n        onChange={onChange}\n      />\n      <label htmlFor=\"email-message\">Message</label>\n      {spinner ? <CircularProgress /> : null}\n      <textarea name=\"message\" onChange={onChange} value={email.message} />\n      <button onClick={toggleIsEmailCreated}>Cancel</button>\n      <button type=\"submit\">Send</button>\n    </form>\n  ) : null;\n};\n\nexport default EmailForm;\n"]},"metadata":{},"sourceType":"module"}