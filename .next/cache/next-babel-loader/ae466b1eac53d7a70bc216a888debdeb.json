{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nclass stringMethods {\n  constructor(_text) {\n    _defineProperty(this, \"text\", void 0);\n\n    _defineProperty(this, \"splitCamelString\", () => {\n      this.text = _Array$from(this.text).map(e => e === e.toUpperCase() ? e = `%-%${e.toLowerCase()}` : e).join(\"\").replace(/%-%/g, \" \");\n      return this;\n    });\n\n    _defineProperty(this, \"firstCharUpperCase\", () => {\n      let str = this.text.toLowerCase();\n      const firstCharString = str.substr(0, 1).toUpperCase();\n      const restString = str.substr(1);\n      this.text = firstCharString + restString;\n      return this;\n    });\n\n    _defineProperty(this, \"removeSlash\", () => {\n      this.text = this.text.replace(\"/\", \"\");\n      return this;\n    });\n\n    _defineProperty(this, \"addStringToEnd\", text => {\n      this.text = this.text.concat(` ${text}`);\n      return this;\n    });\n\n    this.text = _text;\n  }\n\n}\n\nexport default stringMethods;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/functions/stringMethods.tsx"],"names":["stringMethods","constructor","text","map","e","toUpperCase","toLowerCase","join","replace","str","firstCharString","substr","restString","concat"],"mappings":";;;AAAA,MAAMA,aAAN,CAAoB;AAGlBC,EAAAA,WAAW,CAACC,KAAD,EAAe;AAAA;;AAAA,8CAIP,MAAM;AACvB,WAAKA,IAAL,GAAY,YAAW,KAAKA,IAAhB,EACTC,GADS,CACLC,CAAC,IAAKA,CAAC,KAAKA,CAAC,CAACC,WAAF,EAAN,GAAyBD,CAAC,GAAI,MAAKA,CAAC,CAACE,WAAF,EAAgB,EAAnD,GAAwDF,CADzD,EAETG,IAFS,CAEJ,EAFI,EAGTC,OAHS,CAGD,MAHC,EAGO,GAHP,CAAZ;AAKA,aAAO,IAAP;AACD,KAXyB;;AAAA,gDAaL,MAAM;AACzB,UAAIC,GAAG,GAAG,KAAKP,IAAL,CAAUI,WAAV,EAAV;AACA,YAAMI,eAAe,GAAGD,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAc,CAAd,EAAiBN,WAAjB,EAAxB;AACA,YAAMO,UAAU,GAAGH,GAAG,CAACE,MAAJ,CAAW,CAAX,CAAnB;AACA,WAAKT,IAAL,GAAYQ,eAAe,GAAGE,UAA9B;AACA,aAAO,IAAP;AACD,KAnByB;;AAAA,yCAqBZ,MAAM;AAClB,WAAKV,IAAL,GAAY,KAAKA,IAAL,CAAUM,OAAV,CAAkB,GAAlB,EAAuB,EAAvB,CAAZ;AACA,aAAO,IAAP;AACD,KAxByB;;AAAA,4CA0BRN,IAAD,IAAkB;AACjC,WAAKA,IAAL,GAAY,KAAKA,IAAL,CAAUW,MAAV,CAAkB,IAAGX,IAAK,EAA1B,CAAZ;AACA,aAAO,IAAP;AACD,KA7ByB;;AACxB,SAAKA,IAAL,GAAYA,KAAZ;AACD;;AALiB;;AAmCpB,eAAeF,aAAf","sourcesContent":["class stringMethods {\n  text: string;\n\n  constructor(text: string) {\n    this.text = text;\n  }\n\n  splitCamelString = () => {\n    this.text = Array.from(this.text)\n      .map(e => (e === e.toUpperCase() ? (e = `%-%${e.toLowerCase()}`) : e))\n      .join(\"\")\n      .replace(/%-%/g, \" \");\n\n    return this;\n  };\n\n  firstCharUpperCase = () => {\n    let str = this.text.toLowerCase();\n    const firstCharString = str.substr(0, 1).toUpperCase();\n    const restString = str.substr(1);\n    this.text = firstCharString + restString;\n    return this;\n  };\n\n  removeSlash = () => {\n    this.text = this.text.replace(\"/\", \"\");\n    return this;\n  };\n\n  addStringToEnd = (text: string) => {\n    this.text = this.text.concat(` ${text}`);\n    return this;\n  };\n}\n\nexport default stringMethods;\n"]},"metadata":{},"sourceType":"module"}