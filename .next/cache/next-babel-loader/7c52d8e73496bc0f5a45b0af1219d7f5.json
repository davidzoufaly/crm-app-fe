{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DefaultFields from \"../components/settings/DefaultFields\";\nimport CustomFields from \"../components/settings/customFields/CustomFields\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport EmailSettings from \"../components/settings/EmailSettings\";\nimport WebForm from \"../components/settings/webform/WebForm\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Settings = ({\n  dataFields,\n  dataEmailSettings\n}) => {\n  const router = useRouter();\n  const {\n    0: fields,\n    1: setField\n  } = useState(dataFields);\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n\n  const refreshList = async () => {\n    //get data from DB after change\n    const res = await axios({\n      method: \"get\",\n      url: `${globalVars.serverURL}/fields/`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    setField(data);\n  };\n\n  useEffect(() => {\n    //title from url\n    const title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title; //componendDidMount effect\n\n    setInitialized(true);\n  }, [router]);\n  const h1 = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString();\n  return !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(Typography, {\n    variant: \"h3\",\n    component: \"h1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, h1), __jsx(DefaultFields, {\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(CustomFields, {\n    fields: fields,\n    refreshList: refreshList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(EmailSettings, {\n    data: dataEmailSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(WebForm, {\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nSettings.getInitialProps = async () => {\n  const resFields = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const dataFields = await resFields.data;\n  const resEmailSettings = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/emails/email-settings`,\n    responseType: \"json\"\n  });\n  const dataEmailSettings = await resEmailSettings.data;\n  return {\n    dataFields,\n    dataEmailSettings\n  };\n};\n\nexport default Settings;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings.tsx"],"names":["Header","useRouter","useState","useEffect","axios","DefaultFields","CustomFields","LoadingSpinner","EmailSettings","WebForm","globalVars","stringMethods","Typography","Settings","dataFields","dataEmailSettings","router","fields","setField","initialized","setInitialized","refreshList","res","method","url","serverURL","responseType","data","title","pathname","removeSlash","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","h1","getInitialProps","resFields","resEmailSettings"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,YAAP,MAAyB,kDAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA4C;AAC3D,QAAMC,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAM;AAAA,OAACgB,MAAD;AAAA,OAASC;AAAT,MAAqBhB,QAAQ,CAACY,UAAD,CAAnC;AACA,QAAM;AAAA,OAACK,WAAD;AAAA,OAAcC;AAAd,MAAgClB,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMmB,WAAW,GAAG,YAAY;AAC9B;AACA,UAAMC,GAAG,GAAG,MAAMlB,KAAK,CAAC;AACtBmB,MAAAA,MAAM,EAAE,KADc;AAEtBC,MAAAA,GAAG,EAAG,GAAEd,UAAU,CAACe,SAAU,UAFP;AAGtBC,MAAAA,YAAY,EAAE;AAHQ,KAAD,CAAvB;AAKA,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACK,IAAvB;AACAT,IAAAA,QAAQ,CAACS,IAAD,CAAR;AACD,GATD;;AAWAxB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMyB,KAAK,GAAG,IAAIjB,aAAJ,CAAkBK,MAAM,CAACa,QAAzB,EACXC,WADW,GAEXC,kBAFW,GAGXC,cAHW,CAGItB,UAAU,CAACuB,YAHf,EAIXC,SAJW,EAAd;AAMAC,IAAAA,QAAQ,CAACP,KAAT,GAAiBA,KAAjB,CARc,CAUd;;AACAR,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAZQ,EAYN,CAACJ,MAAD,CAZM,CAAT;AAcA,QAAMoB,EAAE,GAAG,IAAIzB,aAAJ,CAAkBK,MAAM,CAACa,QAAzB,EACRC,WADQ,GAERC,kBAFQ,GAGRG,SAHQ,EAAX;AAKA,SAAO,CAACf,WAAD,GACL,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,EADH,CAFF,EAKE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEnB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,MAAtB;AAA8B,IAAA,WAAW,EAAEI,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,MAAC,aAAD;AAAe,IAAA,IAAI,EAAEN,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,MAAC,OAAD;AAAS,IAAA,MAAM,EAAEE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAHF;AAcD,CAjDD;;AAmDAJ,QAAQ,CAACwB,eAAT,GAA2B,YAAY;AACrC,QAAMC,SAAS,GAAG,MAAMlC,KAAK,CAAC;AAC5BmB,IAAAA,MAAM,EAAE,KADoB;AAE5BC,IAAAA,GAAG,EAAG,GAAEd,UAAU,CAACe,SAAU,SAFD;AAG5BC,IAAAA,YAAY,EAAE;AAHc,GAAD,CAA7B;AAKA,QAAMZ,UAAU,GAAG,MAAMwB,SAAS,CAACX,IAAnC;AAEA,QAAMY,gBAAgB,GAAG,MAAMnC,KAAK,CAAC;AACnCmB,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,GAAG,EAAG,GAAEd,UAAU,CAACe,SAAU,wBAFM;AAGnCC,IAAAA,YAAY,EAAE;AAHqB,GAAD,CAApC;AAMA,QAAMX,iBAAiB,GAAG,MAAMwB,gBAAgB,CAACZ,IAAjD;AAEA,SAAO;AAAEb,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAP;AACD,CAjBD;;AAmBA,eAAeF,QAAf","sourcesContent":["import Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../components/UserContext\";\nimport DefaultFields from \"../components/settings/DefaultFields\";\nimport CustomFields from \"../components/settings/customFields/CustomFields\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport EmailSettings from \"../components/settings/EmailSettings\";\nimport WebForm from \"../components/settings/webform/WebForm\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Settings = ({ dataFields, dataEmailSettings }: any) => {\n  const router = useRouter();\n  const [fields, setField] = useState(dataFields);\n  const [initialized, setInitialized] = useState(false);\n\n  const refreshList = async () => {\n    //get data from DB after change\n    const res = await axios({\n      method: \"get\",\n      url: `${globalVars.serverURL}/fields/`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    setField(data);\n  };\n\n  useEffect(() => {\n    //title from url\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n\n    document.title = title;\n\n    //componendDidMount effect\n    setInitialized(true);\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  return !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n        {h1}\n      </Typography>\n      <DefaultFields fields={fields} />\n      <CustomFields fields={fields} refreshList={refreshList} />\n      <EmailSettings data={dataEmailSettings} />\n      <WebForm fields={fields} />\n    </div>\n  );\n};\n\nSettings.getInitialProps = async () => {\n  const resFields = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const dataFields = await resFields.data;\n\n  const resEmailSettings = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/emails/email-settings`,\n    responseType: \"json\"\n  });\n\n  const dataEmailSettings = await resEmailSettings.data;\n\n  return { dataFields, dataEmailSettings };\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}