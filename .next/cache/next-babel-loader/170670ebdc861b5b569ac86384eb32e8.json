{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormList.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport languages from \"../../../library/languages\";\nimport { Typography, Box, ListItem, List, IconButton } from \"@material-ui/core\";\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { useEffect } from \"react\";\n\nconst WebFormList = ({\n  state,\n  removeFromList,\n  dispatch\n}) => {\n  const list = [];\n  state.map(({\n    _id,\n    fieldName,\n    fieldInForm,\n    fieldFormVisible,\n    fieldOptions,\n    fieldType,\n    order\n  }) => {\n    const strFormVisible = fieldFormVisible ? ` - ${languages.en.visibleInForm}` : null;\n    const strFormNotVisible1 = !fieldFormVisible ? fieldType === \"select\" ? ` - ${languages.en.hiddenInForm}` : null : null;\n    const strFormNotVisible2 = !fieldFormVisible ? fieldType === \"select\" ? fieldOptions.map(e => e.preselected ? e.value : null).join(\"\") : null : null;\n    const strFormNotVisible3 = !fieldFormVisible ? fieldType === \"select\" ? languages.en.asPreselected : null : null;\n    languages.en.asPreselected;\n    fieldInForm ? list[order] = __jsx(ListItem, {\n      key: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      id: fieldName,\n      onClick: () => removeFromList(dispatch, event),\n      color: \"secondary\",\n      style: {\n        marginRight: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(HighlightOffIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, fieldName), strFormVisible, strFormNotVisible1, \" \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, strFormNotVisible2), \" \", strFormNotVisible3)) : [];\n  });\n  useEffect(() => {\n    console.log(list);\n  });\n  return __jsx(Box, {\n    mb: \"2rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"h3\",\n    variant: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, languages.en.selectedFields), state.some(e => e.fieldInForm) ? __jsx(List, {\n    dense: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, list) : __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, languages.en.noFieldsSelected));\n};\n\nexport default WebFormList;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormList.tsx"],"names":["languages","Typography","Box","ListItem","List","IconButton","HighlightOffIcon","useEffect","WebFormList","state","removeFromList","dispatch","list","map","_id","fieldName","fieldInForm","fieldFormVisible","fieldOptions","fieldType","order","strFormVisible","en","visibleInForm","strFormNotVisible1","hiddenInForm","strFormNotVisible2","e","preselected","value","join","strFormNotVisible3","asPreselected","event","marginRight","console","log","selectedFields","some","noFieldsSelected"],"mappings":"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","sourcesContent":["import languages from \"../../../library/languages\";\nimport { Typography, Box, ListItem, List, IconButton } from \"@material-ui/core\";\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { useEffect } from \"react\";\n\nconst WebFormList = ({ state, removeFromList, dispatch }) => {\n  const list = [];\n  state.map(\n    ({\n      _id,\n      fieldName,\n      fieldInForm,\n      fieldFormVisible,\n      fieldOptions,\n      fieldType,\n      order\n    }) => {\n      const strFormVisible = fieldFormVisible\n        ? ` - ${languages.en.visibleInForm}`\n        : null;\n\n      const strFormNotVisible1 = !fieldFormVisible\n        ? fieldType === \"select\"\n          ? ` - ${languages.en.hiddenInForm}`\n          : null\n        : null;\n\n      const strFormNotVisible2 = !fieldFormVisible\n        ? fieldType === \"select\"\n          ? fieldOptions.map(e => (e.preselected ? e.value : null)).join(\"\")\n          : null\n        : null;\n\n      const strFormNotVisible3 = !fieldFormVisible\n        ? fieldType === \"select\"\n          ? languages.en.asPreselected\n          : null\n        : null;\n\n      languages.en.asPreselected;\n\n      fieldInForm\n        ? (list[order] = (\n            <ListItem key={_id}>\n              <Typography>\n              <IconButton id={fieldName} onClick={() => removeFromList(dispatch, event)} color=\"secondary\" style={{marginRight: \"1rem\"}}>\n                <HighlightOffIcon/>\n              </IconButton>\n              <strong>{fieldName}</strong>\n              {strFormVisible}\n              {strFormNotVisible1} <strong>{strFormNotVisible2}</strong>{\" \"}\n              {strFormNotVisible3}\n              </Typography>\n            </ListItem>\n          ))\n        : [];\n    }\n  );\n\n  useEffect(() => {\n    console.log(list);\n  })\n\n  return (\n    <Box mb=\"2rem\">\n      <Typography component=\"h3\" variant=\"h5\" gutterBottom>{languages.en.selectedFields}</Typography>\n      {state.some(e => e.fieldInForm) ? <List dense>{list}</List> : <Typography>{languages.en.noFieldsSelected}</Typography>}\n    </Box>\n  );\n};\n\nexport default WebFormList;\n"]},"metadata":{},"sourceType":"module"}