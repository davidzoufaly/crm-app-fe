{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/_app.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport CountContext from \"../components/CountContext\";\nimport UserContext from \"../components/UserContext\";\nimport globalVars from \"../library/globalVariables\";\nimport theme from \"../src/theme\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nexport default class MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      counters: {\n        clientCounter: \"\",\n        emailsCounter: \"\",\n        fieldCounter: \"\"\n      },\n      user: {\n        userkey: \"\",\n        signedIn: false\n      }\n    });\n\n    _defineProperty(this, \"getCounts\", async () => {\n      const resClientCount = await axios({\n        method: \"GET\",\n        url: `${globalVars.serverURL}/clients/count`,\n        params: {\n          key: this.state.user.userkey\n        },\n        responseType: \"json\"\n      });\n      const clientCounter = await resClientCount.data;\n      const resFieldsData = await axios({\n        method: \"GET\",\n        url: `${globalVars.serverURL}/fields/count`,\n        params: {\n          key: this.state.user.userkey\n        },\n        responseType: \"json\"\n      });\n      const fieldCounter = await resFieldsData.data;\n      const resEmailsCount = await axios({\n        method: \"GET\",\n        url: `${globalVars.serverURL}/emails/count`,\n        params: {\n          key: this.state.user.userkey\n        },\n        responseType: \"json\"\n      });\n      const emailsCounter = await resEmailsCount.data;\n      this.setState(_objectSpread({}, this.state, {\n        counters: {\n          clientCounter,\n          fieldCounter,\n          emailsCounter\n        }\n      }));\n    });\n\n    _defineProperty(this, \"setUser\", userkey => {\n      this.setState(_objectSpread({}, this.state, {\n        user: _objectSpread({}, this.state.user, {\n          userkey,\n          signedIn: true\n        })\n      }));\n      this.getCounts();\n      sessionStorage.setItem(\"userkey\", this.state.user.userkey);\n      sessionStorage.setItem(\"signedIn\", this.state.user.signedIn.toString());\n      Router.query;\n      Router.push({\n        pathname: '/dashboard',\n        query: {\n          Api_KEY: this.state.user.userkey\n        }\n      });\n    });\n\n    _defineProperty(this, \"checkUser\", () => {\n      sessionStorage.getItem(\"signedIn\") === \"false\" ? Router.push(\"/\") : this.setState(_objectSpread({}, this.state, {\n        user: _objectSpread({}, this.state.user, {\n          userkey: sessionStorage.getItem(\"userkey\"),\n          signedIn: true\n        })\n      }));\n    });\n\n    _defineProperty(this, \"logoutUser\", () => {\n      this.setState(_objectSpread({}, this.state, {\n        user: _objectSpread({}, this.state.user, {\n          userkey: \"\",\n          signedIn: false\n        })\n      }), () => {\n        sessionStorage.setItem(\"userkey\", this.state.user.userkey);\n        sessionStorage.setItem(\"signedIn\", this.state.user.signedIn.toString());\n      });\n      Router.push(\"/\");\n    });\n  }\n\n  componentDidMount() {\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n\n    if (jssStyles) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.user);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"CRM APP\")), __jsx(UserContext.Provider, {\n      value: {\n        setUser: this.setUser,\n        logoutUser: this.logoutUser,\n        checkUser: this.checkUser,\n        user: this.state.user\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(CountContext.Provider, {\n      value: this.state.counters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/_app.tsx"],"names":["React","App","Head","Router","axios","CountContext","UserContext","globalVars","theme","ThemeProvider","CssBaseline","MyApp","counters","clientCounter","emailsCounter","fieldCounter","user","userkey","signedIn","resClientCount","method","url","serverURL","params","key","state","responseType","data","resFieldsData","resEmailsCount","setState","getCounts","sessionStorage","setItem","toString","query","push","pathname","Api_KEY","getItem","componentDidMount","jssStyles","document","querySelector","parentNode","removeChild","componentDidUpdate","console","log","render","Component","pageProps","props","setUser","logoutUser","checkUser"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport CountContext from \"../components/CountContext\";\nimport UserContext from \"../components/UserContext\";\nimport globalVars from \"../library/globalVariables\";\nimport theme from \"../src/theme\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nexport default class MyApp extends App {\n  state = {\n    counters: { clientCounter: \"\", emailsCounter: \"\", fieldCounter: \"\" },\n    user: {\n      userkey: \"\",\n      signedIn: false\n    }\n  };\n\n  componentDidMount() {\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n    if (jssStyles) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  getCounts = async () => {\n    const resClientCount = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/clients/count`,\n      params: { key: this.state.user.userkey },\n      responseType: \"json\"\n    });\n    const clientCounter = await resClientCount.data;\n\n    const resFieldsData = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/fields/count`,\n      params: { key: this.state.user.userkey },\n      responseType: \"json\"\n    });\n    const fieldCounter = await resFieldsData.data;\n\n    const resEmailsCount = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/emails/count`,\n      params: { key: this.state.user.userkey },\n      responseType: \"json\"\n    });\n    const emailsCounter = await resEmailsCount.data;\n\n    this.setState({\n      ...this.state,\n      counters: { clientCounter, fieldCounter, emailsCounter }\n    });\n  };\n\n  setUser = userkey => {\n    this.setState({\n      ...this.state,\n      user: { ...this.state.user, userkey, signedIn: true }\n    });\n    this.getCounts();\n    sessionStorage.setItem(\"userkey\", this.state.user.userkey);\n    sessionStorage.setItem(\"signedIn\", this.state.user.signedIn.toString());\n    Router.query\n    Router.push({\n        pathname: '/dashboard',\n        query: { Api_KEY: this.state.user.userkey }\n    });\n  };\n\n  checkUser = () => {\n    sessionStorage.getItem(\"signedIn\") === \"false\"\n      ? Router.push(\"/\")\n      : this.setState({\n          ...this.state,\n          user: {\n            ...this.state.user,\n            userkey: sessionStorage.getItem(\"userkey\"),\n            signedIn: true\n          }\n        });\n  };\n\n  logoutUser = () => {\n    this.setState(\n      {\n        ...this.state,\n        user: { ...this.state.user, userkey: \"\", signedIn: false }\n      },\n      () => {\n        sessionStorage.setItem(\"userkey\", this.state.user.userkey);\n        sessionStorage.setItem(\"signedIn\", this.state.user.signedIn.toString());\n      }\n    );\n    Router.push(\"/\");\n  };\n\n  componentDidUpdate() {\n    console.log(this.state.user);\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <Head>\n          <title>CRM APP</title>\n        </Head>\n        <UserContext.Provider\n          value={{\n            setUser: this.setUser,\n            logoutUser: this.logoutUser,\n            checkUser: this.checkUser,\n            user: this.state.user\n          }}\n        >\n          <CountContext.Provider value={this.state.counters}>\n            <ThemeProvider theme={theme}>\n              <CssBaseline />\n              <Component {...pageProps} />\n            </ThemeProvider>\n          </CountContext.Provider>\n        </UserContext.Provider>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}