{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport DefaultClientFields from \"../components/DefaultClientFields\";\n\nconst Settings = ({\n  data\n}) => {\n  const router = useRouter();\n  const {\n    0: fields,\n    1: setField\n  } = useState([]);\n  useEffect(() => {\n    setField(data);\n  });\n  useEffect(() => {\n    const title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n  }, [router]);\n\n  if (fields.length === 0) {\n    return \"Loading...\";\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, document.title), __jsx(DefaultClientFields, {\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nSettings.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return {\n    data\n  };\n};\n\nexport default Settings;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings.tsx"],"names":["Header","useRouter","stringMethods","globalVars","axios","useState","useEffect","DefaultClientFields","Settings","data","router","fields","setField","title","pathname","removeSlash","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","length","getInitialProps","res","method","url","serverURL","responseType"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AACjC,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAAA,OAACU,MAAD;AAAA,OAASC;AAAT,MAAqBP,QAAQ,CAAC,EAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACH,IAAD,CAAR;AACD,GAFQ,CAAT;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,KAAK,GAAG,IAAIX,aAAJ,CAAkBQ,MAAM,CAACI,QAAzB,EAAmCC,WAAnC,GAAiDC,kBAAjD,GAAsEC,cAAtE,CAAqFd,UAAU,CAACe,YAAhG,EAA8GC,SAA9G,EAAd;AAEAC,IAAAA,QAAQ,CAACP,KAAT,GAAiBA,KAAjB;AACD,GAJQ,EAIN,CAACH,MAAD,CAJM,CAAT;;AAMA,MAAIC,MAAM,CAACU,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WAAO,YAAP;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,QAAQ,CAACP,KAAd,CAFF,EAGE,MAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEF,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAxBD;;AA0BAH,QAAQ,CAACc,eAAT,GAA2B,YAAY;AACrC,QAAMC,GAAG,GAAG,MAAMnB,KAAK,CAAC;AACtBoB,IAAAA,MAAM,EAAE,KADc;AAEtBC,IAAAA,GAAG,EAAG,GAAEtB,UAAU,CAACuB,SAAU,SAFP;AAGtBC,IAAAA,YAAY,EAAE;AAHQ,GAAD,CAAvB;AAKA,QAAMlB,IAAI,GAAG,MAAMc,GAAG,CAACd,IAAvB;AACA,SAAO;AAACA,IAAAA;AAAD,GAAP;AACD,CARD;;AAUA,eAAeD,QAAf","sourcesContent":["import Header from \"../components/Header\";\nimport { useRouter } from \"next/router\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport DefaultClientFields from \"../components/DefaultClientFields\";\n\nconst Settings = ({data} : any) => {\n  const router = useRouter();\n  const [fields, setField] = useState([]);\n\n  useEffect(() =>Â {\n    setField(data);\n  })\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n\n    document.title = title\n  }, [router]);\n\n  if (fields.length === 0) {\n    return \"Loading...\"\n  }\n  return (\n    <div>\n      <Header />\n      <h1>{document.title}</h1>\n      <DefaultClientFields fields={fields} />\n    </div>\n  );\n};\n\nSettings.getInitialProps = async () => {\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  })\n  const data = await res.data;\n  return {data};\n}\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}