{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/EmailForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport { useState, useEffect } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nvar EmailForm = function EmailForm(_ref) {\n  var to = _ref.to,\n      isEmailCreated = _ref.isEmailCreated,\n      toggleIsEmailCreated = _ref.toggleIsEmailCreated,\n      unCheckAll = _ref.unCheckAll;\n  var initEmail = {\n    to: to,\n    subject: \"\",\n    message: \"\"\n  };\n\n  var _useState = useState(initEmail),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(false),\n      spinner = _useState2[0],\n      setSpinner = _useState2[1];\n\n  useEffect(function () {\n    setEmail(_objectSpread({}, email, {\n      to: to\n    }));\n  }, [to]);\n\n  var sendEmail =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setSpinner(true);\n              _context.next = 4;\n              return axios({\n                method: \"post\",\n                data: email,\n                url: \"\".concat(globalVars.serverURL, \"/emails/send\"),\n                responseType: \"json\"\n              });\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.data;\n\n            case 7:\n              data = _context.sent;\n              data ? setSpinner(false) : null;\n\n              if (data.msg === \"Success\") {\n                alert(\"Your email has been succesfully sent.\");\n                setEmail(initEmail); // if email is sending from clients page\n\n                toggleIsEmailCreated();\n                unCheckAll ? unCheckAll() : null;\n              } else {\n                alert(\"Something went wrong!\");\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sendEmail(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onChange = function onChange(e) {\n    setEmail(_objectSpread({}, email, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return isEmailCreated && to.length > 0 ? __jsx(\"form\", {\n    onSubmit: sendEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"email-to\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"To\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"email-to\",\n    name: \"to\",\n    value: email.to,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"email-subject\",\n    disabled: spinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Subject\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"email-to\",\n    name: \"subject\",\n    value: email.subject,\n    onChange: onChange,\n    disabled: spinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"email-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Message\"), spinner ? __jsx(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }) : null, __jsx(\"textarea\", {\n    name: \"message\",\n    onChange: onChange,\n    value: email.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: toggleIsEmailCreated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Cancel\"), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Send\")) : null;\n};\n\nexport default EmailForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/EmailForm.tsx"],"names":["axios","globalVars","useState","useEffect","CircularProgress","EmailForm","to","isEmailCreated","toggleIsEmailCreated","unCheckAll","initEmail","subject","message","email","setEmail","spinner","setSpinner","sendEmail","e","preventDefault","method","data","url","serverURL","responseType","res","msg","alert","onChange","target","name","value","length"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport { useState, useEffect } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst EmailForm = ({\n  to,\n  isEmailCreated,\n  toggleIsEmailCreated,\n  unCheckAll\n}: any) => {\n  const initEmail = { to, subject: \"\", message: \"\" };\n  const [email, setEmail] = useState(initEmail);\n  const [spinner, setSpinner] = useState(false);\n\n  useEffect(() => {\n    setEmail({ ...email, to: to });\n  }, [to]);\n\n  const sendEmail = async e => {\n    e.preventDefault();\n    setSpinner(true);\n    const res = await axios({\n      method: \"post\",\n      data: email,\n      url: `${globalVars.serverURL}/emails/send`,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    data ? setSpinner(false) : null;\n    if (data.msg === \"Success\") {\n      alert(\"Your email has been succesfully sent.\");\n      setEmail(initEmail);\n      // if email is sending from clients page\n      toggleIsEmailCreated();\n      unCheckAll ? unCheckAll() : null;\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const onChange = e => {\n    setEmail({ ...email, [e.target.name]: e.target.value });\n  };\n\n  return isEmailCreated && to.length > 0 ? (\n    <form onSubmit={sendEmail}>\n      <label htmlFor=\"email-to\">To</label>\n      <input type=\"text\" id=\"email-to\" name=\"to\" value={email.to} disabled />\n      <label htmlFor=\"email-subject\" disabled={spinner}>Subject</label>\n      <input\n        type=\"text\"\n        id=\"email-to\"\n        name=\"subject\"\n        value={email.subject}\n        onChange={onChange}\n        disabled={spinner}\n      />\n      <label htmlFor=\"email-message\">Message</label>\n      {spinner ? <CircularProgress /> : null}\n      <textarea name=\"message\" onChange={onChange} value={email.message} />\n      <button onClick={toggleIsEmailCreated}>Cancel</button>\n      <button type=\"submit\">Send</button>\n    </form>\n  ) : null;\n};\n\nexport default EmailForm;\n"]},"metadata":{},"sourceType":"module"}