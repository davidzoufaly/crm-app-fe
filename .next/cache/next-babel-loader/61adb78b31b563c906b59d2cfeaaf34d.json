{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormOptionSelect.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport WebFormOptions from \"./WebFormOptions\";\n\nconst webFormOptionSelect = ({\n  optionSelect,\n  webFields,\n  addVisibleSelect\n}) => {\n  // vem vybrany select\n  // nabidni moznost jestli pridat do formu -> ano -> pridat do listu se stringem -> do stavu\n  // ne -> zobraz druhy select s options + string -> vloz do listu se stringem -> do stavu\n  const {\n    0: thisField,\n    1: setThisField\n  } = useState();\n\n  const onClick = e => {\n    setThisField(webFields.map(el => el.fieldName === e.target.id));\n  };\n\n  const insertIntoForm = webFields.map(field => optionSelect === field.fieldName ? __jsx(\"div\", {\n    key: field.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Should be \", __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, field.fieldName), \" visible in form?\"), __jsx(\"button\", {\n    id: field.fieldName,\n    onClick: addVisibleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"YES\"), __jsx(\"button\", {\n    id: field.fieldName,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"NO\")) : null);\n  return __jsx(React.Fragment, null, insertIntoForm, __jsx(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(WebFormOptions, {\n    field: thisField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n};\n\nexport default webFormOptionSelect;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormOptionSelect.tsx"],"names":["useState","WebFormOptions","webFormOptionSelect","optionSelect","webFields","addVisibleSelect","thisField","setThisField","onClick","e","map","el","fieldName","target","id","insertIntoForm","field"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,SAAhB;AAA2BC,EAAAA;AAA3B,CAAD,KAAmD;AAC7E;AACA;AACA;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,EAA1C;;AAEA,QAAMQ,OAAO,GAAIC,CAAD,IAAO;AACrBF,IAAAA,YAAY,CAACH,SAAS,CAACM,GAAV,CAAcC,EAAE,IAAIA,EAAE,CAACC,SAAH,KAAiBH,CAAC,CAACI,MAAF,CAASC,EAA9C,CAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAGX,SAAS,CAACM,GAAV,CAAcM,KAAK,IACxCb,YAAY,KAAKa,KAAK,CAACJ,SAAvB,GACE;AAAK,IAAA,GAAG,EAAEI,KAAK,CAACF,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASE,KAAK,CAACJ,SAAf,CADZ,sBADF,EAIE;AAAQ,IAAA,EAAE,EAAEI,KAAK,CAACJ,SAAlB;AAA6B,IAAA,OAAO,EAAEP,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAOE;AAAQ,IAAA,EAAE,EAAEW,KAAK,CAACJ,SAAlB;AAA6B,IAAA,OAAO,EAAEJ,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADF,GAYI,IAbiB,CAAvB;AAgBA,SACE,4BACGO,cADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAET,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR,CAFF,CADF;AAMD,CAhCD;;AAkCA,eAAeJ,mBAAf","sourcesContent":["import { useState } from \"react\";\nimport WebFormOptions from \"./WebFormOptions\"\n\nconst webFormOptionSelect = ({ optionSelect, webFields, addVisibleSelect }) => {\n  // vem vybrany select\n  // nabidni moznost jestli pridat do formu -> ano -> pridat do listu se stringem -> do stavu\n  // ne -> zobraz druhy select s options + string -> vloz do listu se stringem -> do stavu\n  const [thisField, setThisField] = useState()\n\n  const onClick = (e) => {\n    setThisField(webFields.map(el => el.fieldName === e.target.id))\n  }\n\n  const insertIntoForm = webFields.map(field =>\n    optionSelect === field.fieldName ? (\n      <div key={field.id}>\n        <p>\n          Should be <strong>{field.fieldName}</strong> visible in form?\n        </p>\n        <button id={field.fieldName} onClick={addVisibleSelect}>\n          YES\n        </button>\n        <button id={field.fieldName} onClick={onClick}>\n          NO\n        </button>\n      </div>\n    ) : null\n  );\n\n  return (\n    <>\n      {insertIntoForm}\n      <select><WebFormOptions field={thisField} /></select>\n    </>\n  );\n};\n\nexport default webFormOptionSelect;\n"]},"metadata":{},"sourceType":"module"}