{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport ShowRecordsNumber from \"../components/ShowRecordsNumber\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport UserContext from \"../components/UserContext\";\nimport CountContext from \"../components/CountContext\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport languages from \"../library/languages\";\n\nconst Dashboard = ({\n  lastCampaign,\n  clientsLastWeek,\n  clientCounter,\n  fieldCounter,\n  emailsCounter\n}) => {\n  const router = useRouter();\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n  const user = useContext(UserContext);\n  const counter = useContext(CountContext);\n  useEffect(() => {\n    const title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n    counter.setCounters({\n      clientCounter,\n      fieldCounter,\n      emailsCounter\n    });\n  }, [router]);\n  const h1 = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString();\n  const campaignStr = lastCampaign.length > 0 ? `${languages.en.last} ${languages.en.sent} ${lastCampaign[0].date} ${languages.en.to.toLowerCase()} ${lastCampaign[0].to.length} ${lastCampaign[0].to.length > 1 ? languages.en.clients : languages.en.client}` : \"\";\n  const lastWeekStr = `${clientsLastWeek > 0 ? \"+\" : \"\"} ${clientsLastWeek} ${languages.en.lastWeek}`;\n  return !initialized && !user.user.signedIn ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, h1), __jsx(ShowRecordsNumber, {\n    data: clientCounter,\n    string: languages.en.clientsSaved,\n    buttonString: languages.en.clients,\n    subData: lastWeekStr,\n    link: \"/clients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(ShowRecordsNumber, {\n    data: fieldCounter.custom,\n    string: languages.en.customClientFields,\n    buttonString: languages.en.customClientFields,\n    subData: `${fieldCounter.permanent + fieldCounter.custom} ${languages.en.total}`,\n    link: \"/settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(ShowRecordsNumber, {\n    data: emailsCounter,\n    string: languages.en.emailsSent,\n    buttonString: languages.en.emails,\n    subData: campaignStr,\n    link: \"/emails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nDashboard.getInitialProps = async context => {\n  const resLastCampaign = await axios({\n    method: \"GET\",\n    params: {\n      key: context.query.Api_KEY\n    },\n    url: `${globalVars.serverURL}/emails/last`,\n    responseType: \"json\"\n  });\n  const lastCampaign = await resLastCampaign.data;\n  const resLastWeekNumber = await axios({\n    method: \"GET\",\n    params: {\n      key: context.query.Api_KEY\n    },\n    url: `${globalVars.serverURL}/clients/last-week`,\n    responseType: \"json\"\n  });\n  const clientsLastWeek = await resLastWeekNumber.data;\n  const resClientCount = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/clients/count`,\n    params: {\n      key: context.query.Api_KEY\n    },\n    responseType: \"json\"\n  });\n  const clientCounter = await resClientCount.data;\n  const resFieldsData = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/fields/count`,\n    params: {\n      key: context.query.Api_KEY\n    },\n    responseType: \"json\"\n  });\n  const fieldCounter = await resFieldsData.data;\n  const resEmailsCount = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/emails/count`,\n    params: {\n      key: context.query.Api_KEY\n    },\n    responseType: \"json\"\n  });\n  const emailsCounter = await resEmailsCount.data;\n  return {\n    lastCampaign,\n    clientsLastWeek,\n    clientCounter,\n    fieldCounter,\n    emailsCounter\n  };\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx"],"names":["Header","useEffect","useState","useContext","useRouter","axios","ShowRecordsNumber","LoadingSpinner","UserContext","CountContext","globalVars","stringMethods","languages","Dashboard","lastCampaign","clientsLastWeek","clientCounter","fieldCounter","emailsCounter","router","initialized","setInitialized","user","counter","title","pathname","removeSlash","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","checkUser","setCounters","h1","campaignStr","length","en","last","sent","date","to","toLowerCase","clients","client","lastWeekStr","lastWeek","signedIn","clientsSaved","custom","customClientFields","permanent","total","emailsSent","emails","getInitialProps","context","resLastCampaign","method","params","key","query","Api_KEY","url","serverURL","responseType","data","resLastWeekNumber","resClientCount","resFieldsData","resEmailsCount"],"mappings":"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","sourcesContent":["import Header from \"../components/Header\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport ShowRecordsNumber from \"../components/ShowRecordsNumber\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport UserContext from \"../components/UserContext\";\nimport CountContext from \"../components/CountContext\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport languages from \"../library/languages\";\n\nconst Dashboard = ({lastCampaign, clientsLastWeek, clientCounter, fieldCounter, emailsCounter} : any) => {\n  const router = useRouter();\n  const [initialized, setInitialized] = useState(false);\n  const user = useContext(UserContext);\n  const counter = useContext(CountContext);\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n    counter.setCounters({clientCounter, fieldCounter, emailsCounter});\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  const campaignStr = lastCampaign.length > 0  ? `${languages.en.last} ${languages.en.sent} ${lastCampaign[0].date} ${languages.en.to.toLowerCase()} ${lastCampaign[0].to.length} ${lastCampaign[0].to.length > 1 ? languages.en.clients : languages.en.client}` : \"\"\n\n  const lastWeekStr = `${clientsLastWeek > 0 ? \"+\" : \"\"} ${clientsLastWeek} ${languages.en.lastWeek}`\n\n  return !initialized  && !user.user.signedIn ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <h1>{h1}</h1>\n      <ShowRecordsNumber\n        data={clientCounter}\n        string={languages.en.clientsSaved}\n        buttonString={languages.en.clients}\n        subData={lastWeekStr}\n        link={\"/clients\"}\n      />\n      <ShowRecordsNumber\n        data={fieldCounter.custom}\n        string={languages.en.customClientFields}\n        buttonString={languages.en.customClientFields}\n        subData={`${fieldCounter.permanent + fieldCounter.custom} ${languages.en.total}`}\n        link={\"/settings\"}\n      />\n      <ShowRecordsNumber\n        data={emailsCounter}\n        string={languages.en.emailsSent}\n        buttonString={languages.en.emails}\n        subData={campaignStr}\n        link={\"/emails\"}\n      />\n    </div>\n  );\n};\n\nDashboard.getInitialProps = async (context: any) => {\n  const resLastCampaign = await axios({\n    method: \"GET\",\n    params: {key: context.query.Api_KEY},\n    url: `${globalVars.serverURL}/emails/last`,\n    responseType: \"json\"\n  }) \n  const lastCampaign = await resLastCampaign.data;\n\n  const resLastWeekNumber = await axios({\n    method: \"GET\",\n    params: {key: context.query.Api_KEY},\n    url: `${globalVars.serverURL}/clients/last-week`,\n    responseType: \"json\"\n  })\n\n  const clientsLastWeek = await resLastWeekNumber.data;\n\n    const resClientCount = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/clients/count`,\n      params: {key: context.query.Api_KEY},\n      responseType: \"json\"\n    });\n    const clientCounter = await resClientCount.data;\n\n    const resFieldsData = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/fields/count`,\n      params: {key: context.query.Api_KEY},\n      responseType: \"json\"\n    });\n    const fieldCounter = await resFieldsData.data;\n\n    const resEmailsCount = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/emails/count`,\n      params: {key: context.query.Api_KEY},\n      responseType: \"json\"\n    });\n    const emailsCounter = await resEmailsCount.data;\n\n  return {lastCampaign, clientsLastWeek, clientCounter, fieldCounter, emailsCounter};\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}