{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar stringMethods = function stringMethods(_text) {\n  var _this = this;\n\n  _classCallCheck(this, stringMethods);\n\n  _defineProperty(this, \"text\", void 0);\n\n  _defineProperty(this, \"splitCamelString\", function () {\n    _this.text = _Array$from(_this.text).map(function (e) {\n      return e === e.toUpperCase() ? e = \"%-%\".concat(e.toLowerCase()) : e;\n    }).join(\"\").replace(/%-%/g, \" \");\n    return _this;\n  });\n\n  _defineProperty(this, \"firstCharUpperCase\", function () {\n    _this.text = _Array$from(_this.text).map(function (e, i) {\n      return i === 0 ? e.toUpperCase() : e;\n    }).join(\"\"); // let str = this.text.toLowerCase();\n    // const firstCharString = str.substr(0, 1).toUpperCase();\n    // const restString = str.substr(1);\n    // this.text = firstCharString + restString;\n\n    return _this;\n  });\n\n  _defineProperty(this, \"removeSlash\", function () {\n    _this.text = _this.text.replace(\"/\", \"\");\n    return _this;\n  });\n\n  _defineProperty(this, \"addStringToEnd\", function (text) {\n    _this.text = _this.text.concat(\" \".concat(text));\n    return _this;\n  });\n\n  this.text = _text;\n};\n\nexport default stringMethods;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/functions/stringMethods.tsx"],"names":["stringMethods","text","map","e","toUpperCase","toLowerCase","join","replace","i","concat"],"mappings":";;;;IAAMA,a,GAGJ,uBAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AAAA;;AAAA,4CAIP,YAAM;AACvB,IAAA,KAAI,CAACA,IAAL,GAAY,YAAW,KAAI,CAACA,IAAhB,EACTC,GADS,CACL,UAAAC,CAAC;AAAA,aAAKA,CAAC,KAAKA,CAAC,CAACC,WAAF,EAAN,GAAyBD,CAAC,gBAASA,CAAC,CAACE,WAAF,EAAT,CAA1B,GAAwDF,CAA7D;AAAA,KADI,EAETG,IAFS,CAEJ,EAFI,EAGTC,OAHS,CAGD,MAHC,EAGO,GAHP,CAAZ;AAKA,WAAO,KAAP;AACD,GAXyB;;AAAA,8CAaL,YAAM;AACzB,IAAA,KAAI,CAACN,IAAL,GAAY,YAAW,KAAI,CAACA,IAAhB,EACPC,GADO,CACH,UAACC,CAAD,EAAIK,CAAJ;AAAA,aAAUA,CAAC,KAAK,CAAN,GAAUL,CAAC,CAACC,WAAF,EAAV,GAA4BD,CAAtC;AAAA,KADG,EAEPG,IAFO,CAEF,EAFE,CAAZ,CADyB,CAIzB;AACA;AACA;AACA;;AACA,WAAO,KAAP;AACD,GAtByB;;AAAA,uCAwBZ,YAAM;AAClB,IAAA,KAAI,CAACL,IAAL,GAAY,KAAI,CAACA,IAAL,CAAUM,OAAV,CAAkB,GAAlB,EAAuB,EAAvB,CAAZ;AACA,WAAO,KAAP;AACD,GA3ByB;;AAAA,0CA6BT,UAACN,IAAD,EAAkB;AACjC,IAAA,KAAI,CAACA,IAAL,GAAY,KAAI,CAACA,IAAL,CAAUQ,MAAV,YAAqBR,IAArB,EAAZ;AACA,WAAO,KAAP;AACD,GAhCyB;;AACxB,OAAKA,IAAL,GAAYA,KAAZ;AACD,C;;AAiCH,eAAeD,aAAf","sourcesContent":["class stringMethods {\n  text: string;\n\n  constructor(text: string) {\n    this.text = text;\n  }\n\n  splitCamelString = () => {\n    this.text = Array.from(this.text)\n      .map(e => (e === e.toUpperCase() ? (e = `%-%${e.toLowerCase()}`) : e))\n      .join(\"\")\n      .replace(/%-%/g, \" \");\n\n    return this;\n  };\n\n  firstCharUpperCase = () => {\n    this.text = Array.from(this.text)\n        .map((e, i) =>Â i === 0 ? e.toUpperCase() : e)\n        .join(\"\")\n    // let str = this.text.toLowerCase();\n    // const firstCharString = str.substr(0, 1).toUpperCase();\n    // const restString = str.substr(1);\n    // this.text = firstCharString + restString;\n    return this;\n  };\n\n  removeSlash = () => {\n    this.text = this.text.replace(\"/\", \"\");\n    return this;\n  };\n\n  addStringToEnd = (text: string) => {\n    this.text = this.text.concat(` ${text}`);\n    return this;\n  };\n}\n\nexport default stringMethods;\n"]},"metadata":{},"sourceType":"module"}