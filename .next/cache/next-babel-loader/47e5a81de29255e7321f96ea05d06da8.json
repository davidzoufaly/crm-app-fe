{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer, useEffect, useState } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormOptionSelect from \"./WebFormOptionSelect\";\nimport WebFormOptions from \"./WebFormOptions\";\n\nconst WebForm = ({\n  fields\n}) => {\n  const {\n    0: optionSelect,\n    1: setOptionSelect\n  } = useState(null);\n  const {\n    0: webFields,\n    1: setWebFields\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true\n        }) : field);\n\n      case \"remove\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: false\n        }) : field);\n\n      case \"addVisibleSelect\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true,\n          fieldFormVisible: true\n        }) : field);\n\n      case \"addHiddenSelect\":\n        return state.map(field => field.fieldName === webFields[0].fieldName ? _objectSpread({}, field, {\n          fieldInForm: true,\n          fieldFormVisible: false,\n          fieldOptions: field.fieldOptions.map(option => option.value === action.payload ? _objectSpread({}, option, {\n            preselected: true\n          }) : option)\n        }) : field);\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field => field.fieldName === e.target.value ? field.fieldType !== \"select\" ? setWebFields({\n      type: \"add\",\n      payload: {\n        fieldName: e.target.value\n      }\n    }) : setOptionSelect(webFields.filter(el => el.fieldName === e.target.value)) : null);\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n    setOptionSelect(null);\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: {\n        optionValue: e.target.value\n      }\n    });\n    setOptionSelect(null);\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n  };\n\n  useEffect(() => {\n    console.log(webFields);\n  }, [webFields]);\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Select field:\"), __jsx(WebFormSelect, {\n    webFields: webFields,\n    addNotSelect: addNotSelect,\n    optionSelect: optionSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), __jsx(WebFormOptionSelect, {\n    optionSelect: optionSelect,\n    webFields: webFields,\n    addVisibleSelect: addVisibleSelect,\n    WebFormOptions: __jsx(WebFormOptions, {\n      optionSelect: optionSelect,\n      addHiddenSelect: addHiddenSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Selected fields:\"), __jsx(WebFormList, {\n    webFields: webFields,\n    removeFromList: removeFromList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }));\n};\n\nexport default WebForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx"],"names":["useReducer","useEffect","useState","WebFormSelect","WebFormList","WebFormOptionSelect","WebFormOptions","WebForm","fields","optionSelect","setOptionSelect","webFields","setWebFields","state","action","type","map","field","fieldName","payload","fieldInForm","fieldFormVisible","fieldOptions","option","value","preselected","addNotSelect","e","target","fieldType","filter","el","addVisibleSelect","id","addHiddenSelect","optionValue","removeFromList","console","log"],"mappings":"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","sourcesContent":["import { useReducer, useEffect, useState } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormOptionSelect from \"./WebFormOptionSelect\";\nimport WebFormOptions from \"./WebFormOptions\";\n\nconst WebForm = ({ fields }) => {\n  const [optionSelect, setOptionSelect] = useState(null);\n  const [webFields, setWebFields] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true }\n            : field\n        );\n      case \"remove\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: false }\n            : field\n        );\n      case \"addVisibleSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true, fieldFormVisible: true }\n            : field\n        );\n      case \"addHiddenSelect\":\n        return state.map(field =>\n          field.fieldName === webFields[0].fieldName\n            ? {\n                ...field,\n                fieldInForm: true,\n                fieldFormVisible: false,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.value === action.payload\n                    ? { ...option, preselected: true }\n                    : option\n                )\n              }\n            : field\n        );\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field =>\n      field.fieldName === e.target.value\n        ? field.fieldType !== \"select\"\n          ? setWebFields({\n              type: \"add\",\n              payload: { fieldName: e.target.value }\n            })\n          : setOptionSelect(\n              webFields.filter(el => el.fieldName === e.target.value)\n            )\n        : null\n    );\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: { fieldName: e.target.id }\n    });\n    setOptionSelect(null);\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: { optionValue: e.target.value }\n    });\n    setOptionSelect(null);\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: { fieldName: e.target.id }\n    });\n  };\n\n  useEffect(() => {\n    console.log(webFields);\n  }, [webFields]);\n\n  return (\n    <>\n      <h3>Select field:</h3>\n      <WebFormSelect\n        webFields={webFields}\n        addNotSelect={addNotSelect}\n        optionSelect={optionSelect}\n      />\n      <WebFormOptionSelect\n        optionSelect={optionSelect}\n        webFields={webFields}\n        addVisibleSelect={addVisibleSelect}\n        WebFormOptions={\n          <WebFormOptions\n            optionSelect={optionSelect}\n            addHiddenSelect={addHiddenSelect}\n          />\n        }\n      />\n      <h3>Selected fields:</h3>\n      <WebFormList webFields={webFields} removeFromList={removeFromList} />\n    </>\n  );\n};\n\nexport default WebForm;\n"]},"metadata":{},"sourceType":"module"}