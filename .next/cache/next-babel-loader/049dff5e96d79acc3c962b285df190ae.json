{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormOptionSelect.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nconst webFormOptionSelect = ({\n  optionSelect,\n  webFields,\n  addVisibleSelect,\n  showOptions\n}) => {\n  const insertIntoForm = webFields.map(field => optionSelect === field.fieldName ? __jsx(\"div\", {\n    key: field.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, \"Should be \", __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, field.fieldName), \" visible in form?\"), __jsx(\"button\", {\n    id: field.fieldName,\n    onClick: addVisibleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"YES\"), __jsx(\"button\", {\n    id: field.fieldName,\n    onClick: showOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"NO\")) : null);\n  return __jsx(React.Fragment, null, insertIntoForm);\n};\n\nexport default webFormOptionSelect;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormOptionSelect.tsx"],"names":["webFormOptionSelect","optionSelect","webFields","addVisibleSelect","showOptions","insertIntoForm","map","field","fieldName","id"],"mappings":";;;;AAAA,MAAMA,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,SAAhB;AAA2BC,EAAAA,gBAA3B;AAA6CC,EAAAA;AAA7C,CAAD,KAAgE;AAC1F,QAAMC,cAAc,GAAGH,SAAS,CAACI,GAAV,CAAcC,KAAK,IACxCN,YAAY,KAAKM,KAAK,CAACC,SAAvB,GACE;AAAK,IAAA,GAAG,EAAED,KAAK,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASF,KAAK,CAACC,SAAf,CADZ,sBADF,EAIE;AAAQ,IAAA,EAAE,EAAED,KAAK,CAACC,SAAlB;AAA6B,IAAA,OAAO,EAAEL,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAOE;AAAQ,IAAA,EAAE,EAAEI,KAAK,CAACC,SAAlB;AAA6B,IAAA,OAAO,EAAEJ,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADF,GAYI,IAbiB,CAAvB;AAgBA,SACE,4BACGC,cADH,CADF;AAKD,CAtBD;;AAwBA,eAAeL,mBAAf","sourcesContent":["const webFormOptionSelect = ({ optionSelect, webFields, addVisibleSelect, showOptions }) => {\n  const insertIntoForm = webFields.map(field =>\n    optionSelect === field.fieldName ? (\n      <div key={field.id}>\n        <p>\n          Should be <strong>{field.fieldName}</strong> visible in form?\n        </p>\n        <button id={field.fieldName} onClick={addVisibleSelect}>\n          YES\n        </button>\n        <button id={field.fieldName} onClick={showOptions}>\n          NO\n        </button>\n      </div>\n    ) : null\n  );\n\n  return (\n    <>\n      {insertIntoForm}\n    </>\n  );\n};\n\nexport default webFormOptionSelect;\n"]},"metadata":{},"sourceType":"module"}