{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport TextInput from \"./TextInput\";\nimport Button from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\nimport { Typography, Box } from '@material-ui/core';\n\nconst RegisterForm = ({\n  changeToLogin\n}) => {\n  const {\n    0: regUser,\n    1: setRegUser\n  } = useState({\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  });\n\n  const onChange = e => {\n    setRegUser(_objectSpread({}, regUser, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const sentFormToBe = async () => {\n    const {\n      username,\n      password\n    } = regUser;\n    const userRes = await axios({\n      method: \"POST\",\n      data: {\n        username,\n        password\n      },\n      url: `${globalVars.serverURL}/users`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n\n    switch (userData.msg) {\n      case globalVars.msgSuccess:\n        alert(languages.en.success);\n        changeToLogin();\n        break;\n\n      case \"Exist\":\n        alert(languages.en.userAlreadyExists);\n        break;\n\n      default:\n        alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  const onRegister = () => {\n    regUser.password === regUser.repeatPassword ? sentFormToBe() : alert(languages.en.passwordsDoesNotMatch);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    gutterBottom: true\n  }, new stringMethods(languages.en.register).firstCharUpperCase().getString()), __jsx(\"form\", null, __jsx(TextInput, {\n    onChange: onChange,\n    type: \"text\",\n    value: regUser.username,\n    text: \"username\",\n    title: new stringMethods(languages.en.username).firstCharUpperCase().getString()\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: regUser.password,\n    text: \"password\",\n    title: languages.en.password\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: regUser.repeatPassword,\n    text: \"repeatPassword\",\n    title: new stringMethods(languages.en.repeatPassword).firstCharUpperCase().getString()\n  }), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    mt: \"2rem\"\n  }, __jsx(Button, {\n    onClick: onRegister,\n    text: languages.en.register,\n    variant: \"contained\"\n  }))));\n};\n\nexport default RegisterForm;","map":null,"metadata":{},"sourceType":"module"}