{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport ShowRecordsNumber from \"../components/ShowRecordsNumber\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport UserContext from \"../components/UserContext\";\nimport CountContext from \"../components/CountContext\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport languages from \"../library/languages\";\n\nvar Dashboard = function Dashboard(_ref) {\n  var lastCampaign = _ref.lastCampaign,\n      clientsLastWeek = _ref.clientsLastWeek;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      initialized = _useState[0],\n      setInitialized = _useState[1];\n\n  var user = useContext(UserContext);\n\n  var _useContext = useContext(CountContext),\n      emailsCounter = _useContext.emailsCounter,\n      clientCounter = _useContext.clientCounter,\n      fieldCounter = _useContext.fieldCounter;\n\n  useEffect(function () {\n    var title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n    console.log(lastCampaign);\n  }, [router]);\n  var h1 = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString(); // const campaignStr = `${languages.en.last} ${languages.en.sent} ${lastCampaign[0].date} ${languages.en.to.toLowerCase()} ${lastCampaign[0].to.length} ${lastCampaign[0].to.length > 1 ? languages.en.clients : languages.en.client}`\n\n  var lastWeekStr = \"\".concat(clientsLastWeek > 0 ? \"+\" : null, \" \").concat(clientsLastWeek, \" \").concat(languages.en.lastWeek);\n  return !initialized && !user.user.signedIn ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, h1), __jsx(ShowRecordsNumber, {\n    data: clientCounter,\n    string: languages.en.clientsSaved,\n    buttonString: languages.en.clients,\n    subData: lastWeekStr,\n    link: \"/clients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(ShowRecordsNumber, {\n    data: fieldCounter.custom,\n    string: languages.en.customClientFields,\n    buttonString: languages.en.customClientFields,\n    subData: \"\".concat(fieldCounter.permanent + fieldCounter.custom, \" \").concat(languages.en.total),\n    link: \"/settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(ShowRecordsNumber, {\n    data: emailsCounter,\n    string: languages.en.emailsSent,\n    buttonString: languages.en.emails // subData={campaignStr}\n    ,\n    link: \"/emails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n};\n\nDashboard.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var resLastCampaign, lastCampaign, resLastWeekNumber, clientsLastWeek;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              method: \"GET\",\n              // params: {user: context.query.Api_KEY},\n              params: {\n                user: \"crm-app\"\n              },\n              url: \"\".concat(globalVars.serverURL, \"/emails/last\"),\n              responseType: \"json\"\n            });\n\n          case 2:\n            resLastCampaign = _context.sent;\n            _context.next = 5;\n            return resLastCampaign.data;\n\n          case 5:\n            lastCampaign = _context.sent;\n            _context.next = 8;\n            return axios({\n              method: \"GET\",\n              url: \"\".concat(globalVars.serverURL, \"/clients/last-week\"),\n              responseType: \"json\"\n            });\n\n          case 8:\n            resLastWeekNumber = _context.sent;\n            _context.next = 11;\n            return resLastWeekNumber.data;\n\n          case 11:\n            clientsLastWeek = _context.sent;\n            return _context.abrupt(\"return\", {\n              lastCampaign: lastCampaign,\n              clientsLastWeek: clientsLastWeek\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx"],"names":["Header","useEffect","useState","useContext","useRouter","axios","ShowRecordsNumber","LoadingSpinner","UserContext","CountContext","globalVars","stringMethods","languages","Dashboard","lastCampaign","clientsLastWeek","router","initialized","setInitialized","user","emailsCounter","clientCounter","fieldCounter","title","pathname","removeSlash","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","checkUser","console","log","h1","lastWeekStr","en","lastWeek","signedIn","clientsSaved","clients","custom","customClientFields","permanent","total","emailsSent","emails","getInitialProps","context","method","params","url","serverURL","responseType","resLastCampaign","data","resLastWeekNumber"],"mappings":"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","sourcesContent":["import Header from \"../components/Header\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport ShowRecordsNumber from \"../components/ShowRecordsNumber\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport UserContext from \"../components/UserContext\";\nimport CountContext from \"../components/CountContext\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport languages from \"../library/languages\";\n\nconst Dashboard = ({lastCampaign, clientsLastWeek} : any) => {\n  const router = useRouter();\n  const [initialized, setInitialized] = useState(false);\n  const user = useContext(UserContext);\n\n  const { \n    emailsCounter,\n    clientCounter, \n    fieldCounter \n  } = useContext(CountContext);\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n    user.checkUser();\n    console.log(lastCampaign);\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  // const campaignStr = `${languages.en.last} ${languages.en.sent} ${lastCampaign[0].date} ${languages.en.to.toLowerCase()} ${lastCampaign[0].to.length} ${lastCampaign[0].to.length > 1 ? languages.en.clients : languages.en.client}`\n\n  const lastWeekStr = `${clientsLastWeek > 0 ? \"+\" : null} ${clientsLastWeek} ${languages.en.lastWeek}`\n\n  return !initialized  && !user.user.signedIn ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <h1>{h1}</h1>\n      <ShowRecordsNumber\n        data={clientCounter}\n        string={languages.en.clientsSaved}\n        buttonString={languages.en.clients}\n        subData={lastWeekStr}\n        link={\"/clients\"}\n      />\n      <ShowRecordsNumber\n        data={fieldCounter.custom}\n        string={languages.en.customClientFields}\n        buttonString={languages.en.customClientFields}\n        subData={`${fieldCounter.permanent + fieldCounter.custom} ${languages.en.total}`}\n        link={\"/settings\"}\n      />\n      <ShowRecordsNumber\n        data={emailsCounter}\n        string={languages.en.emailsSent}\n        buttonString={languages.en.emails}\n        // subData={campaignStr}\n        link={\"/emails\"}\n      />\n    </div>\n  );\n};\n\nDashboard.getInitialProps = async (context: any) => {\n  const resLastCampaign = await axios({\n    method: \"GET\",\n    // params: {user: context.query.Api_KEY},\n    params: {user: \"crm-app\"},\n    url: `${globalVars.serverURL}/emails/last`,\n    responseType: \"json\"\n  }) \n  const lastCampaign = await resLastCampaign.data;\n\n  const resLastWeekNumber = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/clients/last-week`,\n    responseType: \"json\"\n  })\n\n  const clientsLastWeek = await resLastWeekNumber.data;\n  \n  return {lastCampaign, clientsLastWeek};\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}