{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/Header.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Grid, Button, Toolbar, AppBar, Box, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nconst useStyles = makeStyles(theme => createStyles({\n  menuButton: {\n    marginRight: theme.spacing(2),\n    color: \"white\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  toolBar: {\n    padding: 0\n  },\n  mobilMenuButton: {\n    color: \"white\",\n    display: \"none\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  menuGrid: {\n    flexDirection: \"row\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDireciton: \"column\"\n    }\n  },\n  navMobil: {\n    [theme.breakpoints.down(\"sm\")]: {\n      position: \"absolute\",\n      left: 0,\n      backgroundColor: \"black\",\n      display: \"block\",\n      width: \"100%\",\n      top: \"100%\",\n      zIndex: -1,\n      padding: \"2rem\"\n    }\n  },\n  navDesktop: {\n    position: \"relative\",\n    display: none,\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"block\"\n    }\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles({});\n  const user = useContext(UserContext);\n  const {\n    0: mobilMenu,\n    1: setMobilMenu\n  } = useState(false);\n\n  const toggleMenu = () => {\n    console.log(mobilMenu);\n    setMobilMenu(prevState => !prevState);\n  };\n\n  return __jsx(AppBar, {\n    position: \"fixed\",\n    style: {\n      zIndex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    className: classes.toolBar,\n    style: {\n      position: \"relative\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Box, {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: toggleMenu,\n    className: classes.mobilMenuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, !mobilMenu ? __jsx(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }) : __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), __jsx(Box, {\n    component: \"nav\",\n    className: mobilMenu ? classes.navMobil : classes.navDesktop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    direction: mobilMenu ? \"column\" : \"row\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/dashboard/[key]\",\n    as: `/dashboard/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, languages.en.dashboard))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/clients/[key]\",\n    as: `/clients/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(PeopleAltIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, languages.en.clients))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/emails/[key]\",\n    as: `/emails/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(EmailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, languages.en.emails))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/settings/[key]\",\n    as: `/settings/${user.user.userkey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, languages.en.settings)))))), __jsx(Button, {\n    className: classes.menuButton,\n    onClick: () => user.logoutUser(),\n    startIcon: __jsx(ExitToAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, languages.en.logout))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/Header.tsx"],"names":["useContext","useState","Link","languages","UserContext","createStyles","makeStyles","Container","DashboardIcon","PeopleAltIcon","EmailIcon","SettingsIcon","ExitToAppIcon","Grid","Button","Toolbar","AppBar","Box","IconButton","MenuIcon","CloseIcon","useStyles","theme","menuButton","marginRight","spacing","color","title","flexGrow","toolBar","padding","mobilMenuButton","display","breakpoints","down","menuGrid","flexDirection","flexDireciton","navMobil","position","left","backgroundColor","width","top","zIndex","navDesktop","none","Header","classes","user","mobilMenu","setMobilMenu","toggleMenu","console","log","prevState","userkey","en","dashboard","clients","emails","settings","logoutUser","logout"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport {\n  Grid,\n  Button,\n  Toolbar,\n  AppBar,\n  Box,\n  IconButton\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    menuButton: {\n      marginRight: theme.spacing(2),\n      color: \"white\"\n    },\n    title: {\n      flexGrow: 1\n    },\n    toolBar: {\n      padding: 0\n    },\n    mobilMenuButton: {\n      color: \"white\",\n      display: \"none\",\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    menuGrid: {\n      flexDirection: \"row\",\n      [theme.breakpoints.down(\"sm\")]: {\n        flexDireciton: \"column\"\n      }\n    },\n    navMobil: {\n      [theme.breakpoints.down(\"sm\")]: {\n        position: \"absolute\",\n        left: 0,\n        backgroundColor: \"black\",\n        display: \"block\",\n        width: \"100%\",\n        top: \"100%\",\n        zIndex: -1,\n        padding: \"2rem\",\n      }\n    },\n    navDesktop: {\n      position: \"relative\",\n      display: none,\n      [theme.breakpoints.down(\"md\")]: {\n        display: \"block\"\n      }\n    }\n  })\n);\n\nconst Header = () => {\n  const classes = useStyles({});\n  const user = useContext(UserContext);\n  const [mobilMenu, setMobilMenu] = useState(false);\n\n  const toggleMenu = () => {\n    console.log(mobilMenu);\n    setMobilMenu(prevState => !prevState);\n  };\n\n  return (\n    <AppBar position=\"fixed\" style={{zIndex: 1}}>\n      <Container maxWidth=\"lg\">\n        <Toolbar className={classes.toolBar} style={{position: \"relative\"}}>\n          <Box display=\"flex\" width=\"100%\" justifyContent=\"space-between\">\n            <IconButton\n              onClick={toggleMenu}\n              className={classes.mobilMenuButton}\n            >\n              {!mobilMenu ? <MenuIcon /> : <CloseIcon />}\n            </IconButton>\n            <Box\n              component=\"nav\"\n              className={mobilMenu ? classes.navMobil : classes.navDesktop}\n            >\n              <Grid\n                container\n                direction={mobilMenu ? \"column\" : \"row\"}\n                justify=\"center\"\n              >\n                <Grid item>\n                  <Link\n                    href=\"/dashboard/[key]\"\n                    as={`/dashboard/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<DashboardIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.dashboard}\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    href=\"/clients/[key]\"\n                    as={`/clients/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<PeopleAltIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.clients}\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    href=\"/emails/[key]\"\n                    as={`/emails/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<EmailIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.emails}\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    href=\"/settings/[key]\"\n                    as={`/settings/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<SettingsIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.settings}\n                    </Button>\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n          <Button\n            className={classes.menuButton}\n            onClick={() => user.logoutUser()}\n            startIcon={<ExitToAppIcon />}\n          >\n            {languages.en.logout}\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}