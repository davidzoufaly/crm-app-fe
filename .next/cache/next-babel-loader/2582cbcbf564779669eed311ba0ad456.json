{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormOptionSelect.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport WebFormOptions from \"./WebFormOptions\";\n\nvar webFormOptionSelect = function webFormOptionSelect(_ref) {\n  var optionSelect = _ref.optionSelect,\n      webFields = _ref.webFields,\n      addVisibleSelect = _ref.addVisibleSelect;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showOptions = _useState2[0],\n      setShowOptions = _useState2[1];\n\n  var showOptionsOnClick = function showOptionsOnClick() {\n    setShowOptions(true);\n  };\n\n  var insertIntoForm = webFields.map(function (field) {\n    return optionSelect === field.fieldName ? __jsx(\"div\", {\n      key: field.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Should be \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, field.fieldName), \" visible in form?\"), __jsx(\"button\", {\n      id: field.fieldName,\n      onClick: addVisibleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"YES\"), __jsx(\"button\", {\n      onClick: showOptionsOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"NO\")) : null;\n  });\n  return __jsx(React.Fragment, null, showOptions ? __jsx(WebFormOptions, {\n    optionSelect: optionSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : null, insertIntoForm);\n};\n\nexport default webFormOptionSelect;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormOptionSelect.tsx"],"names":["WebFormOptions","webFormOptionSelect","optionSelect","webFields","addVisibleSelect","useState","showOptions","setShowOptions","showOptionsOnClick","insertIntoForm","map","field","fieldName","id"],"mappings":";;;;AAAA,OAAOA,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAmD;AAAA,MAAhDC,YAAgD,QAAhDA,YAAgD;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,gBAAuB,QAAvBA,gBAAuB;;AAAA,kBACvCC,QAAQ,CAAC,KAAD,CAD+B;AAAA;AAAA,MACtEC,WADsE;AAAA,MACzDC,cADyD;;AAG7E,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,MAAME,cAAc,GAAGN,SAAS,CAACO,GAAV,CAAc,UAAAC,KAAK;AAAA,WACxCT,YAAY,KAAKS,KAAK,CAACC,SAAvB,GACE;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASF,KAAK,CAACC,SAAf,CADZ,sBADF,EAIE;AAAQ,MAAA,EAAE,EAAED,KAAK,CAACC,SAAlB;AAA6B,MAAA,OAAO,EAAER,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAOE;AAAQ,MAAA,OAAO,EAAEI,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CADF,GAUI,IAXoC;AAAA,GAAnB,CAAvB;AAcA,SACE,4BACGF,WAAW,GAAG,MAAC,cAAD;AAAgB,IAAA,YAAY,EAAEJ,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAoD,IADlE,EAEGO,cAFH,CADF;AAMD,CA3BD;;AA6BA,eAAeR,mBAAf","sourcesContent":["import WebFormOptions from \"./WebFormOptions\";\n\nconst webFormOptionSelect = ({ optionSelect, webFields, addVisibleSelect }) => {\n  const [showOptions, setShowOptions] = useState(false);\n\n  const showOptionsOnClick = () => {\n    setShowOptions(true);\n  };\n\n  const insertIntoForm = webFields.map(field =>\n    optionSelect === field.fieldName ? (\n      <div key={field.id}>\n        <p>\n          Should be <strong>{field.fieldName}</strong> visible in form?\n        </p>\n        <button id={field.fieldName} onClick={addVisibleSelect}>\n          YES\n        </button>\n        <button onClick={showOptionsOnClick}>NO</button>\n      </div>\n    ) : null\n  );\n\n  return (\n    <>\n      {showOptions ? <WebFormOptions optionSelect={optionSelect} /> : null}\n      {insertIntoForm}\n    </>\n  );\n};\n\nexport default webFormOptionSelect;\n"]},"metadata":{},"sourceType":"module"}