{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormVisibleOrNot from \"./WebFormVisibleOrNot\";\nimport WebFormFieldOptions from \"./WebFormFieldOptions\";\nimport WebFormSubSelect from \"./WebFormSubSelect\";\nimport WebFormButtons from \"./WebFormButtons\";\nimport globalVars from \"../../../library/globalVariables\";\n\nconst WebForm = ({\n  fields\n}) => {\n  const initCounterValue = fields.map(e => e.order).sort((a, b) => b > a ? 1 : -1)[0];\n  const {\n    0: counter,\n    1: setCounter\n  } = useState(initCounterValue);\n  const {\n    0: webFields,\n    1: setWebFields\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true,\n          order: counter\n        }) : field);\n\n      case \"addVisibleSelect\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: true,\n          fieldFormVisible: true,\n          pause: false,\n          order: counter\n        }) : field);\n\n      case \"addNotVisibleValue\":\n        return state.map(field => field.pause ? _objectSpread({}, field, {\n          fieldFormVisible: false\n        }) : field);\n\n      case \"addHiddenSelect\":\n        return state.map(field => field.pause ? _objectSpread({}, field, {\n          fieldInForm: true,\n          pause: false,\n          order: counter,\n          fieldOptions: field.fieldOptions.map(option => option.value === action.payload.optionValue ? _objectSpread({}, option, {\n            preselected: true\n          }) : option)\n        }) : field);\n\n      case \"pauseSelect\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          pause: true\n        }) : field);\n\n      case \"remove\":\n        return state.map(field => field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n          fieldInForm: false,\n          fieldFormVisible: null,\n          fieldOptions: field.fieldOptions.map(option => option.preselected ? _objectSpread({}, option, {\n            preselected: null\n          }) : option)\n        }) : field);\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field => {\n      if (field.fieldName === e.target.value) {\n        if (field.fieldType !== \"select\") {\n          setWebFields({\n            type: \"add\",\n            payload: {\n              fieldName: e.target.value\n            }\n          });\n          setCounter(prevCount => prevCount + 1);\n        } else {\n          setWebFields({\n            type: \"pauseSelect\",\n            payload: {\n              fieldName: e.target.value\n            }\n          });\n        }\n      }\n    });\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: {\n        optionValue: e.target.value\n      }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n  };\n\n  const showOptionsOnClick = () => {\n    setWebFields({\n      type: \"addNotVisibleValue\"\n    });\n  };\n\n  useEffect(() => {\n    //save fields (form) on change\n    const saveFormAuto = async () => {\n      await axios({\n        method: \"PUT\",\n        url: `${globalVars.serverURL}/fields`,\n        data: webFields,\n        responseType: \"json\"\n      });\n    };\n\n    saveFormAuto();\n  }, [webFields]);\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Web form\"), __jsx(WebFormSelect, {\n    webFields: webFields,\n    addNotSelect: addNotSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), __jsx(WebFormVisibleOrNot, {\n    webFields: webFields,\n    addVisibleSelect: addVisibleSelect,\n    showOptionsOnClick: showOptionsOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), __jsx(WebFormSubSelect, {\n    webFields: webFields,\n    addHiddenSelect: addHiddenSelect,\n    webFormOptions: __jsx(WebFormFieldOptions, {\n      webFields: webFields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), __jsx(WebFormList, {\n    webFields: webFields,\n    removeFromList: removeFromList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), __jsx(WebFormButtons, {\n    webFields: webFields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }));\n};\n\nexport default WebForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx"],"names":["useReducer","useState","useEffect","axios","WebFormSelect","WebFormList","WebFormVisibleOrNot","WebFormFieldOptions","WebFormSubSelect","WebFormButtons","globalVars","WebForm","fields","initCounterValue","map","e","order","sort","a","b","counter","setCounter","webFields","setWebFields","state","action","type","field","fieldName","payload","fieldInForm","fieldFormVisible","pause","fieldOptions","option","value","optionValue","preselected","addNotSelect","target","fieldType","prevCount","addVisibleSelect","id","addHiddenSelect","removeFromList","showOptionsOnClick","saveFormAuto","method","url","serverURL","data","responseType"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAE9B,QAAMC,gBAAgB,GAAGD,MAAM,CAACE,GAAP,CAAWC,CAAC,IAAIA,CAAC,CAACC,KAAlB,EAAyBC,IAAzB,CAA8B,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,GAAGD,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAApD,EAAuD,CAAvD,CAAzB;AAEA,QAAM;AAAA,OAACE,OAAD;AAAA,OAAUC;AAAV,MAAwBpB,QAAQ,CAACY,gBAAD,CAAtC;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4BvB,UAAU,CAAC,CAACwB,KAAD,EAAQC,MAAR,KAAmB;AAC9D,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,KAAL;AACE,eAAOF,KAAK,CAACV,GAAN,CAAUa,KAAK,IACpBA,KAAK,CAACC,SAAN,KAAoBH,MAAM,CAACI,OAAP,CAAeD,SAAnC,qBACSD,KADT;AACgBG,UAAAA,WAAW,EAAE,IAD7B;AACmCd,UAAAA,KAAK,EAAEI;AAD1C,aAEIO,KAHC,CAAP;;AAMF,WAAK,kBAAL;AACE,eAAOH,KAAK,CAACV,GAAN,CAAUa,KAAK,IACpBA,KAAK,CAACC,SAAN,KAAoBH,MAAM,CAACI,OAAP,CAAeD,SAAnC,qBAESD,KAFT;AAGMG,UAAAA,WAAW,EAAE,IAHnB;AAIMC,UAAAA,gBAAgB,EAAE,IAJxB;AAKMC,UAAAA,KAAK,EAAE,KALb;AAMMhB,UAAAA,KAAK,EAAEI;AANb,aAQIO,KATC,CAAP;;AAYF,WAAK,oBAAL;AACE,eAAOH,KAAK,CAACV,GAAN,CAAUa,KAAK,IACpBA,KAAK,CAACK,KAAN,qBAESL,KAFT;AAGMI,UAAAA,gBAAgB,EAAE;AAHxB,aAKIJ,KANC,CAAP;;AASF,WAAK,iBAAL;AACE,eAAOH,KAAK,CAACV,GAAN,CAAUa,KAAK,IACpBA,KAAK,CAACK,KAAN,qBAESL,KAFT;AAGMG,UAAAA,WAAW,EAAE,IAHnB;AAIME,UAAAA,KAAK,EAAE,KAJb;AAKMhB,UAAAA,KAAK,EAAEI,OALb;AAMMa,UAAAA,YAAY,EAAEN,KAAK,CAACM,YAAN,CAAmBnB,GAAnB,CAAuBoB,MAAM,IACzCA,MAAM,CAACC,KAAP,KAAiBV,MAAM,CAACI,OAAP,CAAeO,WAAhC,qBACSF,MADT;AACiBG,YAAAA,WAAW,EAAE;AAD9B,eAEIH,MAHQ;AANpB,aAYIP,KAbC,CAAP;;AAgBF,WAAK,aAAL;AACE,eAAOH,KAAK,CAACV,GAAN,CAAUa,KAAK,IACpBA,KAAK,CAACC,SAAN,KAAoBH,MAAM,CAACI,OAAP,CAAeD,SAAnC,qBACSD,KADT;AACgBK,UAAAA,KAAK,EAAE;AADvB,aAEIL,KAHC,CAAP;;AAMF,WAAK,QAAL;AACE,eAAOH,KAAK,CAACV,GAAN,CAAUa,KAAK,IACpBA,KAAK,CAACC,SAAN,KAAoBH,MAAM,CAACI,OAAP,CAAeD,SAAnC,qBAESD,KAFT;AAGMG,UAAAA,WAAW,EAAE,KAHnB;AAIMC,UAAAA,gBAAgB,EAAE,IAJxB;AAKME,UAAAA,YAAY,EAAEN,KAAK,CAACM,YAAN,CAAmBnB,GAAnB,CAAuBoB,MAAM,IACzCA,MAAM,CAACG,WAAP,qBAA0BH,MAA1B;AAAkCG,YAAAA,WAAW,EAAE;AAA/C,eAAwDH,MAD5C;AALpB,aASIP,KAVC,CAAP;;AAaF;AACE,eAAOH,KAAP;AAtEJ;AAwED,GAzE2C,EAyEzCZ,MAzEyC,CAA5C;;AA2EA,QAAM0B,YAAY,GAAGvB,CAAC,IAAI;AACxBO,IAAAA,SAAS,CAACR,GAAV,CAAca,KAAK,IAAI;AACrB,UAAIA,KAAK,CAACC,SAAN,KAAoBb,CAAC,CAACwB,MAAF,CAASJ,KAAjC,EAAwC;AACtC,YAAIR,KAAK,CAACa,SAAN,KAAoB,QAAxB,EAAkC;AAChCjB,UAAAA,YAAY,CAAC;AACXG,YAAAA,IAAI,EAAE,KADK;AAEXG,YAAAA,OAAO,EAAE;AAAED,cAAAA,SAAS,EAAEb,CAAC,CAACwB,MAAF,CAASJ;AAAtB;AAFE,WAAD,CAAZ;AAIAd,UAAAA,UAAU,CAACoB,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAV;AACD,SAND,MAMO;AACLlB,UAAAA,YAAY,CAAC;AACXG,YAAAA,IAAI,EAAE,aADK;AAEXG,YAAAA,OAAO,EAAE;AAAED,cAAAA,SAAS,EAAEb,CAAC,CAACwB,MAAF,CAASJ;AAAtB;AAFE,WAAD,CAAZ;AAID;AACF;AACF,KAfD;AAgBD,GAjBD;;AAmBA,QAAMO,gBAAgB,GAAG3B,CAAC,IAAI;AAC5BQ,IAAAA,YAAY,CAAC;AACXG,MAAAA,IAAI,EAAE,kBADK;AAEXG,MAAAA,OAAO,EAAE;AAAED,QAAAA,SAAS,EAAEb,CAAC,CAACwB,MAAF,CAASI;AAAtB;AAFE,KAAD,CAAZ;AAIAtB,IAAAA,UAAU,CAACoB,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAV;AACD,GAND;;AAQA,QAAMG,eAAe,GAAG7B,CAAC,IAAI;AAC3BQ,IAAAA,YAAY,CAAC;AACXG,MAAAA,IAAI,EAAE,iBADK;AAEXG,MAAAA,OAAO,EAAE;AAAEO,QAAAA,WAAW,EAAErB,CAAC,CAACwB,MAAF,CAASJ;AAAxB;AAFE,KAAD,CAAZ;AAIAd,IAAAA,UAAU,CAACoB,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAV;AACD,GAND;;AAQA,QAAMI,cAAc,GAAG9B,CAAC,IAAI;AAC1BQ,IAAAA,YAAY,CAAC;AACXG,MAAAA,IAAI,EAAE,QADK;AAEXG,MAAAA,OAAO,EAAE;AAAED,QAAAA,SAAS,EAAEb,CAAC,CAACwB,MAAF,CAASI;AAAtB;AAFE,KAAD,CAAZ;AAID,GALD;;AAOA,QAAMG,kBAAkB,GAAG,MAAM;AAC/BvB,IAAAA,YAAY,CAAC;AACXG,MAAAA,IAAI,EAAE;AADK,KAAD,CAAZ;AAGD,GAJD;;AAMAxB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAM6C,YAAY,GAAG,YAAY;AAC/B,YAAM5C,KAAK,CAAC;AACN6C,QAAAA,MAAM,EAAE,KADF;AAENC,QAAAA,GAAG,EAAG,GAAEvC,UAAU,CAACwC,SAAU,SAFvB;AAGNC,QAAAA,IAAI,EAAE7B,SAHA;AAIN8B,QAAAA,YAAY,EAAE;AAJR,OAAD,CAAX;AAMD,KAPD;;AAQAL,IAAAA,YAAY;AACf,GAXU,EAWR,CAACzB,SAAD,CAXQ,CAAT;AAcA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,aAAD;AAAe,IAAA,SAAS,EAAEA,SAA1B;AAAqC,IAAA,YAAY,EAAEgB,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,mBAAD;AACE,IAAA,SAAS,EAAEhB,SADb;AAEE,IAAA,gBAAgB,EAAEoB,gBAFpB;AAGE,IAAA,kBAAkB,EAAEI,kBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAQE,MAAC,gBAAD;AACE,IAAA,SAAS,EAAExB,SADb;AAEE,IAAA,eAAe,EAAEsB,eAFnB;AAGE,IAAA,cAAc,EACZ,MAAC,mBAAD;AACE,MAAA,SAAS,EAAEtB,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAiBE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEA,SAAxB;AAAmC,IAAA,cAAc,EAAEuB,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAkBE,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAEvB,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD,CApKD;;AAsKA,eAAeX,OAAf","sourcesContent":["import { useReducer, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormVisibleOrNot from \"./WebFormVisibleOrNot\";\nimport WebFormFieldOptions from \"./WebFormFieldOptions\";\nimport WebFormSubSelect from \"./WebFormSubSelect\";\nimport WebFormButtons from \"./WebFormButtons\";\nimport globalVars from \"../../../library/globalVariables\"\n\nconst WebForm = ({ fields }) => {\n\n  const initCounterValue = fields.map(e => e.order).sort((a,b) => b > a ? 1 : -1)[0];\n\n  const [counter, setCounter] = useState(initCounterValue);\n  const [webFields, setWebFields] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true, order: counter }\n            : field\n        );\n\n      case \"addVisibleSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? {\n                ...field,\n                fieldInForm: true,\n                fieldFormVisible: true,\n                pause: false,\n                order: counter\n              }\n            : field\n        );\n\n      case \"addNotVisibleValue\":\n        return state.map(field =>\n          field.pause\n            ? {\n                ...field,\n                fieldFormVisible: false\n              }\n            : field\n        );\n\n      case \"addHiddenSelect\":\n        return state.map(field =>\n          field.pause\n            ? {\n                ...field,\n                fieldInForm: true,\n                pause: false,\n                order: counter,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.value === action.payload.optionValue\n                    ? { ...option, preselected: true }\n                    : option\n                )\n              }\n            : field\n        );\n\n      case \"pauseSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, pause: true }\n            : field\n        );\n\n      case \"remove\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? {\n                ...field,\n                fieldInForm: false,\n                fieldFormVisible: null,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.preselected ? { ...option, preselected: null } : option\n                )\n              }\n            : field\n        );\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field => {\n      if (field.fieldName === e.target.value) {\n        if (field.fieldType !== \"select\") {\n          setWebFields({\n            type: \"add\",\n            payload: { fieldName: e.target.value }\n          });\n          setCounter(prevCount => prevCount + 1);\n        } else {\n          setWebFields({\n            type: \"pauseSelect\",\n            payload: { fieldName: e.target.value }\n          });\n        }\n      }\n    });\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: { fieldName: e.target.id }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: { optionValue: e.target.value }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: { fieldName: e.target.id }\n    });\n  };\n\n  const showOptionsOnClick = () => {\n    setWebFields({\n      type: \"addNotVisibleValue\"\n    });\n  };\n\n  useEffect(() => {\n    //save fields (form) on change\n    const saveFormAuto = async () => {\n      await axios({\n            method: \"PUT\",\n            url: `${globalVars.serverURL}/fields`,\n            data: webFields,\n            responseType: \"json\"\n        })\n    }\n    saveFormAuto();\n}, [webFields])\n\n\n  return (\n    <>\n      <h2>Web form</h2>\n      <WebFormSelect webFields={webFields} addNotSelect={addNotSelect} />\n      <WebFormVisibleOrNot\n        webFields={webFields}\n        addVisibleSelect={addVisibleSelect}\n        showOptionsOnClick={showOptionsOnClick}\n      />\n      <WebFormSubSelect\n        webFields={webFields}\n        addHiddenSelect={addHiddenSelect}\n        webFormOptions={\n          <WebFormFieldOptions\n            webFields={webFields}\n          />\n        }\n      />\n      <WebFormList webFields={webFields} removeFromList={removeFromList} />\n      <WebFormButtons webFields={webFields}/>\n    </>\n  );\n};\n\nexport default WebForm;\n"]},"metadata":{},"sourceType":"module"}