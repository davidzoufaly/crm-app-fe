{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport ShowRecordsNumber from \"../components/ShowRecordsNumber\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport languages from \"../library/languages\";\n\nconst Dashboard = ({\n  clientData,\n  fieldData,\n  emailsData,\n  Context\n}) => {\n  const router = useRouter();\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n  const context = useContext(Context);\n  useEffect(() => {\n    const title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n  }, [router]);\n  const h1 = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString();\n  return !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, h1), __jsx(ShowRecordsNumber, {\n    data: context.clientData,\n    string: languages.en.clientsSaved,\n    buttonString: languages.en.clients,\n    link: \"/clients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(ShowRecordsNumber, {\n    data: fieldData,\n    string: languages.en.fieldsSaved,\n    buttonString: languages.en.customClientFields,\n    link: \"/settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(ShowRecordsNumber, {\n    data: emailsData,\n    string: languages.en.emailsSent,\n    buttonString: languages.en.emails,\n    link: \"/emails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nDashboard.getInitialProps = async () => {\n  const resClientCount = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/clients/count`,\n    responseType: \"json\"\n  });\n  const clientData = await resClientCount.data;\n  const resFieldsData = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/fields/count`,\n    responseType: \"json\"\n  });\n  const fieldData = await resFieldsData.data;\n  const resEmailsCount = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/emails/count`,\n    responseType: \"json\"\n  });\n  const emailsData = await resEmailsCount.data;\n  return {\n    clientData,\n    fieldData,\n    emailsData\n  };\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx"],"names":["Header","axios","useEffect","useState","useContext","useRouter","ShowRecordsNumber","LoadingSpinner","globalVars","stringMethods","languages","Dashboard","clientData","fieldData","emailsData","Context","router","initialized","setInitialized","context","title","pathname","removeSlash","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","h1","en","clientsSaved","clients","fieldsSaved","customClientFields","emailsSent","emails","getInitialProps","resClientCount","method","url","serverURL","responseType","data","resFieldsData","resEmailsCount"],"mappings":"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","sourcesContent":["import Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport ShowRecordsNumber from \"../components/ShowRecordsNumber\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport globalVars from \"../library/globalVariables\";\nimport stringMethods from \"../library/stringMethods\";\nimport languages from \"../library/languages\";\n\nconst Dashboard = ({ clientData, fieldData, emailsData, Context }: any) => {\n  const router = useRouter();\n  const [initialized, setInitialized] = useState(false);\n  const context = useContext(Context);\n\n  useEffect(() => {\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  return !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <h1>{h1}</h1>\n      <ShowRecordsNumber\n        data={context.clientData}\n        string={languages.en.clientsSaved}\n        buttonString={languages.en.clients}\n        link={\"/clients\"}\n      />\n      <ShowRecordsNumber\n        data={fieldData}\n        string={languages.en.fieldsSaved}\n        buttonString={languages.en.customClientFields}\n        link={\"/settings\"}\n      />\n      <ShowRecordsNumber\n        data={emailsData}\n        string={languages.en.emailsSent}\n        buttonString={languages.en.emails}\n        link={\"/emails\"}\n      />\n    </div>\n  );\n};\n\nDashboard.getInitialProps = async () => {\n  const resClientCount = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/clients/count`,\n    responseType: \"json\"\n  });\n  const clientData = await resClientCount.data;\n\n  const resFieldsData = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/fields/count`,\n    responseType: \"json\"\n  });\n  const fieldData = await resFieldsData.data;\n\n  const resEmailsCount = await axios({\n    method: \"GET\",\n    url: `${globalVars.serverURL}/emails/count`,\n    responseType: \"json\"\n  })\n  const emailsData = await resEmailsCount.data;\n\n\n  return { clientData, fieldData, emailsData };\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}