{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport ShowRecordsNumber from \"../components/RecordsNumber\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\n\nconst Dashboard = ({\n  clientData,\n  fieldData\n}) => {\n  const router = useRouter();\n  const {\n    0: headingOne,\n    1: setHeadingOne\n  } = useState(\"\");\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n  useEffect(() => {\n    setHeadingOne(new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString());\n    const title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n  });\n\n  if (!initialized) {\n    return \"Loading...\";\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, headingOne), __jsx(ShowRecordsNumber, {\n    data: clientData.data,\n    string: \"clients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(ShowRecordsNumber, {\n    data: fieldData.data,\n    string: \"fields\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nDashboard.getInitialProps = async () => {\n  const resClientCount = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/count`,\n    responseType: \"json\"\n  });\n  const clientData = await resClientCount.data;\n  const resFieldsData = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields/count`,\n    responseType: \"json\"\n  });\n  const fieldData = await resFieldsData.data;\n  return {\n    clientData,\n    fieldData\n  };\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/dashboard.tsx"],"names":["Header","axios","useEffect","useState","useRouter","ShowRecordsNumber","stringMethods","globalVars","Dashboard","clientData","fieldData","router","headingOne","setHeadingOne","initialized","setInitialized","pathname","removeSlash","firstCharUpperCase","getString","title","addStringToEnd","titleSubText","document","data","getInitialProps","resClientCount","method","url","serverURL","responseType","resFieldsData"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAD,KAAmC;AACnD,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAA,OAACQ,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACW,WAAD;AAAA,OAAcC;AAAd,MAAgCZ,QAAQ,CAAC,KAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,aAAa,CACX,IAAIP,aAAJ,CAAkBK,MAAM,CAACK,QAAzB,EACGC,WADH,GAEGC,kBAFH,GAGGC,SAHH,EADW,CAAb;AAMA,UAAMC,KAAK,GAAG,IAAId,aAAJ,CAAkBK,MAAM,CAACK,QAAzB,EACXC,WADW,GAEXC,kBAFW,GAGXG,cAHW,CAGId,UAAU,CAACe,YAHf,EAIXH,SAJW,EAAd;AAKAI,IAAAA,QAAQ,CAACH,KAAT,GAAiBA,KAAjB;AACAL,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAdQ,CAAT;;AAgBA,MAAI,CAACD,WAAL,EAAkB;AAChB,WAAO,YAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,UAAL,CAFF,EAGE,MAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEH,UAAU,CAACe,IAApC;AAA0C,IAAA,MAAM,EAAE,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEd,SAAS,CAACc,IAAnC;AAAyC,IAAA,MAAM,EAAE,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAjCD;;AAmCAhB,SAAS,CAACiB,eAAV,GAA4B,YAAY;AACtC,QAAMC,cAAc,GAAG,MAAMzB,KAAK,CAAC;AACjC0B,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,GAAG,EAAG,GAAErB,UAAU,CAACsB,SAAU,gBAFI;AAGjCC,IAAAA,YAAY,EAAE;AAHmB,GAAD,CAAlC;AAKA,QAAMrB,UAAU,GAAG,MAAMiB,cAAc,CAACF,IAAxC;AAEA,QAAMO,aAAa,GAAG,MAAM9B,KAAK,CAAC;AAChC0B,IAAAA,MAAM,EAAE,KADwB;AAEhCC,IAAAA,GAAG,EAAG,GAAErB,UAAU,CAACsB,SAAU,eAFG;AAGhCC,IAAAA,YAAY,EAAE;AAHkB,GAAD,CAAjC;AAKA,QAAMpB,SAAS,GAAG,MAAMqB,aAAa,CAACP,IAAtC;AACA,SAAO;AAAEf,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAP;AACD,CAfD;;AAiBA,eAAeF,SAAf","sourcesContent":["import Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport ShowRecordsNumber from \"../components/RecordsNumber\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\n\nconst Dashboard = ({clientData, fieldData} : any) => {\n  const router = useRouter();\n  const [headingOne, setHeadingOne] = useState(\"\");\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    setHeadingOne(\n      new stringMethods(router.pathname)\n        .removeSlash()\n        .firstCharUpperCase()\n        .getString()\n    );\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n  });\n\n  if (!initialized) {\n    return \"Loading...\";\n  }\n\n  return (\n    <div>\n      <Header />\n      <h1>{headingOne}</h1>\n      <ShowRecordsNumber data={clientData.data} string={\"clients\"} />\n      <ShowRecordsNumber data={fieldData.data} string={\"fields\"}/>\n    </div>\n  );\n};\n\nDashboard.getInitialProps = async () => {\n  const resClientCount = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/count`,\n    responseType: \"json\"\n  });\n  const clientData = await resClientCount.data;\n\n  const resFieldsData = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields/count`,\n    responseType: \"json\"\n  });\n  const fieldData = await resFieldsData.data;\n  return { clientData, fieldData };\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}