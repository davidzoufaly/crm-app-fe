{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormButtons.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport globalVars from \"../../../library/globalVariables\";\nimport languages from \"../../../library/languages\";\nimport { useContext, useRef } from \"react\";\nimport { Button, Box, Typography } from \"@material-ui/core\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nvar WebFormButtons = function WebFormButtons(_ref) {\n  var webFields = _ref.webFields;\n  var user = useContext(UserContext);\n  var showTip = useRef(null);\n\n  var onDownload =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, url, link;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios({\n                method: \"GET\",\n                url: \"\".concat(globalVars.serverURL, \"/webform/\"),\n                params: {\n                  key: user.user.userkey\n                },\n                data: webFields,\n                responseType: \"blob\"\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return window.URL.createObjectURL(new Blob([res.data]));\n\n            case 5:\n              url = _context.sent;\n              _context.next = 8;\n              return document.createElement(\"a\");\n\n            case 8:\n              link = _context.sent;\n              link.href = url;\n              link.setAttribute(\"download\", \"crm-form.js\");\n              document.body.appendChild(link);\n              link.click();\n              showTip.current.style.display = \"block\";\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onDownload() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    mb: \"1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: onDownload,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: __jsx(GetAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, languages.en.donwloadForm)), __jsx(Typography, {\n    ref: showTip,\n    style: {\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, languages.en.webFormTip));\n};\n\nexport default WebFormButtons;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormButtons.tsx"],"names":["axios","UserContext","globalVars","languages","useContext","useRef","Button","Box","Typography","GetAppIcon","WebFormButtons","webFields","user","showTip","onDownload","method","url","serverURL","params","key","userkey","data","responseType","res","window","URL","createObjectURL","Blob","document","createElement","link","href","setAttribute","body","appendChild","click","current","style","display","en","donwloadForm","webFormTip"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,OAAnC;AACA,SAAQC,MAAR,EAAgBC,GAAhB,EAAqBC,UAArB,QAAsC,mBAAtC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAwB;AAAA,MAArBC,SAAqB,QAArBA,SAAqB;AAE7C,MAAMC,IAAI,GAAGR,UAAU,CAACH,WAAD,CAAvB;AACA,MAAMY,OAAO,GAAGR,MAAM,CAAC,IAAD,CAAtB;;AAEA,MAAMS,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCd,KAAK,CAAC;AACtBe,gBAAAA,MAAM,EAAE,KADc;AAEtBC,gBAAAA,GAAG,YAAKd,UAAU,CAACe,SAAhB,cAFmB;AAGtBC,gBAAAA,MAAM,EAAE;AAACC,kBAAAA,GAAG,EAAEP,IAAI,CAACA,IAAL,CAAUQ;AAAhB,iBAHc;AAItBC,gBAAAA,IAAI,EAAEV,SAJgB;AAKtBW,gBAAAA,YAAY,EAAE;AALQ,eAAD,CADN;;AAAA;AACXC,cAAAA,GADW;AAAA;AAAA,qBAQCC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAACJ,GAAG,CAACF,IAAL,CAAT,CAA3B,CARD;;AAAA;AAQXL,cAAAA,GARW;AAAA;AAAA,qBASEY,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CATF;;AAAA;AASXC,cAAAA,IATW;AAUjBA,cAAAA,IAAI,CAACC,IAAL,GAAYf,GAAZ;AACAc,cAAAA,IAAI,CAACE,YAAL,CAAkB,UAAlB,EAA8B,aAA9B;AACAJ,cAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BJ,IAA1B;AACAA,cAAAA,IAAI,CAACK,KAAL;AAEAtB,cAAAA,OAAO,CAACuB,OAAR,CAAgBC,KAAhB,CAAsBC,OAAtB,GAAgC,OAAhC;;AAfiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVxB,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAkBA,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,cAAc,EAAC,UAAnC;AAA8C,IAAA,EAAE,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,UAAjB;AAA6B,IAAA,OAAO,EAAC,WAArC;AAAiD,IAAA,KAAK,EAAC,SAAvD;AAAiE,IAAA,SAAS,EAAE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4FX,SAAS,CAACoC,EAAV,CAAaC,YAAzG,CADF,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,GAAG,EAAE3B,OAAjB;AAA0B,IAAA,KAAK,EAAE;AAACyB,MAAAA,OAAO,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDnC,SAAS,CAACoC,EAAV,CAAaE,UAAlE,CAJF,CADF;AAQD,CA/BD;;AAiCA,eAAe/B,cAAf","sourcesContent":["import axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport globalVars from \"../../../library/globalVariables\";\nimport languages from \"../../../library/languages\";\nimport { useContext, useRef } from \"react\";\nimport {Button, Box, Typography} from \"@material-ui/core\"\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst WebFormButtons = ({ webFields }: any) => {\n\n  const user = useContext(UserContext);\n  const showTip = useRef(null);\n\n  const onDownload = async () => {\n    const res = await axios({\n      method: \"GET\",\n      url: `${globalVars.serverURL}/webform/`,\n      params: {key: user.user.userkey},\n      data: webFields,\n      responseType: \"blob\"\n    });\n    const url = await window.URL.createObjectURL(new Blob([res.data]));\n    const link = await document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"crm-form.js\");\n    document.body.appendChild(link);\n    link.click();\n\n    showTip.current.style.display = \"block\";\n  };\n\n  return (\n    <>\n      <Box display=\"flex\" justifyContent=\"flex-end\" mb=\"1rem\">\n        <Button onClick={onDownload} variant=\"contained\" color=\"primary\" startIcon={<GetAppIcon/>}>{languages.en.donwloadForm}</Button>\n      </Box>\n      <Typography ref={showTip} style={{display: \"none\"}}>{languages.en.webFormTip}</Typography>\n    </>\n  );\n};\n\nexport default WebFormButtons;\n"]},"metadata":{},"sourceType":"module"}