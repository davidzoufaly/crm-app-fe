{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/clientTable/TableBody.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport uniqid from \"uniqid\"; //TODO Filtrují se i polé které neexistujou na straně body\n\nconst TableBody = ({\n  clients,\n  reverse,\n  sort,\n  fields,\n  handleCheckbox\n}) => {\n  if (fields.some(e => e.fieldName === sort && e.fieldType === \"number\")) {\n    if (reverse) {\n      clients.sort((a, b) => b[sort] - a[sort]);\n    } else {\n      clients.sort((a, b) => a[sort] - b[sort]);\n    }\n  } else {\n    if (reverse) {\n      clients.sort((a, b) => b[sort] > a[sort] ? -1 : 1);\n    } else {\n      clients.sort((a, b) => b[sort] < a[sort] ? -1 : 1);\n    }\n  }\n\n  const fieldNames = [];\n  fields.forEach(e => fieldNames.push(e.fieldName, e.fieldType));\n  const tableClients = clients.map(e => {\n    const tableItem = () => {\n      let items = [];\n\n      for (let key in e) {\n        //show only clients data with existing fields\n        e[key] !== e._id && fieldNames.includes(key) ? items.push(__jsx(\"td\", {\n          key: uniqid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, e[key])) : null;\n      } // add checkbox at first position\n\n\n      items.unshift(__jsx(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        checked: e.isChecked === undefined ? false : e.isChecked,\n        onChange: () => handleCheckbox(e._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))); // add profile link at last position\n\n      items.push();\n      return items;\n    };\n\n    return __jsx(\"tr\", {\n      key: e._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: e.isChecked === undefined ? false : e.isChecked,\n      onChange: () => handleCheckbox(e._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), tableItem(), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/clients/[id]\",\n      as: `/clients/${e._id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Go\"))));\n  });\n  return tableClients;\n};\n\nexport default TableBody;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/clientTable/TableBody.tsx"],"names":["Link","uniqid","TableBody","clients","reverse","sort","fields","handleCheckbox","some","e","fieldName","fieldType","a","b","fieldNames","forEach","push","tableClients","map","tableItem","items","key","_id","includes","unshift","isChecked","undefined"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AAUA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA,IAApB;AAA0BC,EAAAA,MAA1B;AAAkCC,EAAAA;AAAlC,CAAD,KAA+D;AAC7E,MAAGD,MAAM,CAACE,IAAP,CAAYC,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgBL,IAAhB,IAAwBI,CAAC,CAACE,SAAF,KAAgB,QAAzD,CAAH,EAAuE;AACrE,QAAGP,OAAH,EAAY;AACVD,MAAAA,OAAO,CAACE,IAAR,CAAa,CAACO,CAAD,EAASC,CAAT,KAAqBA,CAAC,CAACR,IAAD,CAAD,GAAUO,CAAC,CAACP,IAAD,CAA7C;AACD,KAFD,MAEO;AACLF,MAAAA,OAAO,CAACE,IAAR,CAAa,CAACO,CAAD,EAASC,CAAT,KAAqBD,CAAC,CAACP,IAAD,CAAD,GAAUQ,CAAC,CAACR,IAAD,CAA7C;AACD;AACF,GAND,MAMO;AACL,QAAGD,OAAH,EAAY;AACVD,MAAAA,OAAO,CAACE,IAAR,CAAa,CAACO,CAAD,EAASC,CAAT,KAAqBA,CAAC,CAACR,IAAD,CAAD,GAAUO,CAAC,CAACP,IAAD,CAAX,GAAoB,CAAC,CAArB,GAAyB,CAA3D;AACD,KAFD,MAEO;AACLF,MAAAA,OAAO,CAACE,IAAR,CAAa,CAACO,CAAD,EAASC,CAAT,KAAqBA,CAAC,CAACR,IAAD,CAAD,GAAUO,CAAC,CAACP,IAAD,CAAX,GAAoB,CAAC,CAArB,GAAyB,CAA3D;AACD;AACJ;;AAED,QAAMS,UAAU,GAAG,EAAnB;AACAR,EAAAA,MAAM,CAACS,OAAP,CAAgBN,CAAD,IAAaK,UAAU,CAACE,IAAX,CAAgBP,CAAC,CAACC,SAAlB,EAA6BD,CAAC,CAACE,SAA/B,CAA5B;AAEA,QAAMM,YAAY,GAAGd,OAAO,CAACe,GAAR,CAAaT,CAAD,IAAY;AAC3C,UAAMU,SAAS,GAAG,MAAM;AACtB,UAAIC,KAAK,GAAG,EAAZ;;AAEA,WAAK,IAAIC,GAAT,IAAgBZ,CAAhB,EAAmB;AACjB;AACAA,QAAAA,CAAC,CAACY,GAAD,CAAD,KAAWZ,CAAC,CAACa,GAAb,IAAoBR,UAAU,CAACS,QAAX,CAAoBF,GAApB,CAApB,GAA+CD,KAAK,CAACJ,IAAN,CAAW;AAAI,UAAA,GAAG,EAAEf,MAAM,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBQ,CAAC,CAACY,GAAD,CAArB,CAAX,CAA/C,GAA8F,IAA9F;AACD,OANqB,CAOtB;;;AACAD,MAAAA,KAAK,CAACI,OAAN,CAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEf,CAAC,CAACgB,SAAF,KAAgBC,SAAhB,GAA4B,KAA5B,GAAoCjB,CAAC,CAACgB,SAAtE;AAAiF,QAAA,QAAQ,EAAE,MAAMlB,cAAc,CAACE,CAAC,CAACa,GAAH,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAAd,EARsB,CAStB;;AACAF,MAAAA,KAAK,CAACJ,IAAN;AACA,aAAOI,KAAP;AACD,KAZD;;AAcA,WACE;AAAI,MAAA,GAAG,EAAEX,CAAC,CAACa,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAEb,CAAC,CAACgB,SAAF,KAAgBC,SAAhB,GAA4B,KAA5B,GAAoCjB,CAAC,CAACgB,SAAtE;AAAiF,MAAA,QAAQ,EAAE,MAAMlB,cAAc,CAACE,CAAC,CAACa,GAAH,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADF,EAEGH,SAAS,EAFZ,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAA2B,MAAA,EAAE,EAAG,YAAWV,CAAC,CAACa,GAAI,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CAHF,CADF;AAWD,GA1BoB,CAArB;AA2BA,SAAOL,YAAP;AACD,CA9CD;;AAgDA,eAAef,SAAf","sourcesContent":["import Link from \"next/link\";\nimport uniqid from \"uniqid\";\n\n//TODO Filtrují se i polé které neexistujou na straně body\n\ninterface IProps {\n  clients: any;\n  reverse: boolean;\n  sort: string;\n  fields: any;\n  handleCheckbox: any;\n}\n\nconst TableBody = ({ clients, reverse, sort, fields, handleCheckbox}: IProps) => {\n    if(fields.some(e => e.fieldName === sort && e.fieldType === \"number\")) {\n      if(reverse) {\n        clients.sort((a: any, b: any) => (b[sort] - a[sort]))\n      } else {\n        clients.sort((a: any, b: any) => (a[sort] - b[sort]));\n      }\n    } else {\n      if(reverse) {\n        clients.sort((a: any, b: any) => (b[sort] > a[sort] ? -1 : 1))\n      } else {\n        clients.sort((a: any, b: any) => (b[sort] < a[sort] ? -1 : 1));\n      }\n  }\n  \n  const fieldNames = [];\n  fields.forEach((e : any) => fieldNames.push(e.fieldName, e.fieldType));\n\n  const tableClients = clients.map((e: any) => {\n    const tableItem = () => {\n      let items = [];\n\n      for (let key in e) {\n        //show only clients data with existing fields\n        e[key] !== e._id && fieldNames.includes(key) ? items.push(<td key={uniqid()}>{e[key]}</td>) : null;\n      }\n      // add checkbox at first position\n      items.unshift(<td><input type=\"checkbox\" checked={e.isChecked === undefined ? false : e.isChecked} onChange={() => handleCheckbox(e._id)}/></td>)\n      // add profile link at last position\n      items.push()\n      return items;\n    };\n\n    return (\n      <tr key={e._id}>\n        <td><input type=\"checkbox\" checked={e.isChecked === undefined ? false : e.isChecked} onChange={() => handleCheckbox(e._id)}/></td>\n        {tableItem()}\n        <td>\n          <Link href=\"/clients/[id]\" as={`/clients/${e._id}`}>\n            <a>Go</a>\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n  return tableClients;\n};\n\nexport default TableBody;\n"]},"metadata":{},"sourceType":"module"}