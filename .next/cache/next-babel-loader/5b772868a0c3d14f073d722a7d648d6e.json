{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/ClientForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport uniqid from \"uniqid\";\n\nvar ClientForm = function ClientForm(_ref) {\n  var fields = _ref.fields,\n      _onChange = _ref.onChange,\n      newClient = _ref.newClient;\n  var inputs = fields.map(function (e) {\n    __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    }, e.fieldName);\n\n    if (e.fieldName !== \"dateAdded\" && e.fieldName !== \"dateModified\") {\n      if (e.fieldType === \"text\") {\n        return __jsx(\"input\", {\n          type: \"text\",\n          id: e.fieldName,\n          onChange: function onChange() {\n            return _onChange(e.fieldName, event);\n          },\n          value: newClient[e.fieldName],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 8\n          },\n          __self: this\n        });\n      } else if (e.fieldType === \"number\") {\n        return __jsx(\"input\", {\n          type: \"number\",\n          id: e.fieldName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        });\n      } else if (e.fieldType === \"select\") {\n        return __jsx(\"select\", {\n          id: e.fieldName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, e.fieldOptions.map(function (e) {\n          return __jsx(\"option\", {\n            value: e.value,\n            key: uniqid(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16\n            },\n            __self: this\n          }, e.value);\n        }));\n      }\n\n      ;\n    }\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, inputs);\n};\n\nexport default ClientForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/ClientForm.tsx"],"names":["uniqid","ClientForm","fields","onChange","newClient","inputs","map","e","fieldName","fieldType","event","fieldOptions","value"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA0C;AAAA,MAAvCC,MAAuC,QAAvCA,MAAuC;AAAA,MAA/BC,SAA+B,QAA/BA,QAA+B;AAAA,MAArBC,SAAqB,QAArBA,SAAqB;AAC3D,MAAMC,MAAM,GAAGH,MAAM,CAACI,GAAP,CAAW,UAACC,CAAD,EAAY;AACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,CAAC,CAACC,SAAN;;AACA,QAAID,CAAC,CAACC,SAAF,KAAgB,WAAhB,IAA+BD,CAAC,CAACC,SAAF,KAAgB,cAAnD,EAAmE;AAC/D,UAAID,CAAC,CAACE,SAAF,KAAgB,MAApB,EAA4B;AAC1B,eAAO;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAEF,CAAC,CAACC,SAAzB;AAAoC,UAAA,QAAQ,EAAE;AAAA,mBAAML,SAAQ,CAACI,CAAC,CAACC,SAAH,EAAcE,KAAd,CAAd;AAAA,WAA9C;AAAkF,UAAA,KAAK,EAAEN,SAAS,CAACG,CAAC,CAACC,SAAH,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO,IAAID,CAAC,CAACE,SAAF,KAAgB,QAApB,EAA8B;AACnC,eAAO;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAEF,CAAC,CAACC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,MAEA,IAAID,CAAC,CAACE,SAAF,KAAgB,QAApB,EAA8B;AACnC,eACE;AAAQ,UAAA,EAAE,EAAEF,CAAC,CAACC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,CAAC,CAACI,YAAF,CAAeL,GAAf,CAAmB,UAACC,CAAD,EAAY;AAC9B,iBACE;AAAQ,YAAA,KAAK,EAAEA,CAAC,CAACK,KAAjB;AAAwB,YAAA,GAAG,EAAEZ,MAAM,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGO,CAAC,CAACK,KADL,CADF;AAKD,SANA,CADH,CADF;AAWH;;AAAA;AACF;AACF,GArBc,CAAf;AAuBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,MAAN,CAAP;AACD,CAzBD;;AA2BA,eAAeJ,UAAf","sourcesContent":["import uniqid from \"uniqid\";\n\nconst ClientForm = ({ fields, onChange, newClient }: any) => {\n  const inputs = fields.map((e: any) => {\n    <p>{e.fieldName}</p>\n    if (e.fieldName !== \"dateAdded\" && e.fieldName !== \"dateModified\") {\n        if (e.fieldType === \"text\") {\n          return <input type=\"text\" id={e.fieldName} onChange={() => onChange(e.fieldName, event)} value={newClient[e.fieldName]}/>;\n        } else if (e.fieldType === \"number\") {\n          return <input type=\"number\" id={e.fieldName}/>;\n        } else if (e.fieldType === \"select\") {\n          return (\n            <select id={e.fieldName}>\n              {e.fieldOptions.map((e: any) => {\n                return (\n                  <option value={e.value} key={uniqid()}>\n                    {e.value}\n                  </option>\n                );\n              })}\n            </select>\n          );\n      };\n    }\n  });\n\n  return <div>{inputs}</div>;\n};\n\nexport default ClientForm;\n"]},"metadata":{},"sourceType":"module"}