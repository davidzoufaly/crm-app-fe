{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/SingleClientData.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar SingleClientData = function SingleClientData() {\n  var list = [];\n  fieldsData.map(function (field) {\n    switch (field.fieldType) {\n      case \"text\":\n        list.push(__jsx(\"li\", {\n          key: field.fieldName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 7\n          },\n          __self: this\n        }, new stringMethods(field.fieldName).camelStringToText().firstCharUpperCase().getString(), __jsx(\"textarea\", {\n          value: client[field.fieldName],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        })));\n        break;\n\n      case \"number\":\n        list.push(__jsx(\"li\", {\n          key: field.fieldName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, new stringMethods(field.fieldName).camelStringToText().firstCharUpperCase().getString(), __jsx(\"input\", {\n          type: \"number\",\n          value: client[field.fieldName],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        })));\n        break;\n\n      case \"select\":\n        list.push(__jsx(\"li\", {\n          key: field.fieldName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, new stringMethods(field.fieldName).camelStringToText().firstCharUpperCase().getString(), __jsx(\"select\", {\n          value: client[field.fieldName],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, field.fieldOptions.map(function (option) {\n          return __jsx(\"option\", {\n            key: option.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, option.value);\n        }))));\n    }\n  });\n  return SingleClientData;\n};","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/SingleClientData.tsx"],"names":["SingleClientData","list","fieldsData","map","field","fieldType","push","fieldName","stringMethods","camelStringToText","firstCharUpperCase","getString","client","fieldOptions","option","id","value"],"mappings":";;;;AAAA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,MAAMC,IAAI,GAAG,EAAb;AACAC,EAAAA,UAAU,CAACC,GAAX,CAAe,UAAAC,KAAK,EAAI;AACtB,YAAQA,KAAK,CAACC,SAAd;AACE,WAAK,MAAL;AACEJ,QAAAA,IAAI,CAACK,IAAL,CACE;AAAI,UAAA,GAAG,EAAEF,KAAK,CAACG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,IAAIC,aAAJ,CAAkBJ,KAAK,CAACG,SAAxB,EACEE,iBADF,GAEEC,kBAFF,GAGEC,SAHF,EADH,EAKE;AAAU,UAAA,KAAK,EAAEC,MAAM,CAACR,KAAK,CAACG,SAAP,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CADF;AASA;;AACF,WAAK,QAAL;AACEN,QAAAA,IAAI,CAACK,IAAL,CACE;AAAI,UAAA,GAAG,EAAEF,KAAK,CAACG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,IAAIC,aAAJ,CAAkBJ,KAAK,CAACG,SAAxB,EACEE,iBADF,GAEEC,kBAFF,GAGEC,SAHF,EADH,EAKE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAEC,MAAM,CAACR,KAAK,CAACG,SAAP,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CADF;AASA;;AACF,WAAK,QAAL;AACEN,QAAAA,IAAI,CAACK,IAAL,CACE;AAAI,UAAA,GAAG,EAAEF,KAAK,CAACG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,IAAIC,aAAJ,CAAkBJ,KAAK,CAACG,SAAxB,EACEE,iBADF,GAEEC,kBAFF,GAGEC,SAHF,EADH,EAKE;AAAQ,UAAA,KAAK,EAAEC,MAAM,CAACR,KAAK,CAACG,SAAP,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGH,KAAK,CAACS,YAAN,CAAmBV,GAAnB,CAAuB,UAAAW,MAAM;AAAA,iBAC5B;AAAQ,YAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyBD,MAAM,CAACE,KAAhC,CAD4B;AAAA,SAA7B,CADH,CALF,CADF;AAxBJ;AAsCD,GAvCD;AAwCA,SAAOhB,gBAAP;AACD,CA3CH","sourcesContent":["const SingleClientData = () => {\n    const list = [];\n    fieldsData.map(field => {\n      switch (field.fieldType) {\n        case \"text\":\n          list.push(\n            <li key={field.fieldName}>\n              {new stringMethods(field.fieldName)\n                .camelStringToText()\n                .firstCharUpperCase()\n                .getString()}\n              <textarea value={client[field.fieldName]} />\n            </li>\n          );\n          break;\n        case \"number\":\n          list.push(\n            <li key={field.fieldName}>\n              {new stringMethods(field.fieldName)\n                .camelStringToText()\n                .firstCharUpperCase()\n                .getString()}\n              <input type=\"number\" value={client[field.fieldName]} />\n            </li>\n          );\n          break;\n        case \"select\":\n          list.push(\n            <li key={field.fieldName}>\n              {new stringMethods(field.fieldName)\n                .camelStringToText()\n                .firstCharUpperCase()\n                .getString()}\n              <select value={client[field.fieldName]}>\n                {field.fieldOptions.map(option => (\n                  <option key={option.id}>{option.value}</option>\n                ))}\n              </select>\n            </li>\n          );\n      }\n    });\n    return SingleClientData;\n  };"]},"metadata":{},"sourceType":"script"}