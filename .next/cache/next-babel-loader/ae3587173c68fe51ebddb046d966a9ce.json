{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormOptionSelect.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nconst webFormOptionSelect = ({\n  webFields,\n  addVisibleSelect,\n  WebFormOptions\n}) => {\n  const {\n    0: showOptions,\n    1: setShowOptions\n  } = useState(false);\n\n  const showOptionsOnClick = () => {\n    setShowOptions(true);\n  };\n\n  const insertIntoForm = webFields.map(field => !showOptions ? field.pause ? __jsx(\"div\", {\n    key: field.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Should be \", __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, field.fieldName), \" visible in form?\"), __jsx(\"button\", {\n    id: field.fieldName,\n    onClick: addVisibleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"YES\"), __jsx(\"button\", {\n    onClick: showOptionsOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"NO\")) : null : null);\n  return __jsx(React.Fragment, null, insertIntoForm, showOptions && webFields.some(e => e.pause) ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Please select option, that will be auto assigned to clients from this form\"), WebFormOptions) : null);\n};\n\nexport default webFormOptionSelect;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebFormOptionSelect.tsx"],"names":["useState","webFormOptionSelect","webFields","addVisibleSelect","WebFormOptions","showOptions","setShowOptions","showOptionsOnClick","insertIntoForm","map","field","pause","id","fieldName","some","e"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,gBAAb;AAA+BC,EAAAA;AAA/B,CAAD,KAAqD;AAC/E,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCN,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMO,kBAAkB,GAAG,MAAM;AAC/BD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,QAAME,cAAc,GAAGN,SAAS,CAACO,GAAV,CAAcC,KAAK,IACxC,CAACL,WAAD,GACEK,KAAK,CAACC,KAAN,GACE;AAAK,IAAA,GAAG,EAAED,KAAK,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASF,KAAK,CAACG,SAAf,CADZ,sBADF,EAIE;AAAQ,IAAA,EAAE,EAAEH,KAAK,CAACG,SAAlB;AAA6B,IAAA,OAAO,EAAEV,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAOE;AAAQ,IAAA,OAAO,EAAEI,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADF,GAUI,IAXN,GAYI,IAbiB,CAAvB;AAgBA,SACE,4BACGC,cADH,EAEGH,WAAW,IAAIH,SAAS,CAACY,IAAV,CAAeC,CAAC,IAAIA,CAAC,CAACJ,KAAtB,CAAf,GACC,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFADF,EAKGP,cALH,CADD,GAQG,IAVN,CADF;AAcD,CArCD;;AAuCA,eAAeH,mBAAf","sourcesContent":["import { useState } from \"react\";\n\nconst webFormOptionSelect = ({ webFields, addVisibleSelect, WebFormOptions }) => {\n  const [showOptions, setShowOptions] = useState(false);\n\n  const showOptionsOnClick = () => {\n    setShowOptions(true);\n  };\n\n  const insertIntoForm = webFields.map(field =>\n    !showOptions ? (\n      field.pause ? (\n        <div key={field.id}>\n          <p>\n            Should be <strong>{field.fieldName}</strong> visible in form?\n          </p>\n          <button id={field.fieldName} onClick={addVisibleSelect}>\n            YES\n          </button>\n          <button onClick={showOptionsOnClick}>NO</button>\n        </div>\n      ) : null\n    ) : null\n  );\n\n  return (\n    <>\n      {insertIntoForm}\n      {showOptions && webFields.some(e => e.pause) ? (\n        <>\n          <p>\n            Please select option, that will be auto assigned to clients from\n            this form\n          </p>\n          {WebFormOptions}\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default webFormOptionSelect;\n"]},"metadata":{},"sourceType":"module"}