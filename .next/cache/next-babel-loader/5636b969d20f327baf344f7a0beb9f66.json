{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/webFormOptionSelect.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar webFormOptionSelect = function webFormOptionSelect(_ref) {\n  var optionSelect = _ref.optionSelect,\n      webFields = _ref.webFields,\n      addVisibleSelect = _ref.addVisibleSelect;\n\n  // vem vybrany select\n  // nabidni moznost jestli pridat do formu -> ano -> pridat do listu se stringem -> do stavu\n  // ne -> zobraz druhy select s options + string -> vloz do listu se stringem -> do stavu\n  var showPreselectOptions = function showPreselectOptions(e) {\n    webFields.map(function (field) {\n      return field.fieldName === e.target.id ? field.fieldOptions.map(function (option) {\n        return __jsx(\"option\", {\n          key: option.id,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 7\n          },\n          __self: this\n        }, option.value);\n      }) : null;\n    });\n  };\n\n  var insertIntoForm = webFields.map(function (field) {\n    return optionSelect === field.fieldName ? __jsx(\"div\", {\n      key: field.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Should be \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, field.fieldName), \" visible in form?\"), __jsx(\"button\", {\n      id: field.fieldName,\n      onClick: addVisibleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"YES\"), __jsx(\"button\", {\n      id: field.fieldName,\n      onClick: showPreselectOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"NO\")) : null;\n  });\n  return __jsx(React.Fragment, null, insertIntoForm);\n};\n\nexport default webFormOptionSelect;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/webFormOptionSelect.tsx"],"names":["webFormOptionSelect","optionSelect","webFields","addVisibleSelect","showPreselectOptions","e","map","field","fieldName","target","id","fieldOptions","option","value","insertIntoForm"],"mappings":";;;;AAAA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAmD;AAAA,MAAhDC,YAAgD,QAAhDA,YAAgD;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,gBAAuB,QAAvBA,gBAAuB;;AAC7E;AACA;AACA;AACA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,CAAD,EAAO;AAChCH,IAAAA,SAAS,CAACI,GAAV,CAAc,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,SAAN,KAAoBH,CAAC,CAACI,MAAF,CAASC,EAA7B,GACnBH,KAAK,CAACI,YAAN,CAAmBL,GAAnB,CAAuB,UAAAM,MAAM;AAAA,eAAI;AAAQ,UAAA,GAAG,EAAEA,MAAM,CAACF,EAApB;AAAwB,UAAA,KAAK,EAAEE,MAAM,CAACC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8CD,MAAM,CAACC,KAArD,CAAJ;AAAA,OAA7B,CADmB,GACsF,IAD1F;AAAA,KAAnB;AAEH,GAHD;;AAMA,MAAMC,cAAc,GAAGZ,SAAS,CAACI,GAAV,CAAc,UAAAC,KAAK;AAAA,WACxCN,YAAY,KAAKM,KAAK,CAACC,SAAvB,GACE;AAAK,MAAA,GAAG,EAAED,KAAK,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASH,KAAK,CAACC,SAAf,CAAb,sBADF,EAEE;AAAQ,MAAA,EAAE,EAAED,KAAK,CAACC,SAAlB;AAA6B,MAAA,OAAO,EAAEL,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,MAAA,EAAE,EAAEI,KAAK,CAACC,SAAlB;AAA6B,MAAA,OAAO,EAAEJ,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF,GAMI,IAPoC;AAAA,GAAnB,CAAvB;AAUA,SAAO,4BAAGU,cAAH,CAAP;AACD,CArBD;;AAuBA,eAAed,mBAAf","sourcesContent":["const webFormOptionSelect = ({ optionSelect, webFields, addVisibleSelect }) => {\n  // vem vybrany select\n  // nabidni moznost jestli pridat do formu -> ano -> pridat do listu se stringem -> do stavu\n  // ne -> zobraz druhy select s options + string -> vloz do listu se stringem -> do stavu\n  const showPreselectOptions = (e) => {\n      webFields.map(field => field.fieldName === e.target.id \n        ? field.fieldOptions.map(option => <option key={option.id} value={option.value}>{option.value}</option>) : null)\n  }\n  \n  \n  const insertIntoForm = webFields.map(field =>\n    optionSelect === field.fieldName ? (\n      <div key={field.id}>\n        <p>Should be <strong>{field.fieldName}</strong> visible in form?</p>\n        <button id={field.fieldName} onClick={addVisibleSelect}>YES</button>\n        <button id={field.fieldName} onClick={showPreselectOptions}>NO</button>\n      </div>\n    ) : null\n  );\n\n  return <>{insertIntoForm}</>;\n};\n\nexport default webFormOptionSelect;\n"]},"metadata":{},"sourceType":"module"}