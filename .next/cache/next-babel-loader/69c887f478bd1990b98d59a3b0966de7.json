{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport CustomFields from \"../components/CustomFields\";\n\nconst CustomClientFields = ({\n  fields,\n  refreshList\n}) => {\n  const {\n    0: displayComponent,\n    1: setDisplayComponent\n  } = useState(false);\n  const {\n    0: editedField\n  } = useState({\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false,\n    fieldOptions: []\n  });\n\n  const deleteField = async event => {\n    const id = event.target.id;\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const changeDisplayComponent = obj => {\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true); //TODO: POSÍLAT PO KLIKU NA EDIT FIELD\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Custom Client Fields\"), __jsx(CustomFields, {\n    deleteField: deleteField,\n    changeDisplayComponent: changeDisplayComponent,\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), !displayComponent ? __jsx(\"button\", {\n    onClick: changeDisplayComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Add new field\") : __jsx(AddOrEditField, {\n    fieldObject: editedField,\n    changeDisplayComponent: changeDisplayComponent,\n    refreshList: refreshList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n};\n\nexport default CustomClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx"],"names":["useState","AddOrEditField","axios","globalVars","CustomFields","CustomClientFields","fields","refreshList","displayComponent","setDisplayComponent","editedField","fieldName","fieldType","fieldPermanent","fieldOptions","deleteField","event","id","target","res","method","url","serverURL","responseType","resData","data","msg","changeDisplayComponent","obj"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAkC;AAC3D,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CT,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM;AAAA,OAACU;AAAD,MAAgBV,QAAQ,CAAC;AAC7BW,IAAAA,SAAS,EAAE,EADkB;AAE7BC,IAAAA,SAAS,EAAE,MAFkB;AAG7BC,IAAAA,cAAc,EAAE,KAHa;AAI7BC,IAAAA,YAAY,EAAE;AAJe,GAAD,CAA9B;;AAOA,QAAMC,WAAW,GAAG,MAAOC,KAAP,IAAuB;AACzC,UAAMC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaD,EAAxB;AACA,UAAME,GAAG,GAAG,MAAMjB,KAAK,CAAC;AACpBkB,MAAAA,MAAM,EAAE,QADY;AAEpBC,MAAAA,GAAG,EAAE,GAAElB,UAAU,CAACmB,SAAU,WAAUL,EAAG,EAFrB;AAGpBM,MAAAA,YAAY,EAAE;AAHM,KAAD,CAAvB;AAKA,UAAMC,OAAO,GAAG,MAAML,GAAG,CAACM,IAA1B;AACAD,IAAAA,OAAO,CAACE,GAAR,KAAgB,SAAhB,GAA4BnB,WAAW,EAAvC,GAA4C,IAA5C;AACD,GATD;;AAWA,QAAMoB,sBAAsB,GAAIC,GAAD,IAAiB;AAC9CpB,IAAAA,gBAAgB,GAAGC,mBAAmB,CAAC,KAAD,CAAtB,GAAgCA,mBAAmB,CAAC,IAAD,CAAnE,CAD8C,CAE9C;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,MAAC,YAAD;AAAc,IAAA,WAAW,EAAEM,WAA3B;AAAwC,IAAA,sBAAsB,EAAEY,sBAAhE;AAAwF,IAAA,MAAM,EAAErB,MAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGG,CAACE,gBAAD,GAAoB;AAAQ,IAAA,OAAO,EAAEmB,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAApB,GAAsF,MAAC,cAAD;AAAgB,IAAA,WAAW,EAAEjB,WAA7B;AAA0C,IAAA,sBAAsB,EAAEiB,sBAAlE;AAA0F,IAAA,WAAW,EAAEpB,WAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHzF,CADF;AAOD,CAhCD;;AAkCA,eAAeF,kBAAf","sourcesContent":["\nimport { useState } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport CustomFields from \"../components/CustomFields\";\n\nconst CustomClientFields = ({ fields, refreshList }: any) => {\n  const [displayComponent, setDisplayComponent] = useState(false);\n  const [editedField] = useState({\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false,\n    fieldOptions: []\n  })\n\n  const deleteField = async (event : any) => {\n    const id = event.target.id;\n    const res = await axios({\n        method: \"delete\",\n        url:`${globalVars.serverURL}/fields/${id}`,\n        responseType: \"json\"\n    })\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  }\n\n  const changeDisplayComponent = (obj ? : any) => {\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n    //TODO: POSÍLAT PO KLIKU NA EDIT FIELD\n  }\n\n  return (\n    <div>\n      <h2>Custom Client Fields</h2>\n      <CustomFields deleteField={deleteField} changeDisplayComponent={changeDisplayComponent} fields={fields}/>\n      {!displayComponent ? <button onClick={changeDisplayComponent}>Add new field</button> : <AddOrEditField fieldObject={editedField} changeDisplayComponent={changeDisplayComponent} refreshList={refreshList} />}\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"]},"metadata":{},"sourceType":"module"}