{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nvar CustomClientFields = function CustomClientFields(_ref) {\n  var fields = _ref.fields,\n      refreshList = _ref.refreshList;\n  var blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldOptions: []\n  };\n  useEffect(function () {\n    console.log(editedField);\n  });\n\n  var _useState = useState(blankFieldObject),\n      editedField = _useState[0],\n      setEditedField = _useState[1];\n\n  var _useState2 = useState(false),\n      displayComponent = _useState2[0],\n      setDisplayComponent = _useState2[1];\n\n  var fieldMethods = {\n    onNameChange: function onNameChange(event) {\n      setEditedField(_objectSpread({}, editedField, {\n        fieldName: event.target.value\n      }));\n    },\n    onSelectChange: function onSelectChange(event) {\n      setEditedField(_objectSpread({}, editedField, {\n        fieldType: event.target.options[event.target.options.selectedIndex].value\n      }));\n    },\n    handleOptionSpawn: function handleOptionSpawn() {\n      setEditedField(_objectSpread({}, editedField, {\n        fieldOptions: [].concat(_toConsumableArray(editedField.fieldOptions), [{\n          id: uniqid(),\n          value: \"\"\n        }])\n      }));\n    },\n    changeDisplayComponent: function changeDisplayComponent() {\n      displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n      setEditedField(blankFieldObject);\n    },\n    saveEditedField: function saveEditedField() {\n      var fieldIsUpdated =\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          var fieldName, fieldType, fieldOptions, id, res, data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  fieldName = editedField.fieldName, fieldType = editedField.fieldType, fieldOptions = editedField.fieldOptions, id = editedField.id;\n                  _context.next = 3;\n                  return axios({\n                    method: \"put\",\n                    url: \"\".concat(globalVars.serverURL, \"/fields/\").concat(id),\n                    data: {\n                      fieldName: fieldName,\n                      fieldType: fieldType,\n                      fieldOptions: fieldOptions\n                    },\n                    responseType: \"json\"\n                  });\n\n                case 3:\n                  res = _context.sent;\n                  _context.next = 6;\n                  return res.data;\n\n                case 6:\n                  data = _context.sent;\n\n                  if (data.msg === \"Success\") {\n                    reset();\n                  }\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function fieldIsUpdated() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      var fieldIsCreated =\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2() {\n          var res, data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return axios({\n                    method: \"post\",\n                    url: \"\".concat(globalVars.serverURL, \"/fields/\"),\n                    data: editedField,\n                    responseType: \"json\"\n                  });\n\n                case 2:\n                  res = _context2.sent;\n                  _context2.next = 5;\n                  return res.data;\n\n                case 5:\n                  data = _context2.sent;\n\n                  if (data.msg === \"Success\") {\n                    reset();\n                  }\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function fieldIsCreated() {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n\n      !editedField.id ? fieldIsCreated() : fieldIsUpdated();\n    }\n  };\n\n  var reset = function reset() {\n    setDisplayComponent(false);\n    setEditedField(blankFieldObject);\n    refreshList();\n  };\n\n  var deleteField =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(event) {\n      var id, res, resData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              id = event.target.id;\n              _context3.next = 3;\n              return axios({\n                method: \"delete\",\n                url: \"\".concat(globalVars.serverURL, \"/fields/\").concat(id),\n                responseType: \"json\"\n              });\n\n            case 3:\n              res = _context3.sent;\n              _context3.next = 6;\n              return res.data;\n\n            case 6:\n              resData = _context3.sent;\n              resData.msg === \"Success\" ? refreshList() : null;\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function deleteField(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onOptionChange = function onOptionChange(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(function (e) {\n        return event.target.id === e.id ? e.value = event.target.value : e;\n      })\n    }));\n  };\n\n  var onOptionDelete = function onOptionDelete(event) {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(function (e) {\n        return event.target.id !== e.id ? e : null;\n      })\n    }));\n  };\n\n  var setupEditedField = function setupEditedField(obj) {\n    setEditedField(obj); // setDisplayComponent(true);\n\n    fieldMethods.changeDisplayComponent();\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Custom Client Fields\"), __jsx(CustomFieldsList, {\n    deleteField: deleteField,\n    fields: fields,\n    setupEditedField: setupEditedField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), __jsx(AddOrEditField, {\n    editedField: editedField,\n    displayComponent: displayComponent,\n    refreshList: refreshList,\n    fieldMethods: fieldMethods,\n    onOptionChange: onOptionChange,\n    onOptionDelete: onOptionDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }));\n};\n\nexport default CustomClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx"],"names":["useState","useEffect","AddOrEditField","axios","globalVars","uniqid","CustomFieldsList","CustomClientFields","fields","refreshList","blankFieldObject","fieldName","fieldType","fieldOptions","console","log","editedField","setEditedField","displayComponent","setDisplayComponent","fieldMethods","onNameChange","event","target","value","onSelectChange","options","selectedIndex","handleOptionSpawn","id","changeDisplayComponent","saveEditedField","fieldIsUpdated","method","url","serverURL","data","responseType","res","msg","reset","fieldIsCreated","deleteField","resData","onOptionChange","filter","e","onOptionDelete","setupEditedField","obj"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({ fields, refreshList }: any) => {\n  const blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldOptions: []\n  };\n\n  useEffect(() => {\n    console.log(editedField);\n  });\n\n  const [editedField, setEditedField] = useState<any>(blankFieldObject);\n  const [displayComponent, setDisplayComponent] = useState(false);\n\n  const fieldMethods = {\n    onNameChange(event: any) {\n      setEditedField({ ...editedField, fieldName: event.target.value });\n    },\n    onSelectChange(event: any) {\n      setEditedField({\n        ...editedField,\n        fieldType:\n          event.target.options[event.target.options.selectedIndex].value\n      });\n    },\n    handleOptionSpawn() {\n      setEditedField({\n        ...editedField,\n        fieldOptions: [...editedField.fieldOptions, { id: uniqid(), value: \"\" }]\n      });\n    },\n    changeDisplayComponent() {\n      displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n      setEditedField(blankFieldObject);\n    },\n    saveEditedField() {\n      const fieldIsUpdated = async () => {\n        const { fieldName, fieldType, fieldOptions, id } = editedField;\n        const res = await axios({\n          method: \"put\",\n          url: `${globalVars.serverURL}/fields/${id}`,\n          data: { fieldName, fieldType, fieldOptions },\n          responseType: \"json\"\n        });\n        const data = await res.data;\n        if (data.msg === \"Success\") {\n          reset();\n        }\n      };\n\n      const fieldIsCreated = async () => {\n        const res = await axios({\n          method: \"post\",\n          url: `${globalVars.serverURL}/fields/`,\n          data: editedField,\n          responseType: \"json\"\n        });\n        const data = await res.data;\n        if (data.msg === \"Success\") {\n          reset();\n        }\n      };\n      !editedField.id ? fieldIsCreated() : fieldIsUpdated();\n    }\n  };\n\n  const reset = () => {\n    setDisplayComponent(false);\n    setEditedField(blankFieldObject);\n    refreshList();\n  }\n\n  const deleteField = async (event: any) => {\n    const id = event.target.id;\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const onOptionChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id === e.id ? (e.value = event.target.value) : e\n      )\n    });\n  };\n\n  const onOptionDelete = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id !== e.id ? e : null\n      )\n    });\n  };\n\n  const setupEditedField = (obj: any) => {\n    setEditedField(obj);\n    // setDisplayComponent(true);\n    fieldMethods.changeDisplayComponent()\n  };\n\n  return (\n    <div>\n      <h2>Custom Client Fields</h2>\n      <CustomFieldsList\n        deleteField={deleteField}\n        fields={fields}\n        setupEditedField={setupEditedField}\n      />\n      <AddOrEditField\n        editedField={editedField}\n        displayComponent={displayComponent}\n        refreshList={refreshList}\n        fieldMethods={fieldMethods}\n        onOptionChange={onOptionChange}\n        onOptionDelete={onOptionDelete}\n      />\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"]},"metadata":{},"sourceType":"module"}