{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/RegisterForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport TextInput from \"./TextInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\n\nvar RegisterForm = function RegisterForm() {\n  var _useState = useState({\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  }),\n      regUser = _useState[0],\n      setRegUser = _useState[1];\n\n  var onChange = function onChange(e) {\n    switch (e.target.name) {\n      case \"username\":\n        return setRegUser(_objectSpread({}, regUser, {\n          username: e.target.value\n        }));\n\n      case \"password\":\n        return setRegUser(_objectSpread({}, regUser, {\n          password: e.target.value\n        }));\n\n      case \"repeat-password\":\n        return setRegUser(_objectSpread({}, regUser, {\n          repeatPassword: e.target.value\n        }));\n    }\n  };\n\n  var sentFormToBe =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var username, password, userRes, userData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              username = regUser.username, password = regUser.password;\n              _context.next = 3;\n              return axios({\n                method: \"POST\",\n                data: {\n                  username: username,\n                  password: password\n                },\n                url: \"\".concat(globalVars.serverURL, \"/users\"),\n                responseType: \"json\"\n              });\n\n            case 3:\n              userRes = _context.sent;\n              _context.next = 6;\n              return userRes.data;\n\n            case 6:\n              userData = _context.sent;\n              console.log(userRes);\n\n              if (userData.msg === \"Success\") {\n                alert(languages.en.success);\n              } else {\n                alert(languages.en.somethingWentWrong);\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sentFormToBe() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onRegister = function onRegister() {\n    regUser.password === regUser.repeatPassword ? sentFormToBe() : alert(languages.en.passwordsDoesNotMatch);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Register\"), __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    onChange: onChange,\n    type: \"text\",\n    value: regUser.username,\n    text: \"username\",\n    title: new stringMethods(languages.en.username).firstCharUpperCase().getString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: regUser.password,\n    text: \"password\",\n    title: languages.en.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: regUser.repeatPassword,\n    text: \"repeat-password\",\n    title: new stringMethods(languages.en.repeatPassword).firstCharUpperCase().getString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(LoginButton, {\n    onClick: onRegister,\n    text: languages.en.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/homepage/RegisterForm.tsx"],"names":["useState","axios","TextInput","LoginButton","globalVars","languages","stringMethods","RegisterForm","username","password","repeatPassword","regUser","setRegUser","onChange","e","target","name","value","sentFormToBe","method","data","url","serverURL","responseType","userRes","userData","console","log","msg","alert","en","success","somethingWentWrong","onRegister","passwordsDoesNotMatch","firstCharUpperCase","getString","register"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport TextInput from \"./TextInput\";\nimport LoginButton from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\n\nconst RegisterForm = () => {\n  const [regUser, setRegUser] = useState({\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  });\n\n  const onChange = e => {\n    switch (e.target.name) {\n      case \"username\":\n        return setRegUser({ ...regUser, username: e.target.value });\n      case \"password\":\n        return setRegUser({ ...regUser, password: e.target.value });\n      case \"repeat-password\":\n        return setRegUser({ ...regUser, repeatPassword: e.target.value });\n    }\n  };\n\n  const sentFormToBe = async () => {\n    const {username, password } = regUser;\n\n    const userRes = await axios({\n      method: \"POST\",\n      data: {username, password},\n      url: `${globalVars.serverURL}/users`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n    console.log(userRes);\n    if (userData.msg === \"Success\") {\n      alert(languages.en.success);\n    } else {\n      alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  const onRegister = () => {\n      regUser.password === regUser.repeatPassword\n        ? sentFormToBe()\n        : alert(languages.en.passwordsDoesNotMatch)\n  };\n\n  return (\n    <>\n      <h2>Register</h2>\n      <form>\n        <TextInput\n          onChange={onChange}\n          type=\"text\"\n          value={regUser.username}\n          text=\"username\"\n          title={new stringMethods(languages.en.username)\n            .firstCharUpperCase()\n            .getString()}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={regUser.password}\n          text=\"password\"\n          title={languages.en.password}\n        />\n        <TextInput\n          onChange={onChange}\n          type=\"password\"\n          value={regUser.repeatPassword}\n          text=\"repeat-password\"\n          title={new stringMethods(languages.en.repeatPassword)\n            .firstCharUpperCase()\n            .getString()}\n        />\n        <LoginButton onClick={onRegister} text={languages.en.register} />\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}