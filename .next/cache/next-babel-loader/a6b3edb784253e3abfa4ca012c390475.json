{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webForm/WebFormVisibleOrNot.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { addVisibleSelect, showOptionsOnClick } from \"../../../actions/fieldsAction\";\nimport languages from \"../../../library/languages\";\nimport { Typography, Box, Button } from \"@material-ui/core\";\n\nconst WebFormVisibleOrNot = ({\n  state,\n  dispatch,\n  counter,\n  setCounter\n}) => {\n  const VisibleOrNot = state.map(({\n    fieldName,\n    fieldFormVisible,\n    _id,\n    pause\n  }) => fieldFormVisible === null ? pause ? __jsx(Box, {\n    key: _id,\n    mb: \"2rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    component: \"h4\",\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, languages.en.shouldBe, \" \", __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, fieldName), \" \", languages.en.visibleInForm, \"?\"), __jsx(Button, {\n    id: fieldName,\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      marginRight: \"1rem\"\n    },\n    onClick: () => addVisibleSelect(dispatch, setCounter, counter),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, languages.en.yes), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => showOptionsOnClick(dispatch),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, languages.en.no)) : null : null);\n  return __jsx(React.Fragment, null, VisibleOrNot);\n};\n\nexport default WebFormVisibleOrNot;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webForm/WebFormVisibleOrNot.tsx"],"names":["addVisibleSelect","showOptionsOnClick","languages","Typography","Box","Button","WebFormVisibleOrNot","state","dispatch","counter","setCounter","VisibleOrNot","map","fieldName","fieldFormVisible","_id","pause","en","shouldBe","visibleInForm","marginRight","yes","no"],"mappings":";;;AAAA,SAASA,gBAAT,EAA2BC,kBAA3B,QAAqD,+BAArD;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,QAAwC,mBAAxC;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA;AAA5B,CAAD,KAAoD;AAE9E,QAAMC,YAAY,GAAGJ,KAAK,CAACK,GAAN,CAAU,CAAC;AAACC,IAAAA,SAAD;AAAYC,IAAAA,gBAAZ;AAA8BC,IAAAA,GAA9B;AAAmCC,IAAAA;AAAnC,GAAD,KAC7BF,gBAAgB,KAAK,IAArB,GACEE,KAAK,GACH,MAAC,GAAD;AAAK,IAAA,GAAG,EAAED,GAAV;AAAe,IAAA,EAAE,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,OAAO,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,SAAS,CAACe,EAAV,CAAaC,QADhB,OAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASL,SAAT,CAD1B,OACwDX,SAAS,CAACe,EAAV,CAAaE,aADrE,MADF,EAIE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAEN,SAAZ;AAAuB,IAAA,OAAO,EAAC,WAA/B;AAA2C,IAAA,KAAK,EAAC,SAAjD;AAA2D,IAAA,KAAK,EAAE;AAACO,MAAAA,WAAW,EAAE;AAAd,KAAlE;AAAyF,IAAA,OAAO,EAAE,MAAMpB,gBAAgB,CAACQ,QAAD,EAAWE,UAAX,EAAuBD,OAAvB,CAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,SAAS,CAACe,EAAV,CAAaI,GADhB,CAJF,EAOE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA8C,IAAA,OAAO,EAAE,MAAMpB,kBAAkB,CAACO,QAAD,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4FN,SAAS,CAACe,EAAV,CAAaK,EAAzG,CAPF,CADG,GAUD,IAXN,GAYI,IAbe,CAArB;AAgBA,SACE,4BACCX,YADD,CADF;AAKD,CAvBD;;AAyBA,eAAeL,mBAAf","sourcesContent":["import { addVisibleSelect, showOptionsOnClick } from \"../../../actions/fieldsAction\";\nimport languages from \"../../../library/languages\";\nimport { Typography, Box, ButtonÂ } from \"@material-ui/core\";\n\nconst WebFormVisibleOrNot = ({ state, dispatch, counter, setCounter } : any) => {\n\n  const VisibleOrNot = state.map(({fieldName, fieldFormVisible, _id, pause}) =>\n    fieldFormVisible === null ? (\n      pause ? (\n        <Box key={_id} mb=\"2rem\">\n          <Typography gutterBottom component=\"h4\" variant=\"h6\">\n            {languages.en.shouldBe} <strong>{fieldName}</strong> {languages.en.visibleInForm}?\n          </Typography>\n          <Button id={fieldName} variant=\"contained\" color=\"primary\" style={{marginRight: \"1rem\"}} onClick={() => addVisibleSelect(dispatch, setCounter, counter)}>\n            {languages.en.yes}\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => showOptionsOnClick(dispatch)}>{languages.en.no}</Button>\n        </Box>\n      ) : null\n    ) : null\n  );\n\n  return (\n    <>\n    {VisibleOrNot}\n    </>\n  );\n};\n\nexport default WebFormVisibleOrNot;\n"]},"metadata":{},"sourceType":"module"}