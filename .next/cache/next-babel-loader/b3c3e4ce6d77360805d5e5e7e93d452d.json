{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/Header.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Grid, Button, Toolbar, AppBar, Box, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    menuButton: {\n      marginRight: theme.spacing(2),\n      color: \"white\"\n    },\n    title: {\n      flexGrow: 1\n    },\n    toolBar: {\n      padding: 0\n    },\n    mobilMenuButton: _defineProperty({\n      color: \"white\",\n      display: \"none\"\n    }, theme.breakpoints.down(\"sm\"), {\n      display: \"block\"\n    }),\n    menuGrid: _defineProperty({\n      flexDirection: \"row\"\n    }, theme.breakpoints.down(\"sm\"), {\n      flexDireciton: \"column\"\n    }),\n    navMobil: _defineProperty({}, theme.breakpoints.down(\"sm\"), {\n      position: \"absolute\",\n      backgroundColor: \"black\",\n      display: \"block\",\n      width: \"100%\",\n      top: \"3.5rem\",\n      zIndex: -1,\n      padding: \"2rem\"\n    }),\n    navDesktop: {\n      position: \"relative\",\n      display: \"none\"\n    }\n  });\n});\n\nvar Header = function Header() {\n  var classes = useStyles({});\n  var user = useContext(UserContext);\n\n  var _useState = useState(false),\n      mobilMenu = _useState[0],\n      setMobilMenu = _useState[1];\n\n  var toggleMenu = function toggleMenu() {\n    console.log(mobilMenu);\n    setMobilMenu(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  return __jsx(AppBar, {\n    position: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    className: classes.toolBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Box, {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: toggleMenu,\n    className: classes.mobilMenuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, !mobilMenu ? __jsx(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }) : __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), __jsx(Box, {\n    component: \"nav\",\n    className: mobilMenu ? classes.navMobil : classes.navDesktop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    direction: mobilMenu ? \"column\" : \"row\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/dashboard/[key]\",\n    as: \"/dashboard/\".concat(user.user.userkey),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, languages.en.dashboard))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/clients/[key]\",\n    as: \"/clients/\".concat(user.user.userkey),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(PeopleAltIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, languages.en.clients))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/emails/[key]\",\n    as: \"/emails/\".concat(user.user.userkey),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(EmailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, languages.en.emails))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/settings/[key]\",\n    as: \"/settings/\".concat(user.user.userkey),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(Button, {\n    startIcon: __jsx(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, languages.en.settings)))))), __jsx(Button, {\n    className: classes.menuButton,\n    onClick: function onClick() {\n      return user.logoutUser();\n    },\n    startIcon: __jsx(ExitToAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, languages.en.logout))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/Header.tsx"],"names":["useContext","useState","Link","languages","UserContext","createStyles","makeStyles","Container","DashboardIcon","PeopleAltIcon","EmailIcon","SettingsIcon","ExitToAppIcon","Grid","Button","Toolbar","AppBar","Box","IconButton","MenuIcon","CloseIcon","useStyles","theme","menuButton","marginRight","spacing","color","title","flexGrow","toolBar","padding","mobilMenuButton","display","breakpoints","down","menuGrid","flexDirection","flexDireciton","navMobil","position","backgroundColor","width","top","zIndex","navDesktop","Header","classes","user","mobilMenu","setMobilMenu","toggleMenu","console","log","prevState","userkey","en","dashboard","clients","emails","settings","logoutUser","logout"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SACEC,IADF,EAEEC,MAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,GALF,EAMEC,UANF,QAOO,mBAPP;AAQA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,IAAMC,SAAS,GAAGf,UAAU,CAAC,UAACgB,KAAD;AAAA,SAC3BjB,YAAY,CAAC;AACXkB,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAEVC,MAAAA,KAAK,EAAE;AAFG,KADD;AAKXC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL,KALI;AAQXC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AADF,KARE;AAWXC,IAAAA,eAAe;AACbL,MAAAA,KAAK,EAAE,OADM;AAEbM,MAAAA,OAAO,EAAE;AAFI,OAGZV,KAAK,CAACW,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAHY,EAGmB;AAC9BF,MAAAA,OAAO,EAAE;AADqB,KAHnB,CAXJ;AAkBXG,IAAAA,QAAQ;AACNC,MAAAA,aAAa,EAAE;AADT,OAELd,KAAK,CAACW,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAFK,EAE0B;AAC9BG,MAAAA,aAAa,EAAE;AADe,KAF1B,CAlBG;AAwBXC,IAAAA,QAAQ,sBACLhB,KAAK,CAACW,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CADK,EAC0B;AAC9BK,MAAAA,QAAQ,EAAE,UADoB;AAE9BC,MAAAA,eAAe,EAAE,OAFa;AAG9BR,MAAAA,OAAO,EAAE,OAHqB;AAI9BS,MAAAA,KAAK,EAAE,MAJuB;AAK9BC,MAAAA,GAAG,EAAE,QALyB;AAM9BC,MAAAA,MAAM,EAAE,CAAC,CANqB;AAO9Bb,MAAAA,OAAO,EAAE;AAPqB,KAD1B,CAxBG;AAmCXc,IAAAA,UAAU,EAAE;AACVL,MAAAA,QAAQ,EAAE,UADA;AAEVP,MAAAA,OAAO,EAAE;AAFC;AAnCD,GAAD,CADe;AAAA,CAAD,CAA5B;;AA2CA,IAAMa,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMC,OAAO,GAAGzB,SAAS,CAAC,EAAD,CAAzB;AACA,MAAM0B,IAAI,GAAG/C,UAAU,CAACI,WAAD,CAAvB;;AAFmB,kBAGeH,QAAQ,CAAC,KAAD,CAHvB;AAAA,MAGZ+C,SAHY;AAAA,MAGDC,YAHC;;AAKnB,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACAC,IAAAA,YAAY,CAAC,UAAAI,SAAS;AAAA,aAAI,CAACA,SAAL;AAAA,KAAV,CAAZ;AACD,GAHD;;AAKA,SACE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEP,OAAO,CAACjB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,KAAK,EAAC,MAA1B;AAAiC,IAAA,cAAc,EAAC,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,OAAO,EAAEqB,UADX;AAEE,IAAA,SAAS,EAAEJ,OAAO,CAACf,eAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,CAACiB,SAAD,GAAa,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,GAA4B,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ/B,CADF,EAOE,MAAC,GAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,SAAS,EAAEA,SAAS,GAAGF,OAAO,CAACR,QAAX,GAAsBQ,OAAO,CAACF,UAFpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAEI,SAAS,GAAG,QAAH,GAAc,KAFpC;AAGE,IAAA,OAAO,EAAC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,kBADP;AAEE,IAAA,EAAE,uBAAgBD,IAAI,CAACA,IAAL,CAAUO,OAA1B,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,MAAD;AACE,IAAA,SAAS,EAAE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEE,IAAA,SAAS,EAAER,OAAO,CAACvB,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGpB,SAAS,CAACoD,EAAV,CAAaC,SAJhB,CAJF,CADF,CALF,EAkBE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,gBADP;AAEE,IAAA,EAAE,qBAAcT,IAAI,CAACA,IAAL,CAAUO,OAAxB,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,MAAD;AACE,IAAA,SAAS,EAAE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEE,IAAA,SAAS,EAAER,OAAO,CAACvB,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGpB,SAAS,CAACoD,EAAV,CAAaE,OAJhB,CAJF,CADF,CAlBF,EA+BE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,EAAE,oBAAaV,IAAI,CAACA,IAAL,CAAUO,OAAvB,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,MAAD;AACE,IAAA,SAAS,EAAE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEE,IAAA,SAAS,EAAER,OAAO,CAACvB,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGpB,SAAS,CAACoD,EAAV,CAAaG,MAJhB,CAJF,CADF,CA/BF,EA4CE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,EAAE,sBAAeX,IAAI,CAACA,IAAL,CAAUO,OAAzB,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,MAAD;AACE,IAAA,SAAS,EAAE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEE,IAAA,SAAS,EAAER,OAAO,CAACvB,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGpB,SAAS,CAACoD,EAAV,CAAaI,QAJhB,CAJF,CADF,CA5CF,CAJF,CAPF,CADF,EAwEE,MAAC,MAAD;AACE,IAAA,SAAS,EAAEb,OAAO,CAACvB,UADrB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMwB,IAAI,CAACa,UAAL,EAAN;AAAA,KAFX;AAGE,IAAA,SAAS,EAAE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGzD,SAAS,CAACoD,EAAV,CAAaM,MALhB,CAxEF,CADF,CADF,CADF;AAsFD,CAhGD;;AAkGA,eAAehB,MAAf","sourcesContent":["import { useContext, useState } from \"react\";\nimport Link from \"next/link\";\nimport languages from \"../library/languages\";\nimport UserContext from \"./UserContext\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport {\n  Grid,\n  Button,\n  Toolbar,\n  AppBar,\n  Box,\n  IconButton\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    menuButton: {\n      marginRight: theme.spacing(2),\n      color: \"white\"\n    },\n    title: {\n      flexGrow: 1\n    },\n    toolBar: {\n      padding: 0\n    },\n    mobilMenuButton: {\n      color: \"white\",\n      display: \"none\",\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    menuGrid: {\n      flexDirection: \"row\",\n      [theme.breakpoints.down(\"sm\")]: {\n        flexDireciton: \"column\"\n      }\n    },\n    navMobil: {\n      [theme.breakpoints.down(\"sm\")]: {\n        position: \"absolute\",\n        backgroundColor: \"black\",\n        display: \"block\",\n        width: \"100%\",\n        top: \"3.5rem\",\n        zIndex: -1,\n        padding: \"2rem\"\n      }\n    },\n    navDesktop: {\n      position: \"relative\",\n      display: \"none\"\n    }\n  })\n);\n\nconst Header = () => {\n  const classes = useStyles({});\n  const user = useContext(UserContext);\n  const [mobilMenu, setMobilMenu] = useState(false);\n\n  const toggleMenu = () => {\n    console.log(mobilMenu);\n    setMobilMenu(prevState => !prevState);\n  };\n\n  return (\n    <AppBar position=\"fixed\">\n      <Container maxWidth=\"lg\">\n        <Toolbar className={classes.toolBar}>\n          <Box display=\"flex\" width=\"100%\" justifyContent=\"space-between\">\n            <IconButton\n              onClick={toggleMenu}\n              className={classes.mobilMenuButton}\n            >\n              {!mobilMenu ? <MenuIcon /> : <CloseIcon />}\n            </IconButton>\n            <Box\n              component=\"nav\"\n              className={mobilMenu ? classes.navMobil : classes.navDesktop}\n            >\n              <Grid\n                container\n                direction={mobilMenu ? \"column\" : \"row\"}\n                justify=\"center\"\n              >\n                <Grid item>\n                  <Link\n                    href=\"/dashboard/[key]\"\n                    as={`/dashboard/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<DashboardIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.dashboard}\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    href=\"/clients/[key]\"\n                    as={`/clients/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<PeopleAltIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.clients}\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    href=\"/emails/[key]\"\n                    as={`/emails/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<EmailIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.emails}\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    href=\"/settings/[key]\"\n                    as={`/settings/${user.user.userkey}`}\n                  >\n                    <Button\n                      startIcon={<SettingsIcon />}\n                      className={classes.menuButton}\n                    >\n                      {languages.en.settings}\n                    </Button>\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n          <Button\n            className={classes.menuButton}\n            onClick={() => user.logoutUser()}\n            startIcon={<ExitToAppIcon />}\n          >\n            {languages.en.logout}\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}