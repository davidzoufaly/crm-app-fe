{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport languages from \"../../../library/languages\";\nimport stringMethods from \"../../../library/stringMethods\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Fab, TextField, FormControl, InputLabel, Select, MenuItem, Button, Grid, Box } from \"@material-ui/core\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    fab: {\n      marginTop: theme.spacing(3),\n      color: theme.palette.common.white\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(2)\n    },\n    formWrapper: _defineProperty({\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      boxShadow: theme.shadows[\"1\"],\n      padding: theme.spacing(3),\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\"\n    }, theme.breakpoints.down(\"sm\"), {\n      width: \"100%\"\n    }),\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  });\n});\n\nvar AddOrEditField = function AddOrEditField(_ref) {\n  var editedField = _ref.editedField,\n      displayComponent = _ref.displayComponent,\n      fieldMethods = _ref.fieldMethods,\n      handleOption = _ref.handleOption;\n  var classes = useStyles({});\n  return displayComponent ? __jsx(Box, {\n    className: classes.formWrapper\n  }, __jsx(Typography, {\n    component: \"h3\",\n    variant: \"h5\"\n  }, editedField.id ? languages.en.editCustomField : languages.en.newCustomField), __jsx(\"form\", {\n    onSubmit: fieldMethods.saveEditedField\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6\n  }, __jsx(TextField, {\n    id: new stringMethods(languages.en.fieldName).textToHtmlProp().getString(),\n    autoFocus: true,\n    type: \"text\",\n    label: languages.en.fieldName,\n    className: classes.textField,\n    value: editedField.fieldName,\n    onChange: fieldMethods.onNameChange,\n    fullWidth: true\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: new stringMethods(languages.en.fieldType).textToHtmlProp().getString()\n  }, languages.en.fieldType), __jsx(Select, {\n    id: new stringMethods(languages.en.fieldType).textToHtmlProp().getString(),\n    onChange: fieldMethods.onSelectChange,\n    value: editedField.fieldType\n  }, __jsx(MenuItem, {\n    value: \"text\"\n  }, languages.en.text), __jsx(MenuItem, {\n    value: \"select\"\n  }, languages.en.select), __jsx(MenuItem, {\n    value: \"number\"\n  }, languages.en.number)))), editedField.fieldType === \"select\" ? __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, handleOption) : null, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  }, __jsx(Button, {\n    onClick: fieldMethods.toggleDisplayComponent,\n    color: \"secondary\",\n    variant: \"contained\",\n    style: {\n      marginRight: \"1rem\"\n    }\n  }, languages.en.cancel), __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\"\n  }, languages.en.save)))))) : __jsx(\"div\", null, __jsx(Fab, {\n    color: \"primary\",\n    variant: \"extended\",\n    \"aria-label\": \"add\",\n    className: classes.fab,\n    onClick: fieldMethods.toggleDisplayComponent\n  }, __jsx(AddIcon, null), languages.en.field));\n};\n\nexport default AddOrEditField;","map":null,"metadata":{},"sourceType":"module"}