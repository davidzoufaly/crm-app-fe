{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer, useEffect, useState } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormOptionSelect from \"./WebFormOptionSelect\";\nimport WebFormOptions from \"./WebFormOptions\";\n\nvar WebForm = function WebForm(_ref) {\n  var fields = _ref.fields;\n\n  var _useState = useState(null),\n      optionSelect = _useState[0],\n      setOptionSelect = _useState[1];\n\n  var _useReducer = useReducer(function (state, action) {\n    switch (action.type) {\n      case \"add\":\n        return state.map(function (field) {\n          return field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n            fieldInForm: true\n          }) : field;\n        });\n\n      case \"remove\":\n        return state.map(function (field) {\n          return field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n            fieldInForm: false\n          }) : field;\n        });\n\n      case \"addVisibleSelect\":\n        return state.map(function (field) {\n          return field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n            fieldInForm: true,\n            fieldFormVisible: true\n          }) : field;\n        });\n\n      case \"willBeHidden\":\n        return state.map(function (field) {\n          return field.fieldName === action.payload.fieldName ? _objectSpread({}, field, {\n            willBeHidden: true\n          }) : field;\n        });\n\n      case \"addHiddenSelect\":\n        return state.map(function (field) {\n          return field.fieldName === optionSelect[0].fieldName ? _objectSpread({}, field, {\n            fieldInForm: true,\n            fieldFormVisible: false,\n            fieldOptions: field.fieldOptions.map(function (option) {\n              return option.value === action.payload ? _objectSpread({}, option, {\n                preselected: true\n              }) : option;\n            })\n          }) : field;\n        });\n\n      default:\n        return state;\n    }\n  }, fields),\n      webFields = _useReducer[0],\n      setWebFields = _useReducer[1];\n\n  var addNotSelect = function addNotSelect(e) {\n    webFields.map(function (field) {\n      return field.fieldName === e.target.value ? field.fieldType !== \"select\" ? setWebFields({\n        type: \"add\",\n        payload: {\n          fieldName: e.target.value\n        }\n      }) : setWebFields({\n        type: \"willBeHidden\",\n        payload: {\n          fieldName: e.target.value\n        }\n      }) : null;\n    });\n  };\n\n  var addVisibleSelect = function addVisibleSelect(e) {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n    setOptionSelect(null);\n  };\n\n  var addHiddenSelect = function addHiddenSelect(e) {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: {\n        optionValue: e.target.value\n      }\n    });\n    setOptionSelect(null);\n  };\n\n  var removeFromList = function removeFromList(e) {\n    setWebFields({\n      type: \"remove\",\n      payload: {\n        fieldName: e.target.id\n      }\n    });\n  };\n\n  useEffect(function () {\n    console.log(webFields);\n  }, [webFields]);\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Select field:\"), __jsx(WebFormSelect, {\n    webFields: webFields,\n    addNotSelect: addNotSelect,\n    optionSelect: optionSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), __jsx(WebFormOptionSelect, {\n    optionSelect: optionSelect,\n    webFields: webFields,\n    addVisibleSelect: addVisibleSelect,\n    WebFormOptions: __jsx(WebFormOptions, {\n      optionSelect: optionSelect,\n      addHiddenSelect: addHiddenSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Selected fields:\"), __jsx(WebFormList, {\n    webFields: webFields,\n    removeFromList: removeFromList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }));\n};\n\nexport default WebForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx"],"names":["useReducer","useEffect","useState","WebFormSelect","WebFormList","WebFormOptionSelect","WebFormOptions","WebForm","fields","optionSelect","setOptionSelect","state","action","type","map","field","fieldName","payload","fieldInForm","fieldFormVisible","willBeHidden","fieldOptions","option","value","preselected","webFields","setWebFields","addNotSelect","e","target","fieldType","addVisibleSelect","id","addHiddenSelect","optionValue","removeFromList","console","log"],"mappings":"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","sourcesContent":["import { useReducer, useEffect, useState } from \"react\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormOptionSelect from \"./WebFormOptionSelect\";\nimport WebFormOptions from \"./WebFormOptions\";\n\nconst WebForm = ({ fields }) => {\n  const [optionSelect, setOptionSelect] = useState(null);\n  const [webFields, setWebFields] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true }\n            : field\n        );\n      case \"remove\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: false }\n            : field\n        );\n      case \"addVisibleSelect\":\n        return state.map(field =>\n          field.fieldName === action.payload.fieldName\n            ? { ...field, fieldInForm: true, fieldFormVisible: true }\n            : field\n        );\n\n      case \"willBeHidden\": \n         return state.map(field => field.fieldName === action.payload.fieldName ? {...field, willBeHidden: true} : field)\n\n      case \"addHiddenSelect\":\n        return state.map(field =>\n          field.fieldName === optionSelect[0].fieldName\n            ? {\n                ...field,\n                fieldInForm: true,\n                fieldFormVisible: false,\n                fieldOptions: field.fieldOptions.map(option =>\n                  option.value === action.payload\n                    ? { ...option, preselected: true }\n                    : option\n                )\n              }\n            : field\n        );\n\n      default:\n        return state;\n    }\n  }, fields);\n\n  const addNotSelect = e => {\n    webFields.map(field =>\n      field.fieldName === e.target.value\n        ? field.fieldType !== \"select\"\n          ? setWebFields({\n              type: \"add\",\n              payload: { fieldName: e.target.value }\n            })\n          : setWebFields({\n              type: \"willBeHidden\",\n              payload: { fieldName: e.target.value }\n            })\n        : null\n    );\n  };\n\n  const addVisibleSelect = e => {\n    setWebFields({\n      type: \"addVisibleSelect\",\n      payload: { fieldName: e.target.id }\n    });\n    setOptionSelect(null);\n  };\n\n  const addHiddenSelect = e => {\n    setWebFields({\n      type: \"addHiddenSelect\",\n      payload: { optionValue: e.target.value }\n    });\n    setOptionSelect(null);\n  };\n\n  const removeFromList = e => {\n    setWebFields({\n      type: \"remove\",\n      payload: { fieldName: e.target.id }\n    });\n  };\n\n  useEffect(() => {\n    console.log(webFields);\n  }, [webFields]);\n\n  return (\n    <>\n      <h3>Select field:</h3>\n      <WebFormSelect\n        webFields={webFields}\n        addNotSelect={addNotSelect}\n        optionSelect={optionSelect}\n      />\n      <WebFormOptionSelect\n        optionSelect={optionSelect}\n        webFields={webFields}\n        addVisibleSelect={addVisibleSelect}\n        WebFormOptions={\n          <WebFormOptions\n            optionSelect={optionSelect}\n            addHiddenSelect={addHiddenSelect}\n          />\n        }\n      />\n      <h3>Selected fields:</h3>\n      <WebFormList webFields={webFields} removeFromList={removeFromList} />\n    </>\n  );\n};\n\nexport default WebForm;\n"]},"metadata":{},"sourceType":"module"}