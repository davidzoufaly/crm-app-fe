{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/webFormOptionSelect.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar webFormOptionSelect = function webFormOptionSelect(_ref) {\n  var optionSelect = _ref.optionSelect,\n      webFields = _ref.webFields,\n      addVisibleSelect = _ref.addVisibleSelect;\n  var fieldOptionsArray = [];\n\n  var showPreselectOptions = function showPreselectOptions() {\n    return webFields.map(function (field) {\n      return field.fieldType === \"select\" ? field.fieldOptions.forEach(function (option) {\n        return fieldOptionsArray.push(__jsx(\"option\", {\n          key: option.id,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, option.value));\n      }) : null;\n    });\n  };\n\n  var insertIntoForm = webFields.map(function (field) {\n    return optionSelect === field.fieldName ? __jsx(\"div\", {\n      key: field.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Should be \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, field.fieldName), \" visible in form?\"), __jsx(\"button\", {\n      id: field.fieldName,\n      onClick: addVisibleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"YES\"), __jsx(\"button\", {\n      id: field.fieldName,\n      onClick: showPreselectOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"NO\")) : null;\n  });\n  return __jsx(React.Fragment, null, insertIntoForm, __jsx(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, fieldOptionsArray));\n};\n\nexport default webFormOptionSelect;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/webFormOptionSelect.tsx"],"names":["webFormOptionSelect","optionSelect","webFields","addVisibleSelect","fieldOptionsArray","showPreselectOptions","map","field","fieldType","fieldOptions","forEach","option","push","id","value","insertIntoForm","fieldName"],"mappings":";;;;AAAA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAmD;AAAA,MAAhDC,YAAgD,QAAhDA,YAAgD;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,gBAAuB,QAAvBA,gBAAuB;AAE7E,MAAMC,iBAAiB,GAAG,EAA1B;;AAEA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjC,WAAOH,SAAS,CAACI,GAAV,CAAc,UAAAC,KAAK;AAAA,aACtBA,KAAK,CAACC,SAAN,KAAoB,QAApB,GACID,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2B,UAAAC,MAAM;AAAA,eACjCP,iBAAiB,CAACQ,IAAlB,CACI;AAAQ,UAAA,GAAG,EAAED,MAAM,CAACE,EAApB;AAAwB,UAAA,KAAK,EAAEF,MAAM,CAACG,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGH,MAAM,CAACG,KADV,CADJ,CADiC;AAAA,OAAjC,CADJ,GAQI,IATkB;AAAA,KAAnB,CAAP;AAWD,GAZD;;AAcA,MAAMC,cAAc,GAAGb,SAAS,CAACI,GAAV,CAAc,UAAAC,KAAK;AAAA,WACxCN,YAAY,KAAKM,KAAK,CAACS,SAAvB,GACE;AAAK,MAAA,GAAG,EAAET,KAAK,CAACM,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASN,KAAK,CAACS,SAAf,CADZ,sBADF,EAIE;AAAQ,MAAA,EAAE,EAAET,KAAK,CAACS,SAAlB;AAA6B,MAAA,OAAO,EAAEb,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAOE;AAAQ,MAAA,EAAE,EAAEI,KAAK,CAACS,SAAlB;AAA6B,MAAA,OAAO,EAAEX,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CADF,GAYI,IAboC;AAAA,GAAnB,CAAvB;AAgBA,SACE,4BACGU,cADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASX,iBAAT,CAFF,CADF;AAMD,CAxCD;;AA0CA,eAAeJ,mBAAf","sourcesContent":["const webFormOptionSelect = ({ optionSelect, webFields, addVisibleSelect }) => {\n  \n  const fieldOptionsArray = [];\n\n  const showPreselectOptions = () => {\n    return webFields.map(field =>\n        field.fieldType === \"select\"\n          ? field.fieldOptions.forEach(option =>\n            fieldOptionsArray.push(\n                <option key={option.id} value={option.value}>\n                  {option.value}\n                </option>\n              )\n            )\n          : null\n      );\n  }\n\n  const insertIntoForm = webFields.map(field =>\n    optionSelect === field.fieldName ? (\n      <div key={field.id}>\n        <p>\n          Should be <strong>{field.fieldName}</strong> visible in form?\n        </p>\n        <button id={field.fieldName} onClick={addVisibleSelect}>\n          YES\n        </button>\n        <button id={field.fieldName} onClick={showPreselectOptions}>\n          NO\n        </button>\n      </div>\n    ) : null\n  );\n\n  return (\n    <>\n      {insertIntoForm}\n      <select>{fieldOptionsArray}</select>\n    </>\n  );\n};\n\nexport default webFormOptionSelect;\n"]},"metadata":{},"sourceType":"module"}