{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({\n  fields,\n  refreshList\n}) => {\n  const blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false,\n    fieldOptions: []\n  };\n  const {\n    0: editedField,\n    1: setEditedField\n  } = useState(blankFieldObject);\n  const {\n    0: displayComponent,\n    1: setDisplayComponent\n  } = useState(false);\n\n  const saveEditedField = () => {\n    const fieldIsUpdated = async () => {\n      // let newField = editedField;\n      // newField = delete newField._id;\n      const res = await axios({\n        method: \"put\",\n        url: `${globalVars.serverURL}/fields/${editedField.id}`,\n        data: editedField,\n        responseType: \"json\"\n      });\n      const data = await res.data;\n\n      if (data.msg === \"Success\") {\n        setDisplayComponent(false);\n        setEditedField(blankFieldObject);\n        refreshList();\n      }\n    };\n\n    const fieldIsCreated = async () => {\n      const res = await axios({\n        method: \"post\",\n        url: `${globalVars.serverURL}/fields/`,\n        data: editedField,\n        responseType: \"json\"\n      });\n      const data = await res.data;\n\n      if (data.msg === \"Success\") {\n        refreshList();\n        setDisplayComponent(false);\n        setEditedField(blankFieldObject);\n      }\n    };\n\n    isNew ? fieldIsCreated() : fieldIsUpdated();\n  };\n\n  const deleteField = async event => {\n    const id = event.target.id;\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const onNameChange = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldName: event.target.value\n    }));\n  };\n\n  const onSelectChange = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    }));\n  };\n\n  const handleOptionSpawn = () => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: [...editedField.fieldOptions, {\n        id: uniqid(),\n        value: \"\"\n      }]\n    }));\n  };\n\n  const onOptionChange = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(e => event.target.id === e.id ? e.value = event.target.value : e)\n    }));\n  };\n\n  const onOptionDelete = event => {\n    setEditedField(_objectSpread({}, editedField, {\n      fieldOptions: editedField.fieldOptions.filter(e => event.target.id !== e.id ? e : null)\n    }));\n  };\n\n  const setupEditedField = obj => {\n    setEditedField(obj);\n    setDisplayComponent(true);\n  };\n\n  const changeDisplayComponent = () => {\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Custom Client Fields\"), __jsx(CustomFieldsList, {\n    deleteField: deleteField,\n    fields: fields,\n    setupEditedField: setupEditedField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), __jsx(AddOrEditField, {\n    editedField: editedField,\n    refreshList: refreshList,\n    saveEditedField: saveEditedField,\n    onNameChange: onNameChange,\n    onSelectChange: onSelectChange,\n    handleOptionSpawn: handleOptionSpawn,\n    onOptionChange: onOptionChange,\n    onOptionDelete: onOptionDelete,\n    displayComponent: displayComponent,\n    changeDisplayComponent: changeDisplayComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n};\n\nexport default CustomClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx"],"names":["useState","AddOrEditField","axios","globalVars","uniqid","CustomFieldsList","CustomClientFields","fields","refreshList","blankFieldObject","fieldName","fieldType","fieldPermanent","fieldOptions","editedField","setEditedField","displayComponent","setDisplayComponent","saveEditedField","fieldIsUpdated","res","method","url","serverURL","id","data","responseType","msg","fieldIsCreated","isNew","deleteField","event","target","resData","onNameChange","value","onSelectChange","options","selectedIndex","handleOptionSpawn","onOptionChange","filter","e","onOptionDelete","setupEditedField","obj","changeDisplayComponent"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport AddOrEditField from \"../components/AddOrEditField\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\nimport uniqid from \"uniqid\";\nimport CustomFieldsList from \"./CustomFieldsList\";\n\nconst CustomClientFields = ({ fields, refreshList }: any) => {\n  const blankFieldObject = {\n    fieldName: \"\",\n    fieldType: \"text\",\n    fieldPermanent: false,\n    fieldOptions: []\n  };\n\n  const [editedField, setEditedField] = useState<any>(blankFieldObject);\n  const [displayComponent, setDisplayComponent] = useState(false);\n\n  const saveEditedField = () => {\n    const fieldIsUpdated = async () => {\n      // let newField = editedField;\n      // newField = delete newField._id;\n      const res = await axios({\n        method: \"put\",\n        url: `${globalVars.serverURL}/fields/${editedField.id}`,\n        data: editedField,\n        responseType: \"json\"\n      });\n      const data = await res.data;\n      if(data.msg === \"Success\") {\n        setDisplayComponent(false);\n        setEditedField(blankFieldObject);\n        refreshList();\n      }\n    }\n\n    const fieldIsCreated = async () => {\n      const res = await axios({\n        method: \"post\",\n        url: `${globalVars.serverURL}/fields/`,\n        data: editedField,\n        responseType: \"json\"\n      });\n      const data = await res.data;\n      if(data.msg === \"Success\") {\n        refreshList();\n        setDisplayComponent(false);\n        setEditedField(blankFieldObject);\n      }\n    }\n    isNew ? fieldIsCreated() : fieldIsUpdated();\n  };\n\n  const deleteField = async (event: any) => {\n    const id = event.target.id;\n    const res = await axios({\n      method: \"delete\",\n      url: `${globalVars.serverURL}/fields/${id}`,\n      responseType: \"json\"\n    });\n    const resData = await res.data;\n    resData.msg === \"Success\" ? refreshList() : null;\n  };\n\n  const onNameChange = (event: any) => {\n    setEditedField({ ...editedField, fieldName: event.target.value });\n  };\n\n  const onSelectChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    });\n  };\n\n  const handleOptionSpawn = () => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: [...editedField.fieldOptions, { id: uniqid(), value: \"\" }]\n    });\n  };\n\n  const onOptionChange = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id === e.id ? (e.value = event.target.value) : e\n      )\n    });\n  };\n\n  const onOptionDelete = (event: any) => {\n    setEditedField({\n      ...editedField,\n      fieldOptions: editedField.fieldOptions.filter((e: any) =>\n        event.target.id !== e.id ? e : null\n      )\n    });\n  };\n\n  const setupEditedField = (obj?: any) => {\n    setEditedField(obj);\n    setDisplayComponent(true);\n  };\n\n  const changeDisplayComponent = () => {\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n  }\n\n  return (\n    <div>\n      <h2>Custom Client Fields</h2>\n      <CustomFieldsList\n        deleteField={deleteField}\n        fields={fields}\n        setupEditedField={setupEditedField}\n      />\n      <AddOrEditField\n        editedField={editedField}\n        refreshList={refreshList}\n        saveEditedField={saveEditedField}\n        onNameChange={onNameChange}\n        onSelectChange={onSelectChange}\n        handleOptionSpawn={handleOptionSpawn}\n        onOptionChange={onOptionChange}\n        onOptionDelete={onOptionDelete}\n        displayComponent={displayComponent}\n        changeDisplayComponent={changeDisplayComponent}\n      />\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"]},"metadata":{},"sourceType":"module"}