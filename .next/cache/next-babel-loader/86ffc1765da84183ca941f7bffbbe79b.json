{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport stringMethods from \"../library/stringMethods\";\n\nconst CustomClientFields = ({\n  fields\n}) => {\n  const customFields = fields.filter(({\n    fieldPermanent\n  }) => !fieldPermanent).map(({\n    fieldName,\n    _id,\n    fieldType,\n    fieldOptions\n  }) => {\n    const customFieldNameFormated = new stringMethods(fieldName).camelStringToText().firstCharUpperCase().getString();\n    const customFieldTypeFormated = new stringMethods(fieldType).camelStringToText().getString();\n\n    if (fieldType === \"select\") {\n      function fieldOptions() {\n        this.forEach(e => {\n          const customFieldOptionFormated = new stringMethods(e).firstCharUpperCase().getString();\n          return __jsx(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, customFieldOptionFormated);\n        });\n      }\n    }\n\n    return __jsx(\"div\", {\n      key: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, customFieldNameFormated), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"(\", customFieldTypeFormated, \")\"), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, fieldOptions()));\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Custom Client Fields\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, customFields));\n};\n\nexport default CustomClientFields;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/CustomClientFields.tsx"],"names":["stringMethods","CustomClientFields","fields","customFields","filter","fieldPermanent","map","fieldName","_id","fieldType","fieldOptions","customFieldNameFormated","camelStringToText","firstCharUpperCase","getString","customFieldTypeFormated","forEach","e","customFieldOptionFormated"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,0BAA1B;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAC9C,QAAMC,YAAY,GAAGD,MAAM,CACxBE,MADkB,CACX,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAA6B,CAACA,cADnB,EAElBC,GAFkB,CAEd,CAAC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,GAAb;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA;AAA7B,GAAD,KAAsD;AACzD,UAAMC,uBAAuB,GAAG,IAAIX,aAAJ,CAAkBO,SAAlB,EAC7BK,iBAD6B,GAE7BC,kBAF6B,GAG7BC,SAH6B,EAAhC;AAKA,UAAMC,uBAAuB,GAAG,IAAIf,aAAJ,CAAkBS,SAAlB,EAC7BG,iBAD6B,GAE7BE,SAF6B,EAAhC;;AAIA,QAAIL,SAAS,KAAK,QAAlB,EAA4B;AAC1B,eAASC,YAAT,GAAwB;AACtB,aAAKM,OAAL,CAAcC,CAAD,IAAe;AAC1B,gBAAMC,yBAAyB,GAAG,IAAIlB,aAAJ,CAAkBiB,CAAlB,EAC/BJ,kBAD+B,GAE/BC,SAF+B,EAAlC;AAIA,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKI,yBAAL,CAAP;AACD,SAND;AAOD;AACF;;AAED,WACE;AAAK,MAAA,GAAG,EAAEV,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIG,uBAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKI,uBAAL,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,YAAY,EAAjB,CAHF,CADF;AAOD,GA/BkB,CAArB;AAiCA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,YAAN,CAFF,CADF;AAMD,CAxCD;;AA0CA,eAAeF,kBAAf","sourcesContent":["import stringMethods from \"../library/stringMethods\";\n\nconst CustomClientFields = ({ fields }: any) => {\n  const customFields = fields\n    .filter(({ fieldPermanent }: any) => !fieldPermanent)\n    .map(({ fieldName, _id, fieldType, fieldOptions }: any) => {\n      const customFieldNameFormated = new stringMethods(fieldName)\n        .camelStringToText()\n        .firstCharUpperCase()\n        .getString();\n\n      const customFieldTypeFormated = new stringMethods(fieldType)\n        .camelStringToText()\n        .getString();\n\n      if (fieldType === \"select\") {\n        function fieldOptions() {\n          this.forEach((e: string) => {\n            const customFieldOptionFormated = new stringMethods(e)\n              .firstCharUpperCase()\n              .getString();\n\n            return <li>{customFieldOptionFormated}</li>;\n          });\n        }\n      }\n\n      return (\n        <div key={_id}>\n          <p>{customFieldNameFormated}</p>\n          <p>({customFieldTypeFormated})</p>\n          <ul>{fieldOptions()}</ul>\n        </div>\n      );\n    });\n\n  return (\n    <div>\n      <h2>Custom Client Fields</h2>\n      <div>{customFields}</div>\n    </div>\n  );\n};\n\nexport default CustomClientFields;\n"]},"metadata":{},"sourceType":"module"}