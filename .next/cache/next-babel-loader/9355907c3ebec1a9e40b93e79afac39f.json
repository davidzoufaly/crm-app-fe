{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/webFormOptionSelect.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nvar webFormOptionSelect = function webFormOptionSelect(_ref) {\n  var optionSelect = _ref.optionSelect,\n      webFields = _ref.webFields,\n      addVisibleSelect = _ref.addVisibleSelect;\n\n  // vem vybrany select\n  // nabidni moznost jestli pridat do formu -> ano -> pridat do listu se stringem -> do stavu\n  // ne -> zobraz druhy select s options + string -> vloz do listu se stringem -> do stavu\n  var _useState = useState(),\n      thisField = _useState[0],\n      setThisField = _useState[1];\n\n  var insertIntoForm = webFields.map(function (field) {\n    return optionSelect === field.fieldName ? __jsx(\"div\", {\n      key: field.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Should be \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, field.fieldName), \" visible in form?\"), __jsx(\"button\", {\n      id: field.fieldName,\n      onClick: addVisibleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"YES\"), __jsx(\"button\", {\n      id: field.fieldName,\n      onClick: function onClick() {\n        return setThisField(field);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"NO\")) : null;\n  });\n  return __jsx(React.Fragment, null, insertIntoForm, __jsx(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(WebFormOptions, {\n    field: thisField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n};\n\nexport default webFormOptionSelect;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/webFormOptionSelect.tsx"],"names":["useState","webFormOptionSelect","optionSelect","webFields","addVisibleSelect","thisField","setThisField","insertIntoForm","map","field","fieldName","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAmD;AAAA,MAAhDC,YAAgD,QAAhDA,YAAgD;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,gBAAuB,QAAvBA,gBAAuB;;AAC7E;AACA;AACA;AAH6E,kBAI3CJ,QAAQ,EAJmC;AAAA,MAItEK,SAJsE;AAAA,MAI3DC,YAJ2D;;AAM7E,MAAMC,cAAc,GAAGJ,SAAS,CAACK,GAAV,CAAc,UAAAC,KAAK;AAAA,WACxCP,YAAY,KAAKO,KAAK,CAACC,SAAvB,GACE;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASF,KAAK,CAACC,SAAf,CADZ,sBADF,EAIE;AAAQ,MAAA,EAAE,EAAED,KAAK,CAACC,SAAlB;AAA6B,MAAA,OAAO,EAAEN,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAOE;AAAQ,MAAA,EAAE,EAAEK,KAAK,CAACC,SAAlB;AAA6B,MAAA,OAAO,EAAE;AAAA,eAAMJ,YAAY,CAACG,KAAD,CAAlB;AAAA,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CADF,GAYI,IAboC;AAAA,GAAnB,CAAvB;AAgBA,SACE,4BACGF,cADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAEF,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR,CAFF,CADF;AAMD,CA5BD;;AA8BA,eAAeJ,mBAAf","sourcesContent":["import { useState } from \"react\";\n\nconst webFormOptionSelect = ({ optionSelect, webFields, addVisibleSelect }) => {\n  // vem vybrany select\n  // nabidni moznost jestli pridat do formu -> ano -> pridat do listu se stringem -> do stavu\n  // ne -> zobraz druhy select s options + string -> vloz do listu se stringem -> do stavu\n  const [thisField, setThisField] = useState()\n\n  const insertIntoForm = webFields.map(field =>\n    optionSelect === field.fieldName ? (\n      <div key={field.id}>\n        <p>\n          Should be <strong>{field.fieldName}</strong> visible in form?\n        </p>\n        <button id={field.fieldName} onClick={addVisibleSelect}>\n          YES\n        </button>\n        <button id={field.fieldName} onClick={() => setThisField(field)}>\n          NO\n        </button>\n      </div>\n    ) : null\n  );\n\n  return (\n    <>\n      {insertIntoForm}\n      <select><WebFormOptions field={thisField} /></select>\n    </>\n  );\n};\n\nexport default webFormOptionSelect;\n"]},"metadata":{},"sourceType":"module"}