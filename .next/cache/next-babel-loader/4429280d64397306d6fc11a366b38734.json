{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings/[key].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../../components/Header\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect, useContext, useReducer } from \"react\";\nimport axios from \"axios\";\nimport fieldsReducer from \"../../reducers/fieldsReducer\";\nimport UserContext from \"../../components/UserContext\";\nimport DefaultFieldsSection from \"../../components/settings/DefaultFieldsSection\";\nimport CustomFieldsSection from \"../../components/settings/customFields/CustomFieldsSection\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport EmailSettingsSection from \"../../components/settings/emailSettings/EmailSettingsSection\";\nimport WebFormSection from \"../../components/settings/webform/WebFormSection\";\nimport globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Settings = ({\n  dataFields,\n  username,\n  pass\n}) => {\n  const router = useRouter();\n  const {\n    0: initialized,\n    1: setInitialized\n  } = useState(false);\n  const {\n    0: sections,\n    1: setSection\n  } = useState({});\n  const user = useContext(UserContext);\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(fieldsReducer, dataFields);\n\n  const toggleSection = e => {\n    setSection(_objectSpread({}, sections, {\n      [e.target.name]: e.target.checked\n    }));\n  };\n\n  useEffect(() => {\n    //title from url\n    const title = new stringMethods(router.pathname).removeSlash().removeSlashAndTextAfter().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title; //componendDidMount effect\n\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n  const h1 = new stringMethods(router.pathname).removeSlash().removeSlashAndTextAfter().firstCharUpperCase().getString();\n  return !user.user.signedIn && !initialized ? __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(Typography, {\n    variant: \"h3\",\n    component: \"h1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, h1), __jsx(DefaultFieldsSection, {\n    state: state,\n    toggleSection: toggleSection,\n    sections: sections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(CustomFieldsSection, {\n    state: state,\n    dispatch: dispatch,\n    sections: sections,\n    toggleSection: toggleSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(EmailSettingsSection, {\n    username: username,\n    pass: pass,\n    toggleSection: toggleSection,\n    sections: sections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(WebFormSection, {\n    state: state,\n    dispatch: dispatch,\n    toggleSection: toggleSection,\n    sections: sections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n};\n\nSettings.getInitialProps = async context => {\n  const resFields = await axios({\n    method: \"GET\",\n    params: {\n      key: context.query.key\n    },\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const dataFields = await resFields.data;\n  const resEmailSettings = await axios({\n    method: \"GET\",\n    params: {\n      key: context.query.key\n    },\n    url: `${globalVars.serverURL}/emails/email-settings`,\n    responseType: \"json\"\n  });\n  const dataEmailSettings = await resEmailSettings.data;\n  const {\n    username,\n    pass\n  } = await dataEmailSettings;\n  return {\n    dataFields,\n    username,\n    pass\n  };\n};\n\nexport default Settings;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/settings/[key].tsx"],"names":["Header","useRouter","useState","useEffect","useContext","useReducer","axios","fieldsReducer","UserContext","DefaultFieldsSection","CustomFieldsSection","LoadingSpinner","EmailSettingsSection","WebFormSection","globalVars","stringMethods","Typography","Settings","dataFields","username","pass","router","initialized","setInitialized","sections","setSection","user","state","dispatch","toggleSection","e","target","name","checked","title","pathname","removeSlash","removeSlashAndTextAfter","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","checkUser","h1","signedIn","getInitialProps","context","resFields","method","params","key","query","url","serverURL","responseType","data","resEmailSettings","dataEmailSettings"],"mappings":"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","sourcesContent":["import Header from \"../../components/Header\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect, useContext, useReducer } from \"react\";\nimport axios from \"axios\";\nimport fieldsReducer from \"../../reducers/fieldsReducer\";\nimport UserContext from \"../../components/UserContext\";\nimport DefaultFieldsSection from \"../../components/settings/DefaultFieldsSection\";\nimport CustomFieldsSection from \"../../components/settings/customFields/CustomFieldsSection\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport EmailSettingsSection from \"../../components/settings/emailSettings/EmailSettingsSection\";\nimport WebFormSection from \"../../components/settings/webform/WebFormSection\";\nimport globalVars from \"../../library/globalVariables\";\nimport stringMethods from \"../../library/stringMethods\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Settings = ({ dataFields, username, pass }: any) => {\n  const router = useRouter();\n  const [initialized, setInitialized] = useState(false);\n  const [sections, setSection] = useState({});\n  const user = useContext(UserContext);\n\n  const [state, dispatch] = useReducer(fieldsReducer, dataFields);\n\n  const toggleSection = e => {\n    setSection({\n      ...sections,\n      [e.target.name]: e.target.checked\n    });\n  };\n\n  useEffect(() => {\n    //title from url\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .removeSlashAndTextAfter()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    //componendDidMount effect\n    setInitialized(true);\n    user.checkUser();\n  }, [router]);\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .removeSlashAndTextAfter()\n    .firstCharUpperCase()\n    .getString();\n\n  return !user.user.signedIn && !initialized ? (\n    <LoadingSpinner />\n  ) : (\n    <div>\n      <Header />\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n        {h1}\n      </Typography>\n      <DefaultFieldsSection\n        state={state}\n        toggleSection={toggleSection}\n        sections={sections}\n      />\n      <CustomFieldsSection\n        state={state}\n        dispatch={dispatch}\n        sections={sections}\n        toggleSection={toggleSection}\n      />\n      <EmailSettingsSection\n        username={username}\n        pass={pass}\n        toggleSection={toggleSection}\n        sections={sections}\n      />\n      <WebFormSection\n        state={state}\n        dispatch={dispatch}\n        toggleSection={toggleSection}\n        sections={sections}\n      />\n    </div>\n  );\n};\n\nSettings.getInitialProps = async (context: any) => {\n  const resFields = await axios({\n    method: \"GET\",\n    params: { key: context.query.key },\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const dataFields = await resFields.data;\n\n  const resEmailSettings = await axios({\n    method: \"GET\",\n    params: { key: context.query.key },\n    url: `${globalVars.serverURL}/emails/email-settings`,\n    responseType: \"json\"\n  });\n\n  const dataEmailSettings = await resEmailSettings.data;\n  const { username, pass } = await dataEmailSettings;\n\n  return { dataFields, username, pass };\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}