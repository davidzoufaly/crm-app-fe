{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\"; //TODO: SKRÝVÁNÍ POLÍ CO NEJSOU V DB\n\nconst Client = props => {\n  const {\n    firstName,\n    lastName\n  } = props.data;\n  useEffect(() => {\n    document.title = `${name} ${globalVars.titleSubText}`;\n  });\n\n  const showAllProperities = () => {\n    const data = props.data;\n    const list = [];\n\n    for (let key in data) {\n      const convertedKey = new stringMethods(key).camelStringToText().firstCharUpperCase().getString();\n\n      if (key !== \"_id\" && key !== \"name\") {\n        list.push(__jsx(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, convertedKey, \": \", data[key]));\n      }\n    }\n\n    return list;\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, firstName, \" \", lastName), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, showAllProperities()));\n};\n\nClient.getInitialProps = async context => {\n  const {\n    id\n  } = context.query;\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/${id}`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return {\n    data\n  };\n};\n\nexport default Client;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients/[id].tsx"],"names":["Header","axios","useEffect","stringMethods","globalVars","Client","props","firstName","lastName","data","document","title","name","titleSubText","showAllProperities","list","key","convertedKey","camelStringToText","firstCharUpperCase","getString","push","getInitialProps","context","id","query","res","method","url","serverURL","responseType"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,+BAAvB,C,CAEA;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAgB;AAC7B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BF,KAAK,CAACG,IAAtC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACC,KAAT,GAAkB,GAAEC,IAAK,IAAGR,UAAU,CAACS,YAAa,EAApD;AACD,GAFQ,CAAT;;AAIA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,UAAML,IAAI,GAAGH,KAAK,CAACG,IAAnB;AACA,UAAMM,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIC,GAAT,IAAgBP,IAAhB,EAAsB;AACpB,YAAMQ,YAAY,GAAG,IAAId,aAAJ,CAAkBa,GAAlB,EAClBE,iBADkB,GAElBC,kBAFkB,GAGlBC,SAHkB,EAArB;;AAKA,UAAIJ,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,MAA7B,EAAqC;AACnCD,QAAAA,IAAI,CAACM,IAAL,CACE;AAAI,UAAA,GAAG,EAAEL,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,YADH,QACmBR,IAAI,CAACO,GAAD,CADvB,CADF;AAKD;AACF;;AACD,WAAOD,IAAP;AACD,GAlBD;;AAoBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,SAAL,OAAiBC,QAAjB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKM,kBAAkB,EAAvB,CAHF,CADF;AAOD,CAlCD;;AAoCAT,MAAM,CAACiB,eAAP,GAAyB,MAAOC,OAAP,IAAwB;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMzB,KAAK,CAAC;AACtB0B,IAAAA,MAAM,EAAE,KADc;AAEtBC,IAAAA,GAAG,EAAG,GAAExB,UAAU,CAACyB,SAAU,YAAWL,EAAG,EAFrB;AAGtBM,IAAAA,YAAY,EAAE;AAHQ,GAAD,CAAvB;AAKA,QAAMrB,IAAI,GAAG,MAAMiB,GAAG,CAACjB,IAAvB;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CATD;;AAWA,eAAeJ,MAAf","sourcesContent":["import Header from \"../../components/Header\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport stringMethods from \"../../library/stringMethods\";\nimport globalVars from \"../../library/globalVariables\";\n\n//TODO: SKRÝVÁNÍ POLÍ CO NEJSOU V DB\n\nconst Client = (props: any) => {\n  const { firstName, lastName } = props.data;\n\n  useEffect(() => {\n    document.title = `${name} ${globalVars.titleSubText}`;\n  });\n\n  const showAllProperities = () => {\n    const data = props.data;\n    const list = [];\n    for (let key in data) {\n      const convertedKey = new stringMethods(key)\n        .camelStringToText()\n        .firstCharUpperCase()\n        .getString();\n   \n      if (key !== \"_id\" && key !== \"name\") {\n        list.push(\n          <li key={key}>\n            {convertedKey}: {data[key]}\n          </li>\n        );\n      }\n    }\n    return list;\n  };\n\n  return (\n    <div>\n      <Header />\n      <h1>{firstName} {lastName}</h1>\n      <ul>{showAllProperities()}</ul>\n    </div>\n  );\n};\n\nClient.getInitialProps = async (context: any) => {\n  const { id } = context.query;\n  const res = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients/${id}`,\n    responseType: \"json\"\n  });\n  const data = await res.data;\n  return { data };\n};\n\nexport default Client;\n"]},"metadata":{},"sourceType":"module"}