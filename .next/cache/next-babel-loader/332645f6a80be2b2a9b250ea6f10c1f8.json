{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/TableBody.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport uniqid from \"uniqid\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\"; //TODO Filtrují se i polé které neexistujou na straně body\n\nvar TableBody = function TableBody(_ref) {\n  var clients = _ref.clients,\n      reverse = _ref.reverse,\n      sort = _ref.sort,\n      fields = _ref.fields,\n      handleCheckbox = _ref.handleCheckbox;\n\n  if (fields.some(function (e) {\n    return e.fieldName === sort && e.fieldType === \"number\";\n  })) {\n    if (reverse) {\n      clients.sort(function (a, b) {\n        return b[sort] - a[sort];\n      });\n    } else {\n      clients.sort(function (a, b) {\n        return a[sort] - b[sort];\n      });\n    }\n  } else {\n    if (reverse) {\n      clients.sort(function (a, b) {\n        return b[sort] > a[sort] ? -1 : 1;\n      });\n    } else {\n      clients.sort(function (a, b) {\n        return b[sort] < a[sort] ? -1 : 1;\n      });\n    }\n  }\n\n  var fieldNames = [];\n  fields.forEach(function (e) {\n    return fieldNames.push(e.fieldName, e.fieldType);\n  });\n  var items = [];\n\n  for (var i = 0; i < fieldNames.length; i++) {\n    items[i] = null;\n  }\n\n  var tableClients = clients.map(function (client) {\n    var tableItem = function tableItem() {\n      for (var key in client) {\n        //show only clients data with existing fields\n        if (client[key] !== client._id && fieldNames.includes(key)) {\n          items[fieldNames.indexOf(key)] = __jsx(TableCell, {\n            key: uniqid(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, client[key]);\n        }\n      }\n\n      items = items.map(function (e) {\n        return e === null ? __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }) : e;\n      }); // // add checkbox at first position\n      // items.unshift(\n      //   <TableCell padding=\"checkbox\" key={uniqid()}>\n      //     <input\n      //       type=\"checkbox\"\n      //       checked={client.isChecked === undefined ? false : client.isChecked}\n      //       onChange={() => handleCheckbox(client._id)}\n      //     />\n      //   </TableCell>\n      // );\n      // // add profile link at last position\n      // items.push(\n      //   <TableCell key={uniqid()}>\n      //     <Link href=\"/clients/[id]\" as={`/clients/${client._id}`}>\n      //       <a>Go</a>\n      //     </Link>\n      //   </TableCell>\n      // );\n\n      return items;\n    };\n\n    return __jsx(TableRow, {\n      key: client._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, tableItem());\n  });\n  return tableClients;\n};\n\nexport default TableBody;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/clients/TableBody.tsx"],"names":["uniqid","TableCell","TableRow","TableBody","clients","reverse","sort","fields","handleCheckbox","some","e","fieldName","fieldType","a","b","fieldNames","forEach","push","items","i","length","tableClients","map","client","tableItem","key","_id","includes","indexOf"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\nimport uniqid from \"uniqid\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\n//TODO Filtrují se i polé které neexistujou na straně body\n\ninterface IProps {\n  clients: any;\n  reverse: boolean;\n  sort: string;\n  fields: any;\n  handleCheckbox: any;\n}\n\nconst TableBody = ({\n  clients,\n  reverse,\n  sort,\n  fields,\n  handleCheckbox\n}: IProps) => {\n  if (fields.some(e => e.fieldName === sort && e.fieldType === \"number\")) {\n    if (reverse) {\n      clients.sort((a: any, b: any) => b[sort] - a[sort]);\n    } else {\n      clients.sort((a: any, b: any) => a[sort] - b[sort]);\n    }\n  } else {\n    if (reverse) {\n      clients.sort((a: any, b: any) => (b[sort] > a[sort] ? -1 : 1));\n    } else {\n      clients.sort((a: any, b: any) => (b[sort] < a[sort] ? -1 : 1));\n    }\n  }\n\n  const fieldNames = [];\n\n  fields.forEach((e: any) => fieldNames.push(e.fieldName, e.fieldType));\n\n  let items = []\n\n  for (let i = 0; i < fieldNames.length; i++) {\n    items[i] = null\n  }\n\n  const tableClients = clients.map((client: any) => {\n    const tableItem = () => {\n      for (let key in client) {\n        //show only clients data with existing fields\n        if (client[key] !== client._id && fieldNames.includes(key)) {\n          items[fieldNames.indexOf(key)] = (\n            <TableCell key={uniqid()}>{client[key]}</TableCell>\n          );\n        }\n      }\n\n      items = items.map(e => e === null ? <td></td> : e);\n\n      // // add checkbox at first position\n      // items.unshift(\n      //   <TableCell padding=\"checkbox\" key={uniqid()}>\n      //     <input\n      //       type=\"checkbox\"\n      //       checked={client.isChecked === undefined ? false : client.isChecked}\n      //       onChange={() => handleCheckbox(client._id)}\n      //     />\n      //   </TableCell>\n      // );\n      // // add profile link at last position\n      // items.push(\n      //   <TableCell key={uniqid()}>\n      //     <Link href=\"/clients/[id]\" as={`/clients/${client._id}`}>\n      //       <a>Go</a>\n      //     </Link>\n      //   </TableCell>\n      // );\n      return items;\n    };\n\n    return <TableRow key={client._id}>{tableItem()}</TableRow>;\n  });\n  return tableClients;\n};\n\nexport default TableBody;\n"]},"metadata":{},"sourceType":"module"}