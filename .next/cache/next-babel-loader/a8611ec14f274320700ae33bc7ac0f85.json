{"ast":null,"code":"export const handleAddingToWF = (dispatch, state, counter, setCounter, e) => {\n  console.log(e.target.getAttribute('data-value'));\n  state.map(field => {\n    if (field.fieldName === e.target.getAttribute('data-value')) {\n      // console.log();\n      if (field.fieldType !== \"select\") {\n        dispatch({\n          type: \"addToWF\",\n          payload: {\n            fieldName: e.target.value,\n            counter\n          }\n        });\n        setCounter(prevCount => prevCount + 1);\n      } else {\n        console.log(\"not select\");\n        dispatch({\n          type: \"pauseSelect\",\n          payload: {\n            fieldName: e.target.value\n          }\n        });\n      }\n    }\n  });\n};\nexport const addVisibleSelect = (dispatch, setCounter, counter, e) => {\n  dispatch({\n    type: \"addVisibleSelectWF\",\n    payload: {\n      fieldName: e.currentTarget.id,\n      counter\n    }\n  });\n  setCounter(prevCount => prevCount + 1);\n};\nexport const addHiddenSelect = (dispatch, setCounter, counter, e) => {\n  dispatch({\n    type: \"addHiddenSelectWF\",\n    payload: {\n      optionValue: e.target.value,\n      counter\n    }\n  });\n  setCounter(prevCount => prevCount + 1);\n};\nexport const removeFromList = (dispatch, e) => {\n  dispatch({\n    type: \"removeFromWF\",\n    payload: {\n      fieldName: e.target.id\n    }\n  });\n};\nexport const showOptionsOnClick = dispatch => {\n  dispatch({\n    type: \"addNotVisibleValue\"\n  });\n};","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/actions/fieldsAction.tsx"],"names":["handleAddingToWF","dispatch","state","counter","setCounter","e","console","log","target","getAttribute","map","field","fieldName","fieldType","type","payload","value","prevCount","addVisibleSelect","currentTarget","id","addHiddenSelect","optionValue","removeFromList","showOptionsOnClick"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,OAAlB,EAA2BC,UAA3B,EAAuCC,CAAvC,KAA6C;AAC3EC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,YAAtB,CAAZ;AACAP,EAAAA,KAAK,CAACQ,GAAN,CAAUC,KAAK,IAAI;AACjB,QAAIA,KAAK,CAACC,SAAN,KAAoBP,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,YAAtB,CAAxB,EAA6D;AAC3D;AACA,UAAIE,KAAK,CAACE,SAAN,KAAoB,QAAxB,EAAkC;AAChCZ,QAAAA,QAAQ,CAAC;AACPa,UAAAA,IAAI,EAAE,SADC;AAEPC,UAAAA,OAAO,EAAE;AAAEH,YAAAA,SAAS,EAAEP,CAAC,CAACG,MAAF,CAASQ,KAAtB;AAA6Bb,YAAAA;AAA7B;AAFF,SAAD,CAAR;AAIAC,QAAAA,UAAU,CAACa,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAV;AACD,OAND,MAMO;AACLX,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAN,QAAAA,QAAQ,CAAC;AACPa,UAAAA,IAAI,EAAE,aADC;AAEPC,UAAAA,OAAO,EAAE;AAAEH,YAAAA,SAAS,EAAEP,CAAC,CAACG,MAAF,CAASQ;AAAtB;AAFF,SAAD,CAAR;AAID;AACF;AACF,GAjBD;AAkBD,CApBM;AAqBP,OAAO,MAAME,gBAAgB,GAAG,CAACjB,QAAD,EAAWG,UAAX,EAAuBD,OAAvB,EAAgCE,CAAhC,KAAsC;AACpEJ,EAAAA,QAAQ,CAAC;AACPa,IAAAA,IAAI,EAAE,oBADC;AAEPC,IAAAA,OAAO,EAAE;AAAEH,MAAAA,SAAS,EAAEP,CAAC,CAACc,aAAF,CAAgBC,EAA7B;AAAiCjB,MAAAA;AAAjC;AAFF,GAAD,CAAR;AAIAC,EAAAA,UAAU,CAACa,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAV;AACD,CANM;AAQP,OAAO,MAAMI,eAAe,GAAG,CAACpB,QAAD,EAAWG,UAAX,EAAuBD,OAAvB,EAAgCE,CAAhC,KAAsC;AACnEJ,EAAAA,QAAQ,CAAC;AACPa,IAAAA,IAAI,EAAE,mBADC;AAEPC,IAAAA,OAAO,EAAE;AAAEO,MAAAA,WAAW,EAAEjB,CAAC,CAACG,MAAF,CAASQ,KAAxB;AAA+Bb,MAAAA;AAA/B;AAFF,GAAD,CAAR;AAIAC,EAAAA,UAAU,CAACa,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAV;AACD,CANM;AAQP,OAAO,MAAMM,cAAc,GAAG,CAACtB,QAAD,EAAWI,CAAX,KAAiB;AAC7CJ,EAAAA,QAAQ,CAAC;AACPa,IAAAA,IAAI,EAAE,cADC;AAEPC,IAAAA,OAAO,EAAE;AAAEH,MAAAA,SAAS,EAAEP,CAAC,CAACG,MAAF,CAASY;AAAtB;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAMI,kBAAkB,GAAIvB,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AACPa,IAAAA,IAAI,EAAE;AADC,GAAD,CAAR;AAGD,CAJM","sourcesContent":["export const handleAddingToWF = (dispatch, state, counter, setCounter, e) => {\n  console.log(e.target.getAttribute('data-value'));\n  state.map(field => {\n    if (field.fieldName === e.target.getAttribute('data-value')) {\n      // console.log();\n      if (field.fieldType !== \"select\") {\n        dispatch({\n          type: \"addToWF\",\n          payload: { fieldName: e.target.value, counter }\n        });\n        setCounter(prevCount => prevCount + 1);\n      } else {\n        console.log(\"not select\");\n        dispatch({\n          type: \"pauseSelect\",\n          payload: { fieldName: e.target.value }\n        });\n      }\n    }\n  });\n};\nexport const addVisibleSelect = (dispatch, setCounter, counter, e) => {\n  dispatch({\n    type: \"addVisibleSelectWF\",\n    payload: { fieldName: e.currentTarget.id, counter }\n  });\n  setCounter(prevCount => prevCount + 1);\n};\n\nexport const addHiddenSelect = (dispatch, setCounter, counter, e) => {\n  dispatch({\n    type: \"addHiddenSelectWF\",\n    payload: { optionValue: e.target.value, counter }\n  });\n  setCounter(prevCount => prevCount + 1);\n};\n\nexport const removeFromList = (dispatch, e) => {\n  dispatch({\n    type: \"removeFromWF\",\n    payload: { fieldName: e.target.id }\n  });\n};\n\nexport const showOptionsOnClick = (dispatch) => {\n  dispatch({\n    type: \"addNotVisibleValue\"\n  });\n};\n"]},"metadata":{},"sourceType":"module"}