{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from \"react\";\nimport Link from \"next/link\";\nimport uniqid from \"uniqid\";\nimport UserContext from \"../UserContext\";\nimport languages from \"../../library/languages\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport { TableCell, TableRow, Checkbox, Button } from '@material-ui/core';\n\nvar TableBody = function TableBody(_ref) {\n  var clients = _ref.clients,\n      sort = _ref.sort,\n      fields = _ref.fields,\n      handleCheckbox = _ref.handleCheckbox;\n  var sortBy = sort.sortBy,\n      reverse = sort.reverse;\n  var user = useContext(UserContext); // field we want to filter is type number -> return true and filter it correctly -> 23 > 4\n\n  if (fields.some(function (e) {\n    return e.fieldName === sortBy && e.fieldType === \"number\";\n  })) {\n    clients.sort(function (a, b) {\n      return reverse ? b[sortBy] - a[sortBy] : a[sortBy] - b[sortBy];\n    });\n  } else {\n    clients.sort(function (a, b) {\n      return reverse ? b[sortBy] > a[sortBy] ? -1 : 1 : b[sortBy] < a[sortBy] ? -1 : 1;\n    });\n  }\n\n  var fieldNames = [];\n  fields.forEach(function (e) {\n    return fieldNames.push(e.fieldName);\n  });\n  var tableClients = clients.map(function (client) {\n    var items = [];\n\n    for (var i = 0; i < fieldNames.length; i++) {\n      items[i] = null;\n    }\n\n    var tableItem = function tableItem() {\n      for (var key in client) {\n        //show only clients data with existing fields\n        if (client[key] !== client._id && fieldNames.includes(key)) {\n          items[fieldNames.indexOf(key)] = __jsx(TableCell, {\n            key: uniqid()\n          }, client[key]);\n        }\n      } // add put checkbox at first position\n\n\n      items.unshift(__jsx(TableCell, {\n        padding: \"checkbox\",\n        key: uniqid()\n      }, __jsx(Checkbox, {\n        color: \"primary\",\n        checked: client.isChecked === undefined ? false : client.isChecked,\n        onChange: function onChange() {\n          return handleCheckbox(client._id);\n        },\n        inputProps: {\n          'aria-label': 'primary checkbox'\n        }\n      }))); // add put profile link at last position\n\n      items.push(__jsx(TableCell, {\n        key: uniqid()\n      }, __jsx(Link, {\n        href: \"/client/[id]/?key=\".concat(user.user.userkey),\n        as: \"/client/\".concat(client._id, \"/?key=\").concat(user.user.userkey)\n      }, __jsx(Button, {\n        startIcon: __jsx(PersonIcon, null)\n      }, languages.en.go))));\n      items = items.map(function (e) {\n        return e === null ? __jsx(TableCell, {\n          key: uniqid()\n        }) : e;\n      });\n      return items;\n    };\n\n    return __jsx(TableRow, {\n      key: client._id,\n      hover: true\n    }, tableItem());\n  });\n  return tableClients;\n};\n\nexport default TableBody;","map":null,"metadata":{},"sourceType":"module"}