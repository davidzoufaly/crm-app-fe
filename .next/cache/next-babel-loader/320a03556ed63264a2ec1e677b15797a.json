{"ast":null,"code":"var _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormVisibleOrNot from \"./WebFormVisibleOrNot\";\nimport WebFormSubSelect from \"./WebFormSubSelect\";\nimport WebFormButtons from \"./WebFormButtons\";\nimport WebFormReducer from \"../../../reducers/webFormReducer\";\nimport globalVars from \"../../../library/globalVariables\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => createStyles({\n  formWrapper: {\n    marginTop: theme.spacing(3),\n    borderRadius: theme.spacing(1),\n    boxShadow: theme.shadows[\"1\"],\n    padding: theme.spacing(3),\n    backgroundColor: theme.palette.grey[\"200\"],\n    width: \"50%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\"\n    }\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst WebForm = ({\n  fields\n}) => {\n  const initCounterValue = fields.map(e => e.order).sort((a, b) => b > a ? 1 : -1)[0];\n  const classes = useStyles({});\n  const user = useContext(UserContext);\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(WebFormReducer, fields);\n  const {\n    0: counter,\n    1: setCounter\n  } = useState(initCounterValue);\n\n  const addNotSelect = e => {\n    state.map(field => {\n      if (field.fieldName === e.target.value) {\n        if (field.fieldType !== \"select\") {\n          dispatch({\n            type: \"addToWF\",\n            payload: {\n              fieldName: e.target.value,\n              counter\n            }\n          });\n          setCounter(prevCount => prevCount + 1);\n        } else {\n          dispatch({\n            type: \"pauseSelect\",\n            payload: {\n              fieldName: e.target.value\n            }\n          });\n        }\n      }\n    });\n  };\n\n  const addVisibleSelect = e => {\n    dispatch({\n      type: \"addVisibleSelectWF\",\n      payload: {\n        fieldName: e.currentTarget.id,\n        counter\n      }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const addHiddenSelect = e => {\n    dispatch({\n      type: \"addHiddenSelectWF\",\n      payload: {\n        optionValue: e.target.value,\n        counter\n      }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const removeFromList = e => {\n    dispatch({\n      type: \"removeFromFW\",\n      payload: {\n        fieldName: e.currentTarget.id\n      }\n    });\n  };\n\n  const showOptionsOnClick = () => {\n    dispatch({\n      type: \"addNotVisibleValue\"\n    });\n  };\n\n  const saveFormAuto = async () => {\n    await axios({\n      method: \"PUT\",\n      url: `${globalVars.serverURL}/fields`,\n      params: {\n        key: user.user.userkey\n      },\n      data: state,\n      responseType: \"json\"\n    });\n  };\n\n  useEffect(() => {\n    //save fields (form) on change\n    state !== fields ? saveFormAuto() : null;\n  }, [state]);\n  return __jsx(Box, {\n    className: classes.formWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(WebFormSelect, {\n    webFields: state,\n    addNotSelect: addNotSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), __jsx(WebFormVisibleOrNot, {\n    webFields: state,\n    addVisibleSelect: addVisibleSelect,\n    showOptionsOnClick: showOptionsOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), __jsx(WebFormSubSelect, {\n    webFields: state,\n    addHiddenSelect: addHiddenSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), __jsx(WebFormList, {\n    webFields: state,\n    removeFromList: removeFromList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), __jsx(WebFormButtons, {\n    state: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })));\n};\n\nexport default WebForm;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/webform/WebForm.tsx"],"names":["useReducer","useState","useEffect","useContext","axios","UserContext","WebFormSelect","WebFormList","WebFormVisibleOrNot","WebFormSubSelect","WebFormButtons","WebFormReducer","globalVars","createStyles","makeStyles","Box","useStyles","theme","formWrapper","marginTop","spacing","borderRadius","boxShadow","shadows","padding","backgroundColor","palette","grey","width","breakpoints","down","textField","WebForm","fields","initCounterValue","map","e","order","sort","a","b","classes","user","state","dispatch","counter","setCounter","addNotSelect","field","fieldName","target","value","fieldType","type","payload","prevCount","addVisibleSelect","currentTarget","id","addHiddenSelect","optionValue","removeFromList","showOptionsOnClick","saveFormAuto","method","url","serverURL","params","key","userkey","data","responseType"],"mappings":"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","sourcesContent":["import { useReducer, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../UserContext\";\nimport WebFormSelect from \"./WebFormSelect\";\nimport WebFormList from \"./WebFormList\";\nimport WebFormVisibleOrNot from \"./WebFormVisibleOrNot\";\nimport WebFormSubSelect from \"./WebFormSubSelect\";\nimport WebFormButtons from \"./WebFormButtons\";\nimport WebFormReducer from \"../../../reducers/webFormReducer\";\nimport globalVars from \"../../../library/globalVariables\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formWrapper: {\n      marginTop: theme.spacing(3),\n      borderRadius: theme.spacing(1),\n      boxShadow: theme.shadows[\"1\"],\n      padding: theme.spacing(3),\n      backgroundColor: theme.palette.grey[\"200\"],\n      width: \"50%\",\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\"\n      }\n    },\n    textField: {\n      marginTop: theme.spacing(2)\n    }\n  })\n);\n\nconst WebForm = ({ fields }) => {\n  const initCounterValue = fields\n    .map(e => e.order)\n    .sort((a, b) => (b > a ? 1 : -1))[0];\n  const classes = useStyles({});\n  const user = useContext(UserContext);\n\n  const [state, dispatch] = useReducer(WebFormReducer, fields);\n  const [counter, setCounter] = useState(initCounterValue);\n\n  const addNotSelect = e => {\n    state.map(field => {\n      if (field.fieldName === e.target.value) {\n        if (field.fieldType !== \"select\") {\n          dispatch({\n            type: \"addToWF\",\n            payload: { fieldName: e.target.value, counter }\n          });\n          setCounter(prevCount => prevCount + 1);\n        } else {\n          dispatch({\n            type: \"pauseSelect\",\n            payload: { fieldName: e.target.value }\n          });\n        }\n      }\n    });\n  };\n  const addVisibleSelect = e => {\n    dispatch({\n      type: \"addVisibleSelectWF\",\n      payload: { fieldName: e.currentTarget.id, counter }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const addHiddenSelect = e => {\n    dispatch({\n      type: \"addHiddenSelectWF\",\n      payload: { optionValue: e.target.value, counter }\n    });\n    setCounter(prevCount => prevCount + 1);\n  };\n\n  const removeFromList = e => {\n    dispatch({\n      type: \"removeFromFW\",\n      payload: { fieldName: e.currentTarget.id }\n    });\n  };\n\n  const showOptionsOnClick = () => {\n    dispatch({\n      type: \"addNotVisibleValue\"\n    });\n  };\n\n  const saveFormAuto = async () => {\n    await axios({\n      method: \"PUT\",\n      url: `${globalVars.serverURL}/fields`,\n      params: { key: user.user.userkey },\n      data: state,\n      responseType: \"json\"\n    });\n  };\n\n  useEffect(() => {\n    //save fields (form) on change\n    state !== fields ? saveFormAuto() : null;\n  }, [state]);\n\n  return (\n    <Box className={classes.formWrapper}>\n      <form>\n        <WebFormSelect webFields={state} addNotSelect={addNotSelect} />\n        <WebFormVisibleOrNot\n          webFields={state}\n          addVisibleSelect={addVisibleSelect}\n          showOptionsOnClick={showOptionsOnClick}\n        />\n        <WebFormSubSelect\n          webFields={state}\n          addHiddenSelect={addHiddenSelect}\n        />\n        <WebFormList webFields={state} removeFromList={removeFromList} />\n        <WebFormButtons state={state} />\n      </form>\n    </Box>\n  );\n};\n\nexport default WebForm;\n"]},"metadata":{},"sourceType":"module"}