{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/EmailSettings.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport { useState, useRef } from \"react\";\nimport globalVars from \"../../library/globalVariables\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst EmailSettings = ({\n  data\n}) => {\n  const {\n    0: emailSettings,\n    1: setEmailSettings\n  } = useState(data);\n  const passEl = useRef(null);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const {\n      username,\n      pass\n    } = emailSettings;\n    const res = await axios({\n      method: \"post\",\n      url: `${globalVars.serverURL}/emails`,\n      data: {\n        username,\n        pass\n      },\n      responseType: \"json\"\n    });\n    const data = res.data;\n\n    if (data === \"Success\") {\n      alert(\"Your email settings has been successfully changed!\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const showPass = e => {\n    e.preventDefault();\n    passEl.current.type = \"text\"; // e.target.parentElement.setAttribute(\"disabled\", \"\")\n\n    console.log(e.target.parentElement);\n  };\n\n  const onChange = e => {\n    setEmailSettings(_objectSpread({}, emailSettings, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"E-mail account\"), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"acc-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"input\", {\n    id: \"acc-name\",\n    type: \"text\",\n    name: \"username\",\n    value: emailSettings.username,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"acc-pass\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Password\"), __jsx(\"input\", {\n    id: \"acc-pass\",\n    type: \"password\",\n    name: \"pass\",\n    ref: passEl,\n    value: emailSettings.pass,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: showPass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Show Password\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Save\")));\n};\n\nexport default EmailSettings;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/settings/EmailSettings.tsx"],"names":["axios","useState","useRef","globalVars","Button","Typography","EmailSettings","data","emailSettings","setEmailSettings","passEl","onSubmit","e","preventDefault","username","pass","res","method","url","serverURL","responseType","alert","showPass","current","type","console","log","target","parentElement","onChange","name","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState, useRef } from \"react\";\nimport globalVars from \"../../library/globalVariables\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst EmailSettings = ({ data }: any) => {\n  const [emailSettings, setEmailSettings] = useState(data);\n  const passEl = useRef(null);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    const {username, pass} = emailSettings;\n\n    const res = await axios({\n      method: \"post\",\n      url: `${globalVars.serverURL}/emails`,\n      data: {username, pass},\n      responseType: \"json\"\n    });\n    const data = res.data;\n    if (data === \"Success\") {\n      alert(\"Your email settings has been successfully changed!\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const showPass = (e) => {\n      e.preventDefault();\n      passEl.current.type = \"text\";\n      // e.target.parentElement.setAttribute(\"disabled\", \"\")\n      console.log(e.target.parentElement);\n  }\n\n  const onChange = e => {\n    setEmailSettings({ ...emailSettings, [e.target.name]: e.target.value });\n  };\n  return (\n    <>\n    <Typography variant=\"h4\" component=\"h2\" gutterBottom>E-mail account</Typography>\n    <form onSubmit={onSubmit}>\n      <label htmlFor=\"acc-name\">Name</label>\n      <input\n        id=\"acc-name\"\n        type=\"text\"\n        name=\"username\"\n        value={emailSettings.username}\n        onChange={onChange}\n      />\n      <label htmlFor=\"acc-pass\">Password</label>\n      <input\n        id=\"acc-pass\"\n        type=\"password\"\n        name=\"pass\"\n        ref={passEl}\n        value={emailSettings.pass}\n        onChange={onChange}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={showPass}>Show Password</Button>\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">Save</Button>\n    </form>\n    </>\n  );\n};\n\nexport default EmailSettings;\n"]},"metadata":{},"sourceType":"module"}