{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useReducer } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\nimport TableBody from \"../components/clientTable/TableBody\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport TableHead from \"../components/clientTable/TableHead\";\nimport CreateClient from \"../components/CreateClient\";\nimport Buttons from \"../components/clientTable/Buttons\";\n\nvar Clients = function Clients(_ref) {\n  var fieldData = _ref.fieldData,\n      clientData = _ref.clientData;\n  var router = useRouter();\n\n  var _useReducer = useReducer(function (state, action) {\n    switch (action.type) {\n      case \"handleCheckedClients\":\n        return _objectSpread({}, state, {\n          isChecked: state.filter(function (client) {\n            return client._id === action.payload.id;\n          }).map(function (client) {\n            return client.isChecked === false || client.isChecked === undefined ? _objectSpread({}, client, {\n              isChecked: true\n            }) : _objectSpread({}, client, {\n              isChecked: false\n            });\n          })\n        });\n\n      case \"addClient\":\n        return [].concat(_toConsumableArray(state), [action.payload.newClient]);\n\n      case \"deleteCheckedClients\":\n        return state.filter(function (client) {\n          return !client.isChecked;\n        });\n\n      default:\n        return state;\n    }\n  }, clientData),\n      clients = _useReducer[0],\n      setClients = _useReducer[1]; //TODO: SPOJIT DO JEDNOHO STATU\n\n\n  var _useState = useState(false),\n      reverse = _useState[0],\n      setReverseOrder = _useState[1];\n\n  var _useState2 = useState(\"firstName\"),\n      sort = _useState2[0],\n      setSortBy = _useState2[1]; //\n\n\n  var _useState3 = useState(false),\n      initialized = _useState3[0],\n      setInitialized = _useState3[1];\n\n  var _useState4 = useState(false),\n      isClientAdded = _useState4[0],\n      setIsClientAdded = _useState4[1];\n\n  useEffect(function () {\n    console.log(clients);\n    var title = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().addStringToEnd(globalVars.titleSubText).getString();\n    document.title = title;\n    setInitialized(true);\n  });\n  var h1 = new stringMethods(router.pathname).removeSlash().firstCharUpperCase().getString();\n\n  var sortBy = function sortBy(fieldName) {\n    setSortBy(fieldName);\n    !reverse ? setReverseOrder(true) : setReverseOrder(false);\n  };\n\n  var toggleIsClientAdded = function toggleIsClientAdded() {\n    isClientAdded ? setIsClientAdded(false) : setIsClientAdded(true);\n  };\n\n  var handleCheckbox = function handleCheckbox(id) {\n    setClients({\n      type: \"handleCheckedClients\",\n      payload: {\n        id: id\n      }\n    });\n  };\n\n  var addNewClientToState = function addNewClientToState(newClient) {\n    setClients({\n      type: \"addClient\",\n      payload: {\n        newClient: newClient\n      }\n    });\n  };\n\n  var deleteMultipleClients =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var clientsToDelete;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setClients({\n                type: \"deleteCheckedClients\"\n              });\n              clientsToDelete = clients.filter(function (client) {\n                return client.isChecked;\n              }).map(function (e) {\n                return e._id;\n              });\n              _context.next = 4;\n              return axios({\n                method: \"delete\",\n                data: clientsToDelete,\n                url: \"\".concat(globalVars.serverURL, \"/clients/\"),\n                responseType: \"json\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function deleteMultipleClients() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return !initialized ? \"Loading...\" : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, h1), __jsx(CreateClient, {\n    fields: fieldData,\n    isClientAdded: isClientAdded,\n    toggleIsClientAdded: toggleIsClientAdded,\n    addNewClientToState: addNewClientToState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), __jsx(Buttons, {\n    disabled: !clients.some(function (client) {\n      return client.isChecked;\n    }),\n    deleteMultipleClients: deleteMultipleClients,\n    toggleIsClientAdded: toggleIsClientAdded,\n    isClientAdded: isClientAdded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    fields: fieldData,\n    sortBy: sortBy,\n    reverse: reverse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(TableBody, {\n    clients: clients,\n    fields: fieldData,\n    sort: sort,\n    reverse: reverse,\n    handleCheckbox: handleCheckbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))));\n};\n\nClients.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee2() {\n  var clientRes, clientData, fieldRes, fieldData;\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return axios({\n            method: \"get\",\n            url: \"\".concat(globalVars.serverURL, \"/clients\"),\n            responseType: \"json\"\n          });\n\n        case 2:\n          clientRes = _context2.sent;\n          _context2.next = 5;\n          return clientRes.data;\n\n        case 5:\n          clientData = _context2.sent;\n          _context2.next = 8;\n          return axios({\n            method: \"get\",\n            url: \"\".concat(globalVars.serverURL, \"/fields\"),\n            responseType: \"json\"\n          });\n\n        case 8:\n          fieldRes = _context2.sent;\n          _context2.next = 11;\n          return fieldRes.data;\n\n        case 11:\n          fieldData = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            clientData: clientData,\n            fieldData: fieldData\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n}));\nexport default Clients;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/pages/clients.tsx"],"names":["useState","useEffect","useReducer","useRouter","axios","Header","TableBody","stringMethods","globalVars","TableHead","CreateClient","Buttons","Clients","fieldData","clientData","router","state","action","type","isChecked","filter","client","_id","payload","id","map","undefined","newClient","clients","setClients","reverse","setReverseOrder","sort","setSortBy","initialized","setInitialized","isClientAdded","setIsClientAdded","console","log","title","pathname","removeSlash","firstCharUpperCase","addStringToEnd","titleSubText","getString","document","h1","sortBy","fieldName","toggleIsClientAdded","handleCheckbox","addNewClientToState","deleteMultipleClients","clientsToDelete","e","method","data","url","serverURL","responseType","some","getInitialProps","clientRes","fieldRes"],"mappings":"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","sourcesContent":["import { useState, useEffect, useReducer } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\nimport TableBody from \"../components/clientTable/TableBody\";\nimport stringMethods from \"../library/stringMethods\";\nimport globalVars from \"../library/globalVariables\";\nimport TableHead from \"../components/clientTable/TableHead\";\nimport CreateClient from \"../components/CreateClient\";\nimport Buttons from \"../components/clientTable/Buttons\";\n\nconst Clients = ({ fieldData, clientData }: any) => {\n  const router = useRouter();\n\n  const [clients, setClients] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"handleCheckedClients\":\n        return {\n          ...state,\n          isChecked: state.filter(client => client._id === action.payload.id).map(client => client.isChecked === false || client.isChecked === undefined ? {...client, isChecked: true} : {...client, isChecked: false})\n        };\n      case \"addClient\":\n        return [...state, action.payload.newClient];\n      case \"deleteCheckedClients\":\n        return state.filter(client => !client.isChecked);\n      default:\n        return state;\n    }\n  }, clientData);\n  //TODO: SPOJIT DO JEDNOHO STATU\n  const [reverse, setReverseOrder] = useState(false);\n  const [sort, setSortBy] = useState(\"firstName\");\n  //\n  const [initialized, setInitialized] = useState(false);\n  const [isClientAdded, setIsClientAdded] = useState(false);\n\n  useEffect(() => {\n    console.log(clients);\n\n    const title = new stringMethods(router.pathname)\n      .removeSlash()\n      .firstCharUpperCase()\n      .addStringToEnd(globalVars.titleSubText)\n      .getString();\n    document.title = title;\n    setInitialized(true);\n  });\n\n  const h1 = new stringMethods(router.pathname)\n    .removeSlash()\n    .firstCharUpperCase()\n    .getString();\n\n  const sortBy = fieldName => {\n    setSortBy(fieldName);\n    !reverse ? setReverseOrder(true) : setReverseOrder(false);\n  };\n\n  const toggleIsClientAdded = () => {\n    isClientAdded ? setIsClientAdded(false) : setIsClientAdded(true);\n  };\n\n  const handleCheckbox = id => {\n    setClients({\n      type: \"handleCheckedClients\",\n      payload: { id }\n    });\n  };\n\n  const addNewClientToState = newClient => {\n    setClients({\n      type: \"addClient\",\n      payload: { newClient }\n    });\n  };\n\n  const deleteMultipleClients = async () => {\n    setClients({\n      type: \"deleteCheckedClients\"\n    });\n\n    const clientsToDelete = clients\n      .filter(client => client.isChecked)\n      .map(e => e._id);\n\n    await axios({\n      method: \"delete\",\n      data: clientsToDelete,\n      url: `${globalVars.serverURL}/clients/`,\n      responseType: \"json\"\n    });\n  };\n\n  return !initialized ? (\n    \"Loading...\"\n  ) : (\n    <div>\n      <Header />\n      <h1>{h1}</h1>\n      <CreateClient\n        fields={fieldData}\n        isClientAdded={isClientAdded}\n        toggleIsClientAdded={toggleIsClientAdded}\n        addNewClientToState={addNewClientToState}\n      />\n      <Buttons\n        disabled={!clients.some(client => client.isChecked)}\n        deleteMultipleClients={deleteMultipleClients}\n        toggleIsClientAdded={toggleIsClientAdded}\n        isClientAdded={isClientAdded}\n      />\n      <table>\n        <TableHead fields={fieldData} sortBy={sortBy} reverse={reverse} />\n        <tbody>\n          <TableBody\n            clients={clients}\n            fields={fieldData}\n            sort={sort}\n            reverse={reverse}\n            handleCheckbox={handleCheckbox}\n          />\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nClients.getInitialProps = async () => {\n  //fetch clients\n  const clientRes = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/clients`,\n    responseType: \"json\"\n  });\n  const clientData = await clientRes.data;\n\n  //fetch fields\n  const fieldRes = await axios({\n    method: \"get\",\n    url: `${globalVars.serverURL}/fields`,\n    responseType: \"json\"\n  });\n  const fieldData = await fieldRes.data;\n\n  return {\n    clientData,\n    fieldData\n  };\n};\n\nexport default Clients;\n"]},"metadata":{},"sourceType":"module"}