{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../UserContext\";\nimport TextInput from \"./TextInput\";\nimport Button from \"./Button\";\nimport globalVars from \"../../library/globalVariables\";\nimport languages from \"../../library/languages\";\nimport stringMethods from \"../../library/stringMethods\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nconst LoginForm = () => {\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const userContext = useContext(UserContext);\n\n  const onChange = e => {\n    e.target.name === \"username\" ? setUser(_objectSpread({}, user, {\n      username: e.target.value\n    })) : setUser(_objectSpread({}, user, {\n      password: e.target.value\n    }));\n  };\n\n  const onLogin = async () => {\n    const userRes = await axios({\n      method: \"POST\",\n      data: user,\n      url: `${globalVars.serverURL}/users/authenticate-user`,\n      responseType: \"json\"\n    });\n    const userData = await userRes.data;\n\n    if (userData.msg === \"Success\") {\n      userContext.setUser(userData.key);\n    } else {\n      alert(languages.en.somethingWentWrong);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    component: \"h2\",\n    variant: \"h4\",\n    gutterBottom: true\n  }, new stringMethods(languages.en.login).firstCharUpperCase().getString()), __jsx(\"form\", null, __jsx(TextInput, {\n    onChange: onChange,\n    type: \"text\",\n    value: user.username,\n    text: \"username\",\n    title: new stringMethods(languages.en.username).firstCharUpperCase().getString()\n  }), __jsx(TextInput, {\n    onChange: onChange,\n    type: \"password\",\n    value: user.password,\n    text: \"password\",\n    title: languages.en.password\n  }), __jsx(Box, {\n    mt: \"2rem\",\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  }, __jsx(Button, {\n    onClick: onLogin,\n    text: languages.en.login,\n    variant: \"contained\"\n  }))));\n};\n\nexport default LoginForm;","map":null,"metadata":{},"sourceType":"module"}