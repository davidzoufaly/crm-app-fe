{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/davidzoufaly/code/dp/crm-app-fe/components/AddOrEditField.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport SelectFieldOptions from \"../components/SelectFieldOptions\";\nimport uniqid from \"uniqid\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\n\nvar AddOrEditField = function AddOrEditField(_ref) {\n  var refreshList = _ref.refreshList;\n\n  var _useState = useState(false),\n      displayComponent = _useState[0],\n      setDisplayComponent = _useState[1];\n\n  var saveField =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios({\n                method: \"post\",\n                url: \"\".concat(globalVars.serverURL, \"/fields/\"),\n                data: updatedField,\n                responseType: \"json\"\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.data;\n\n            case 5:\n              data = _context.sent;\n              data.msg === \"Success\" ? changeDisplayComponent() : null;\n              refreshList();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function saveField() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onNameChange = function onNameChange(event) {\n    setUpdatedField(_objectSpread({}, updatedField, {\n      fieldName: event.target.value\n    }));\n    console.log(updatedField);\n  };\n\n  var onSelectChange = function onSelectChange(event) {\n    setUpdatedField(_objectSpread({}, updatedField, {\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    }));\n  };\n\n  var handleOptionSpawn = function handleOptionSpawn() {\n    setUpdatedField(_objectSpread({}, updatedField, {\n      fieldOptions: [].concat(_toConsumableArray(updatedField.fieldOptions), [{\n        id: uniqid(),\n        value: \"\"\n      }])\n    }));\n  };\n\n  var onChange = function onChange(event) {\n    setUpdatedField(_objectSpread({}, updatedField, {\n      fieldOptions: updatedField.fieldOptions.filter(function (e) {\n        return event.target.id === e.id ? e.value = event.target.value : e;\n      })\n    }));\n  };\n\n  var onDelete = function onDelete(event) {\n    setUpdatedField(_objectSpread({}, updatedField, {\n      fieldOptions: updatedField.fieldOptions.filter(function (e) {\n        return event.target.id !== e.id ? e : null;\n      })\n    }));\n  };\n\n  var changeDisplayComponent = function changeDisplayComponent() {\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n  };\n\n  return displayComponent ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"field-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Field name\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"field-name\",\n    defaultValue: updatedField.fieldName,\n    onChange: onNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"field-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Field type\"), __jsx(\"select\", {\n    id: \"field-type\",\n    onChange: onSelectChange,\n    defaultValue: updatedField.fieldType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Text\"), __jsx(\"option\", {\n    value: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Select\"), __jsx(\"option\", {\n    value: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Number\")), __jsx(SelectFieldOptions, {\n    options: updatedField.fieldOptions,\n    onChange: onChange,\n    onDelete: onDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), updatedField.fieldType === \"select\" ? __jsx(\"button\", {\n    onClick: handleOptionSpawn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"New\") : null, __jsx(\"button\", {\n    onClick: saveField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Save\"), __jsx(\"button\", {\n    onClick: changeDisplayComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Cancel\")) : __jsx(\"button\", {\n    onClick: changeDisplayComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Add new field\");\n};\n\nexport default AddOrEditField;","map":{"version":3,"sources":["/Users/davidzoufaly/code/dp/crm-app-fe/components/AddOrEditField.tsx"],"names":["useState","SelectFieldOptions","uniqid","axios","globalVars","AddOrEditField","refreshList","displayComponent","setDisplayComponent","saveField","method","url","serverURL","data","updatedField","responseType","res","msg","changeDisplayComponent","onNameChange","event","setUpdatedField","fieldName","target","value","console","log","onSelectChange","fieldType","options","selectedIndex","handleOptionSpawn","fieldOptions","id","onChange","filter","e","onDelete"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport SelectFieldOptions from \"../components/SelectFieldOptions\";\nimport uniqid from \"uniqid\";\nimport axios from \"axios\";\nimport globalVars from \"../library/globalVariables\";\n\nconst AddOrEditField = ({ refreshList }: any) => {\n  const [displayComponent, setDisplayComponent] = useState(false);\n\n  const saveField = async () => {\n    const res = await axios({\n      method: \"post\",\n      url: `${globalVars.serverURL}/fields/`,\n      data: updatedField,\n      responseType: \"json\"\n    });\n    const data = await res.data;\n    data.msg === \"Success\" ? changeDisplayComponent() : null;\n    refreshList();\n  };\n\n  const onNameChange = (event: any) => {\n    setUpdatedField({ ...updatedField, fieldName: event.target.value });\n    console.log(updatedField);\n  };\n\n  const onSelectChange = (event: any) => {\n    setUpdatedField({\n      ...updatedField,\n      fieldType: event.target.options[event.target.options.selectedIndex].value\n    });\n  };\n\n  const handleOptionSpawn = () => {\n    setUpdatedField({\n      ...updatedField,\n      fieldOptions: [...updatedField.fieldOptions, { id: uniqid(), value: \"\" }]\n    });\n  };\n\n  const onChange = (event: any) => {\n    setUpdatedField({\n      ...updatedField,\n      fieldOptions: updatedField.fieldOptions.filter((e: any) =>\n        event.target.id === e.id ? (e.value = event.target.value) : e\n      )\n    });\n  };\n\n  const onDelete = (event: any) => {\n    setUpdatedField({\n      ...updatedField,\n      fieldOptions: updatedField.fieldOptions.filter((e: any) =>\n        event.target.id !== e.id ? e : null\n      )\n    });\n  };\n\n  const changeDisplayComponent = () => {\n    displayComponent ? setDisplayComponent(false) : setDisplayComponent(true);\n  }\n\n  return displayComponent ? (\n    <div>\n      <label htmlFor=\"field-name\">Field name</label>\n      <input\n        type=\"text\"\n        id=\"field-name\"\n        defaultValue={updatedField.fieldName}\n        onChange={onNameChange}\n      />\n      <label htmlFor=\"field-type\">Field type</label>\n      <select\n        id=\"field-type\"\n        onChange={onSelectChange}\n        defaultValue={updatedField.fieldType}\n      >\n        <option value=\"text\">Text</option>\n        <option value=\"select\">Select</option>\n        <option value=\"number\">Number</option>\n      </select>\n      <SelectFieldOptions\n        options={updatedField.fieldOptions}\n        onChange={onChange}\n        onDelete={onDelete}\n      />\n      {updatedField.fieldType === \"select\" ? (\n        <button onClick={handleOptionSpawn}>New</button>\n      ) : null}\n      <button onClick={saveField}>Save</button>\n      <button onClick={changeDisplayComponent}>Cancel</button>\n    </div>\n  ) :  <button onClick={changeDisplayComponent}>Add new field</button>\n};\n\nexport default AddOrEditField;\n"]},"metadata":{},"sourceType":"module"}